// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/colorUtils ../../core/JSONSupport ../../core/Logger ../../core/maybe ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ../../layers/support/RasterInfo ../../layers/support/rasterFunctions/pixelUtils ../../layers/support/rasterFunctions/stretchUtils ../../layers/support/rasterFunctions/surfaceUtils ./colorRampUtils".split(" "),
function(G,z,H,x,D,r,A,N,O,I,J,t,u,C,E){function K(w,y){const {attributeTable:m,bandCount:a}=w;return r.isNone(m)||1<a||y&&null==m.fields.find(b=>b.name.toLowerCase()===y.toLowerCase())?!1:!0}function L(w){const {bandCount:y,colormap:m}=w;return r.isSome(m)&&0<m.length&&1===y}function F(w){return t.isValidPixelBlock(w)&&0!==w.validPixelCount}x=function(w){function y(a){return w.call(this,a)||this}G._inheritsLoose(y,w);var m=y.prototype;m.bind=function(){const {rendererJSON:a}=this;if(!a)return{success:!1};
this.lookup={rendererJSON:{}};let b;switch(a.type){case "uniqueValue":b=this._updateUVRenderer(a);break;case "rasterColormap":b=this._updateColormapRenderer(a);break;case "rasterStretch":b=this._updateStretchRenderer(a);break;case "classBreaks":b=this._updateClassBreaksRenderer(a);break;case "rasterShadedRelief":b=this._updateShadedReliefRenderer(a);break;case "vectorField":b=this._updateVectorFieldRenderer();break;case "flowRenderer":b=this._updateFlowRenderer()}return b};m.symbolize=function(a){let b=
a&&a.pixelBlock;if(!F(b))return b;if(a.simpleStretchParams&&"rasterStretch"===this.rendererJSON.type)return this.simpleStretch(b,a.simpleStretchParams);try{3<b.pixels.length&&(b=t.extractBands(b,[0,1,2]));let d;switch(this.rendererJSON.type){case "uniqueValue":case "rasterColormap":d=this._symbolizeColormap(b);break;case "classBreaks":d=this._symbolizeClassBreaks(b);break;case "rasterStretch":d=this._symbolizeStretch(b,a.bandIds);break;case "rasterShadedRelief":const f=a.extent;d=this._symbolizeShadedRelief(b,
{isGCS:f.spatialReference.isGeographic,resolution:{x:(f.xmax-f.xmin)/b.width,y:(f.ymax-f.ymin)/b.height}})}return d}catch(d){return D.getLogger(this.declaredClass).error("symbolize",d.message),b}};m.simpleStretch=function(a,b){if(!F(a))return a;try{return 3<a.pixels.length&&(a=t.extractBands(a,[0,1,2])),u.stretch(a,b)}catch(d){return D.getLogger(this.declaredClass).error("symbolize",d.message),a}};m.generateWebGLParameters=function(a){if(["uniqueValue","rasterColormap","classBreaks"].includes(this.rendererJSON.type)){const {indexedColormap:c,
offset:k}=this.lookup.colormapLut||{};return{colormap:c,colormapOffset:k,type:"lut"}}const {pixelBlock:b,isGCS:d,resolution:f,bandIds:l}=a;({rendererJSON:a}=this);return"rasterStretch"===a.type?this._generateStretchWebGLParams(b,a,l):"rasterShadedRelief"===a.type?this._generateShadedReliefWebGLParams(a,d,f):"vectorField"===a.type?this._generateVectorFieldWebGLParams(a):null};m._isLUTChanged=function(a){if(!this.lookup||!this.lookup.rendererJSON)return!0;if("colorRamp"in this.rendererJSON){const b=
this.rendererJSON.colorRamp;if(a)return JSON.stringify(b)!==JSON.stringify(this.lookup.rendererJSON.colorRamp);({...this.rendererJSON});({...this.lookup.rendererJSON})}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)};m._symbolizeColormap=function(a){return this._isLUTChanged()&&!this.bind().success?a:t.colorize(a,this.lookup.colormapLut)};m._symbolizeClassBreaks=function(a){const {canUseIndexedLUT:b}=this._analyzeClassBreaks(this.rendererJSON);return this._isLUTChanged()&&
!this.bind().success?a:b?t.colorize(a,this.lookup.colormapLut):t.remapColor(a,this.lookup.remapLut??[])};m._symbolizeStretch=function(a,b){const {rasterInfo:d}=this,{pixelType:f,bandCount:l}=d,c=this.rendererJSON;var k=["u8","u16","s8","s16"].includes(f);let e;var {dra:h}=c;({gamma:g}=this.lookup);if("histogramEqualization"===c.stretchType){k=h?null:this.lookup?.histogramLut;b=u.getStretchCutoff(c,{rasterInfo:d,pixelBlock:a,bandIds:b,returnHistogramLut:!k});var g=u.stretch(a,{...b,gamma:g});g=t.lookupPixels(g,
{lut:h?b.histogramLut:k,offset:0})}else if(k){if(h)h=u.getStretchCutoff(c,{rasterInfo:d,pixelBlock:a,bandIds:b}),e=u.createStretchLUT({pixelType:f,...h,gamma:g});else{if(this._isLUTChanged()&&!this.bind().success)return a;e=this.lookup?this.lookup.stretchLut:null}if(!e)return a;1<l&&b?.length===r.unwrap(a)?.pixels.length&&e?.lut.length===l&&(e={lut:b.map(n=>e.lut[n]),offset:e.offset});g=t.lookupPixels(a,e)}else h=u.getStretchCutoff(c,{rasterInfo:d,pixelBlock:a,bandIds:b}),g=u.stretch(a,{...h,gamma:g});
if(c.colorRamp){if(this._isLUTChanged(!0)&&!this.bind().success)return a;g=t.colorize(g,this.lookup?.colormapLut)}return g};m._symbolizeShadedRelief=function(a,b){var d=this.rendererJSON;b=C.hillshade(a,{...d,...b});if(!d.colorRamp||this._isLUTChanged(!0)&&!this.bind().success)return b;d=this.lookup?this.lookup.hsvMap:null;if(!d)return b;const f=r.unwrap(this.rasterInfo.statistics)?.[0]??{min:0,max:8E3};C.tintHillshade(b,a,d,f);return b};m._isVectorFieldData=function(){const {bandCount:a,dataType:b}=
this.rasterInfo;return 2===a&&("vector-magdir"===b||"vector-uv"===b)};m._updateVectorFieldRenderer=function(){return this._isVectorFieldData()?{success:!0}:{success:!1,error:`Unsupported data type "${this.rasterInfo.dataType}"; VectorFieldRenderer only supports "vector-magdir" and "vector-uv".`}};m._updateFlowRenderer=function(){return this._isVectorFieldData()?{success:!0}:{success:!1,error:`Unsupported data type "${this.rasterInfo.dataType}"; FlowRenderer only supports "vector-magdir" and "vector-uv".`}};
m._updateUVRenderer=function(a){const {bandCount:b,attributeTable:d,pixelType:f}=this.rasterInfo,l=a.field1;if(!l)return{success:!1,error:"Unsupported renderer; missing UniqueValueRenderer.field."};const c=a.defaultSymbol;var k=1===b&&["u8","s8"].includes(f);if(!K(this.rasterInfo,l)&&!k)return{success:!1,error:"Unsupported data; UniqueValueRenderer is only supported on single band data with a valid raster attribute table."};const e=[];if(r.isSome(d)){const h=d.fields.find(g=>"value"===g.name.toLowerCase());
if(!h)return{success:!1,error:"Unsupported data; the data's raster attribute table does not have a value field."};d.features.forEach(g=>{const n=a.uniqueValueInfos?.find(q=>String(q.value)===String(g.attributes[l]))?.symbol?.color;n?e.push([g.attributes[h.name]].concat(n)):c&&e.push([g.attributes[h.name]].concat(c.color))})}else{if("value"!==l.toLowerCase())return{success:!1,error:'Unsupported renderer; UniqueValueRenderer.field must be "Value" when raster attribute table is not availalbe.'};a.uniqueValueInfos?.forEach(h=>
{const g=h?.symbol?.color;g?e.push([parseInt(""+h.value,10)].concat(g)):c&&e.push([parseInt(""+h.value,10)].concat(c?.color))})}if(0===e.length)return{success:!1,error:"Invalid UniqueValueRenderer. Cannot find matching records in the raster attribute table."};k=t.createColormapLUT({colormap:e});this.lookup={rendererJSON:a,colormapLut:k};this.canRenderInWebGL=!0;return{success:!0}};m._updateColormapRenderer=function(a){if(!L(this.rasterInfo))return{success:!1,error:"Unsupported data; the data source does not have a colormap."};
var b=a.colormapInfos.map(d=>[d.value].concat(d.color)).sort((d,f)=>d[0]-f[0]);if(!b||0===b.length)return{success:!1,error:"Unsupported renderer; ColormapRenderer must have meaningful colormapInfos."};b=t.createColormapLUT({colormap:b});this.lookup={rendererJSON:a,colormapLut:b};this.canRenderInWebGL=!0;return{success:!0}};m._updateShadedReliefRenderer=function(a){const {bandCount:b,dataType:d,pixelType:f}=this.rasterInfo;if("elevation"!==d&&("generic"!==d||1!==b||"s16"!==f&&"f32"!==f&&"f64"!==f))return{success:!1,
error:`Unsupported data type "${this.rasterInfo.dataType}"; ShadedReliefRenderer only supports "elevation", or single band float/s16 data.`};if(a.colorRamp){var l=E.convertColorRampToColormap(a.colorRamp,256,!0);l=t.createColormapLUT({colormap:l});const c=[],k=l.indexedColormap;for(let e=0;e<k.length;e+=4){const h=H.toHSV({r:k[e],g:k[e+1],b:k[e+2]});c.push([h.h/60,h.s/100,255*h.v/100])}this.lookup={rendererJSON:a,colormapLut:l,hsvMap:c}}else this.lookup=null;this.canRenderInWebGL=!0;return{success:!0}};
m._analyzeClassBreaks=function(a){const {attributeTable:b,pixelType:d}=this.rasterInfo,f=r.isSome(b)?b.fields.find(k=>"value"===k.name.toLowerCase()):null,l=r.isSome(b)?b.fields.find(k=>k.name.toLowerCase()===a.field.toLowerCase()):null,c=null!=f&&null!==l;return{canUseIndexedLUT:["u8","u16","s8","s16"].includes(d)||c,tableValueField:f,tableBreakField:l}};m._updateClassBreaksRenderer=function(a){var {attributeTable:b}=this.rasterInfo;const {canUseIndexedLUT:d,tableValueField:f,tableBreakField:l}=
this._analyzeClassBreaks(a);var c=a.classBreakInfos;if(!c?.length)return{success:!1,error:"Unsupported renderer; missing or invalid ClassBreaksRenderer.classBreakInfos."};c=c.sort((n,q)=>n.classMaxValue-q.classMaxValue);var k=c[c.length-1],e=a.minValue;if(!d){var h=[];for(var g=0;g<c.length;g++)h.push({value:c[g].classMinValue??e,mappedColor:c[g].symbol.color}),e=c[g].classMaxValue;h.push({value:k.classMaxValue,mappedColor:k.symbol.color});this.lookup={rendererJSON:a,remapLut:h};this.canRenderInWebGL=
!1;return{success:!0}}h=[];if(r.isSome(b)&&null!=f&&null!==l&&f!==l){k=f.name;const n=l.name,q=c[c.length-1],{classMaxValue:p}=q;e=a.minValue;for(g of b.features){b=g.attributes[k];const v=g.attributes[n],B=v===p?q:v<e?null:c.find(({classMaxValue:M})=>M>v);B&&h.push([b].concat(B.symbol.color))}}else{e=Math.floor(a.minValue);for(g=0;g<c.length;g++){for(b=c[g];e<b.classMaxValue;e++)h.push([e].concat(b.symbol.color));e=Math.ceil(b.classMaxValue)}k.classMaxValue===e&&h.push([k.classMaxValue].concat(k.symbol.color))}c=
t.createColormapLUT({colormap:h,fillUnspecified:!1});this.lookup={rendererJSON:a,colormapLut:c};this.canRenderInWebGL=!0;return{success:!0}};m._isHistogramRequired=function(a){return"percentClip"===a||"histogramEqualization"===a};m._isValidRasterStatistics=function(a){return r.isSome(a)&&0<a.length&&null!=a[0].min&&null!=a[0].max};m._updateStretchRenderer=function(a){let {stretchType:b,dra:d}=a;if(!("none"===b||a.statistics?.length||this._isValidRasterStatistics(this.rasterInfo.statistics)||d))return{success:!1,
error:"Unsupported renderer; StretchRenderer.statistics is required when dynamic range adjustment is not used."};var f=r.unwrap(a.histograms||this.rasterInfo.histograms);!this._isHistogramRequired(a.stretchType)||f?.length||d||(b="minMax");const {computeGamma:l,useGamma:c,colorRamp:k}=a;var {gamma:e}=a;c&&l&&!e?.length&&(e=a.statistics?.length?a.statistics:r.unwrap(this.rasterInfo.statistics),e=u.computeGammaValues(this.rasterInfo.pixelType,e));const h=this.rasterInfo.pixelType,g=!d&&["u8","u16",
"s8","s16"].includes(h);"histogramEqualization"===b?(f=f.map(n=>u.createHistogramEqualizationLUT(n)),this.lookup={rendererJSON:a,histogramLut:f}):g&&(f=u.getStretchCutoff(a,{rasterInfo:this.rasterInfo}),f=u.createStretchLUT({pixelType:h,...f,gamma:c?e:null}),this.lookup={rendererJSON:a,stretchLut:f});k&&(f=E.convertColorRampToColormap(k,256,!0),this.lookup||(this.lookup={rendererJSON:a}),this.lookup.colormapLut=t.createColormapLUT({colormap:f}),this.lookup.rendererJSON=a);this.lookup.gamma=c&&e?.length?
e:null;this.canRenderInWebGL=!0;return{success:!0}};m._generateStretchWebGLParams=function(a,b,d){let f=null,l=null;var c=this.lookup&&this.lookup.colormapLut;b.colorRamp&&c&&(f=c.indexedColormap,l=c.offset);"histogramEqualization"===b.stretchType&&(b={...b,stretchType:"minMax"});({gamma:c}=this.lookup);const k=!!(b.useGamma&&c&&c.some(B=>1!==B)),{minCutOff:e,maxCutOff:h,outMin:g,outMax:n}=u.getStretchCutoff(b,{rasterInfo:this.rasterInfo,pixelBlock:a,bandIds:d});var q=0;r.isSome(a)&&(q=a.getPlaneCount(),
2===q&&(a=a.clone(),a.statistics=[a.statistics[0]],a.pixels=[a.pixels[0]]));a=Math.min(3,d?.length||q||this.rasterInfo.bandCount);d=new Float32Array(a);q=f||k?1:255;let p;for(p=0;p<a;p++)d[p]=(n-g)/(h[p]-e[p])/q;const v=new Float32Array(a);if(k)for(p=0;p<a;p++)v[p]=1<c[p]?2<c[p]?6.5+(c[p]-2)**2.5:6.5+100*(2-c[p])**4:1;return{bandCount:a,outMin:g/q,outMax:n/q,minCutOff:e,maxCutOff:h,factor:d,useGamma:k,gamma:k?c:[1,1,1],gammaCorrection:k?v:[1,1,1],colormap:f,colormapOffset:l,stretchType:b.stretchType,
type:"stretch"}};m._generateShadedReliefWebGLParams=function(a,b=!1,d={x:0,y:0}){let f=null,l=null;const c=this.lookup&&this.lookup.colormapLut;a.colorRamp&&c&&(f=c.indexedColormap,l=c.offset);b=C.calculateHillshadeParams({...a,isGCS:b,resolution:d});d=r.unwrap(this.rasterInfo.statistics)?.[0];return{...b,minValue:d?.min??0,maxValue:d?.max??8E3,hillshadeType:"traditional"===a.hillshadeType?0:1,type:"hillshade",colormap:f,colormapOffset:l}};m._generateVectorFieldWebGLParams=function(a){const {style:b,
inputUnit:d,outputUnit:f,visualVariables:l,symbolTileSize:c,flowRepresentation:k}=a;let e;var h=this.rasterInfo.statistics?.[0].min??0,g=this.rasterInfo.statistics?.[0].max??50,n=l?.find(v=>"sizeInfo"===v.type)??{type:"sizeInfo",field:"Magnitude",maxDataValue:g,maxSize:.8*c,minDataValue:h,minSize:.2*c},q=n.minDataValue??h,p=n.maxDataValue??g;g=r.isSome(n.maxSize)&&r.isSome(n.minSize)?[n.minSize/c,n.maxSize/c]:[.2,.8];"wind_speed"===b&&(g[0]=g[1]=(g[0]+g[1])/2);h=r.isSome(q)&&r.isSome(p)?[q,p]:null;
if("classified_arrow"===b)if(r.isSome(q)&&r.isSome(p)&&r.isSome(n))for(e=[],q=(n.maxDataValue-n.minDataValue)/5,p=0;6>p;p++)e.push(n.minDataValue+q*p);else e=[0,1E-6,3.5,7,10.5,14];n="flow_to"===k===("ocean_current_kn"===b||"ocean_current_m"===b)?0:Math.PI;q=l?.find(v=>"rotationInfo"===v.type);return{breakValues:e,dataRange:h,inputUnit:d,outputUnit:f,symbolTileSize:c,symbolPercentRange:g,style:b||"single_arrow",rotation:n,rotationType:this.rasterInfo.storageInfo?.tileInfo&&"vector-uv"===this.rasterInfo.dataType?
"geographic":q?.rotationType||a.rotationType,type:"vectorField"}};return y}(x.JSONSupport);z.__decorate([A.property({json:{write:!0}})],x.prototype,"rendererJSON",void 0);z.__decorate([A.property({type:J,json:{write:!0}})],x.prototype,"rasterInfo",void 0);z.__decorate([A.property({json:{write:!0}})],x.prototype,"lookup",void 0);z.__decorate([A.property()],x.prototype,"canRenderInWebGL",void 0);return x=z.__decorate([I.subclass("esri.renderers.support.RasterSymbolizer")],x)});