// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("require exports ../../chunks/_rollupPluginBabelHelpers ../../request ../../core/Error ../../layers/support/featureQueryAll ../../portal/PortalItem ../../rest/support/FeatureSet".split(" "),function(u,l,m,v,w,x,r,y){function n(){n=m._asyncToGenerator(function*(a){const b=a.layers,e=a.layerInfos,f=a.returnGeometry||!1,k=a.outSpatialReference;yield Promise.all(b.map(d=>d.load()));return(yield Promise.all(b.map(function(){var d=m._asyncToGenerator(function*(c){var g=e.find(z=>z.layerUrl===c.parsedUrl?.path);
if(!g||!g.objectIds?.length)return{layer:c,featureSet:void 0};const h=c.createQuery();h.returnGeometry=f;h.outFields=g.outFields||["*"];h.outSpatialReference=k;h.gdbVersion=c.gdbVersion;h.objectIds=g.objectIds;g=y.fromJSON(yield x.queryAllJSON(c,h));return{layer:c,featureSet:g}});return function(c){return d.apply(this,arguments)}}()))).filter(d=>void 0!==d.featureSet)});return n.apply(this,arguments)}function t(a,b){return p.apply(this,arguments)}function p(){p=m._asyncToGenerator(function*(a,b){return"Utility Network Layer"===
a?({default:a}=yield new Promise((e,f)=>u(["../UtilityNetwork"],k=>e(Object.freeze(Object.defineProperty({__proto__:null,default:k},Symbol.toStringTag,{value:"Module"}))),f)),new a({layerUrl:b})):null});return p.apply(this,arguments)}function q(){q=m._asyncToGenerator(function*(a){a="portalItem"in a?a:{portalItem:a};!a.portalItem||a.portalItem instanceof r||(a={...a,portalItem:new r(a.portalItem)});a=a.portalItem;yield a.load();if("Feature Service"!==a.type)throw new w("portal:unknown-item-type",
"Unknown item type '${type}'",{type:a.type});a=a.url;var b=yield v(a,{responseType:"json",query:{f:"json"}});return b.data.type&&b.data.type.includes("Network Layer")?t(b.data.type,a):b.data.layers&&(b=b.data.layers.find(e=>e.type.includes("Network Layer")))?t(b.type,`${a}/${b.id}`):null});return q.apply(this,arguments)}l.getFeaturesFromLayers=function(a){return n.apply(this,arguments)};l.getObjectIdsFromElements=function(a,b){const e=[],f=new Map;for(const d of b){b=a.getLayerIdBySourceId(d.networkSourceId);
if(null==b)continue;let c=f.get(b);void 0===c&&(c=[]);c.push(d.objectId);f.set(b,c)}const k=a.featureServiceUrl;f.forEach((d,c)=>e.push({layerUrl:`${k}/${c}`,objectIds:d}));return e};l.networkFromPortalItem=function(a){return q.apply(this,arguments)};Object.defineProperties(l,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});