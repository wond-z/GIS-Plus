// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../core/deprecate ../core/Logger ../core/accessorSupport/decorators/property ../core/arrayUtils ../core/accessorSupport/ensureType ../core/accessorSupport/decorators/subclass ../layers/FeatureLayer ../layers/support/featureQueryAll ./Network ./RulesTable ./support/NamedTraceConfiguration ./support/NetworkSystemLayers ./support/TerminalConfiguration ./support/typeUtils ../rest/support/Query".split(" "),function(t,h,w,g,l,R,S,E,F,G,H,I,
J,K,D,u,L){const x=g.getLogger("esri.networks.UtilityNetwork");g=function(C){function y(a){a=C.call(this,a)||this;a.sharedNamedTraceConfigurations=[];a.type="utility";return a}t._inheritsLoose(y,C);var m=y.prototype;m.load=function(){var a=t._asyncToGenerator(function*(d){this.addResolvingPromise(C.prototype.load.call(this,d));this.addResolvingPromise(this._loadNamedTraceConfigurationsFromNetwork(d));return this});return function(d){return a.apply(this,arguments)}}();m.getTerminalConfiguration=function(a){let d=
null,b=null;var c=a.layer;let e=null;if("feature"===c?.type){if(e=c.layerId,null===e)return null}else return null;c=a.attributes;if(null==c)return null;for(const f of Object.keys(c))"ASSETGROUP"===f.toUpperCase()&&(d=a.getAttribute(f)),"ASSETTYPE"===f.toUpperCase()&&(b=a.getAttribute(f));if(!this.dataElement)return null;let k=null;a=this.dataElement.domainNetworks;for(var r of a)if(a=r.junctionSources?.find(f=>f.layerId===e))if(a=a.assetGroups?.find(f=>f.assetGroupCode===d))if(a=a.assetTypes?.find(f=>
f.assetTypeCode===b)){k=a.terminalConfigurationId;break}return null!=k?(r=this.dataElement.terminalConfigurations?.find(f=>f.terminalConfigurationId===k))?D.fromJSON(r):null:null};m.getTierNames=function(a){return this.dataElement?.domainNetworks.find(d=>d.domainNetworkName===a)?.tiers.map(d=>d.name)||[]};m.getRulesTable=function(){var a=t._asyncToGenerator(function*(){return this._createRulesTable()});return function(){return a.apply(this,arguments)}}();m.isUtilityLayer=function(a){return this._utilityLayerList.has(a.layerId)};
m._loadNamedTraceConfigurationsFromNetwork=function(){var a=t._asyncToGenerator(function*(d){if(0!==this.sharedNamedTraceConfigurations?.length){var b=this.sharedNamedTraceConfigurations.map(c=>c.globalId);d=yield this.queryNamedTraceConfigurations({globalIds:b},d);for(const c of this.sharedNamedTraceConfigurations)if(b=d?.find(e=>e.globalId===c.globalId))b=b.write({},{origin:"service"}),c.read(b,{origin:"service"})}});return function(d){return a.apply(this,arguments)}}();m._createRulesTable=function(){var a=
t._asyncToGenerator(function*(){const d=new F({url:this.rulesTableUrl});yield d.load();var b=this.dataElement?.domainNetworks;if(!b)return null;const c=b.flatMap(e=>[...e.edgeSources,...e.junctionSources]);b=(yield this._queryRulesTable(d)).map(e=>this._hydrateRuleInfo(d,c,e));return new I({layer:d,rules:b})});return function(){return a.apply(this,arguments)}}();m._queryRulesTable=function(){var a=t._asyncToGenerator(function*(d){const b=new L({where:"1\x3d1",outFields:["*"]});return(yield G.queryAllJSON(d,
b)).features});return function(d){return a.apply(this,arguments)}}();m._hydrateRuleInfo=function(a,d,b){var c=a.fieldsIndex;a=c.get("RULETYPE");var e=c.get("CREATIONDATE"),k=c.get("FROMNETWORKSOURCEID"),r=c.get("FROMASSETGROUP"),f=c.get("FROMASSETTYPE"),z=c.get("FROMTERMINALID"),A=c.get("TONETWORKSOURCEID"),p=c.get("TOASSETGROUP");const M=c.get("TOASSETTYPE"),N=c.get("TOTERMINALID"),O=c.get("VIANETWORKSOURCEID"),P=c.get("VIAASSETGROUP"),Q=c.get("VIAASSETTYPE");c=c.get("VIATERMINALID");a=b.attributes[a.name];
e=new Date(b.attributes[e.name]);b=[{networkSourceId:b.attributes[k.name],assetGroupId:b.attributes[r.name],assetTypeId:b.attributes[f.name],terminalId:b.attributes[z.name]},{networkSourceId:b.attributes[A.name],assetGroupId:b.attributes[p.name],assetTypeId:b.attributes[M.name],terminalId:b.attributes[N.name]},{networkSourceId:b.attributes[O.name],assetGroupId:b.attributes[P.name],assetTypeId:b.attributes[Q.name],terminalId:b.attributes[c.name]}];let q;(function(n){n[n.from=0]="from";n[n.to=1]="to";
n[n.via=2]="via"})(q||(q={}));k={ruleType:a,creationDate:e};for(const n of[q.from,q.to,q.via]){if(a!==u.RuleType.RTEdgeJunctionEdgeConnectivity&&n===q.via)continue;const B=b[n];r=d.find(v=>v.sourceId===B.networkSourceId);f=r?.assetGroups.find(v=>v.assetGroupCode===B.assetGroupId);z=f?.assetTypes.find(v=>v.assetTypeCode===B.assetTypeId);A=this._getTerminal(a,z,B);if(a===u.RuleType.RTContainment||a===u.RuleType.RTAttachment)A=null;p="";switch(n){case q.from:p="from";break;case q.to:p="to";break;case q.via:p=
"via"}k[`${p}NetworkSource`]=r;k[`${p}AssetGroup`]=f;k[`${p}AssetType`]=z;k[`${p}Terminal`]=A}return k};m._getTerminal=function(a,d,b){if(a===u.RuleType.RTAttachment||a===u.RuleType.RTContainment)return null;const c=d?.terminalConfigurationId;return this.terminalConfigurations?.find(e=>e.id===c)?.terminals?.find(e=>e.id===b.terminalId)??null};t._createClass(y,[{key:"serviceTerritoryFeatureLayerId",get:function(){return this.dataElement?.serviceTerritoryFeatureLayerId??null}},{key:"networkSystemLayers",
get:function(){return new K({rulesTableId:this.sourceJSON?.systemLayers.rulesTableId,rulesTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.rulesTableId}`:null,subnetworksTableId:this.sourceJSON?.systemLayers.subnetworksTableId,subnetworksTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.subnetworksTableId}`:null,dirtyAreasLayerId:this.sourceJSON?.systemLayers.dirtyAreasLayerId,dirtyAreasLayerUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.dirtyAreasLayerId}`:
null})}},{key:"rulesTableId",get:function(){w.deprecatedProperty(x,"rulesTableId",{replacement:"networkSystemLayers.rulesTableId"});return this.sourceJSON?.systemLayers.rulesTableId}},{key:"rulesTableUrl",get:function(){w.deprecatedProperty(x,"rulesTableUrl",{replacement:"networkSystemLayers.rulesTableUrl"});return this.sourceJSON?`${this.featureServiceUrl}/${this.networkSystemLayers.rulesTableId}`:null}},{key:"subnetworksTableId",get:function(){w.deprecatedProperty(x,"subnetworksTableId",{replacement:"networkSystemLayers.subnetworksTableId"});
return this.sourceJSON?.systemLayers.subnetworksTableId}},{key:"subnetworksTableUrl",get:function(){w.deprecatedProperty(x,"subnetworksTableUrl",{replacement:"networkSystemLayers.subnetworksTableUrl"});return this.sourceJSON?`${this.featureServiceUrl}/${this.networkSystemLayers.subnetworksTableId}`:null}},{key:"terminalConfigurations",get:function(){return this.dataElement?.terminalConfigurations.map(a=>D.fromJSON(a))||[]}},{key:"domainNetworkNames",get:function(){return this.dataElement?.domainNetworks.map(a=>
a.domainNetworkName)||[]}},{key:"_utilityLayerList",get:function(){const a=new Set;this.dataElement?.domainNetworks?.map(d=>{d.edgeSources.map(b=>{a.add(b.layerId)});d.junctionSources.map(b=>{a.add(b.layerId)})});return a}}]);return y}(H);h.__decorate([l.property({type:[J],json:{origins:{"web-map":{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}},service:{read:{source:"traceConfigurations"}}},read:!1}})],g.prototype,"sharedNamedTraceConfigurations",void 0);h.__decorate([l.property({type:["utility"],
readOnly:!0,json:{read:!1,write:!1}})],g.prototype,"type",void 0);h.__decorate([l.property({readOnly:!0})],g.prototype,"serviceTerritoryFeatureLayerId",null);h.__decorate([l.property({readOnly:!0})],g.prototype,"networkSystemLayers",null);h.__decorate([l.property({readOnly:!0})],g.prototype,"rulesTableId",null);h.__decorate([l.property({readOnly:!0})],g.prototype,"rulesTableUrl",null);h.__decorate([l.property({readOnly:!0})],g.prototype,"subnetworksTableId",null);h.__decorate([l.property({readOnly:!0})],
g.prototype,"subnetworksTableUrl",null);h.__decorate([l.property({readOnly:!0})],g.prototype,"terminalConfigurations",null);h.__decorate([l.property({readOnly:!0})],g.prototype,"domainNetworkNames",null);return g=h.__decorate([E.subclass("esri.networks.UtilityNetwork")],g)});