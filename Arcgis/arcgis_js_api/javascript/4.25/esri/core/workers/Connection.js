// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../handleUtils ../Logger ../promiseUtils ../Queue ./RemoteClient".split(" "),function(p,q,r,k,t,n){return function(){function l(){this._inUseClients=[];this._clients=[];this._clientPromises=[];this._ongoingJobsQueue=new t}var g=l.prototype;g.destroy=function(){this.close()};g.open=function(a,b){return new Promise((c,d)=>{let e=!0;const h=f=>{k.throwIfAborted(b.signal);e&&(e=!1,f())};this._clients.length=a.length;this._clientPromises.length=a.length;this._inUseClients.length=
a.length;for(let f=0;f<a.length;++f){const m=a[f];k.isPromiseLike(m)?this._clientPromises[f]=m.then(u=>{this._clients[f]=new n(u,b,()=>this._ongoingJobsQueue.pop()??null);h(c);return this._clients[f]},()=>{h(d);return null}):(this._clients[f]=new n(m,b,()=>this._ongoingJobsQueue.pop()??null),this._clientPromises[f]=Promise.resolve(this._clients[f]),h(c))}})};g.broadcast=function(a,b,c){const d=Array(this._clientPromises.length);for(let e=0;e<this._clientPromises.length;++e)d[e]=this._clientPromises[e].then(h=>
h?.invoke(a,b,c));return d};g.close=function(){let a;for(;a=this._ongoingJobsQueue.pop();)a.deferred.reject(k.createAbortError(`Worker closing, aborting job calling '${a.methodName}'`));for(const b of this._clientPromises)b.then(c=>c?.close());this._clients.length=0;this._clientPromises.length=0};g.invoke=function(a,b,c){let d;Array.isArray(c)?(r.getLogger("esri.core.workers.Connection").warn("invoke()","The transferList parameter is deprecated, use the options object instead"),d={transferList:c}):
d=c;c=k.createDeferred();this._ongoingJobsQueue.push({methodName:a,data:b,invokeOptions:d,deferred:c});for(a=0;a<this._clientPromises.length;a++)(b=this._clients[a])?b.jobAdded():this._clientPromises[a].then(e=>e?.jobAdded());return c.promise};g.on=function(a,b){return Promise.all(this._clientPromises).then(()=>q.handlesGroup(this._clients.map(c=>c.on(a,b))))};g.openPorts=function(){return new Promise(a=>{const b=Array(this._clientPromises.length);let c=b.length;for(let d=0;d<this._clientPromises.length;++d)this._clientPromises[d].then(e=>
{e&&(b[d]=e.openPort());0===--c&&a(b)})})};p._createClass(l,[{key:"closed",get:function(){return!this._clients||!this._clients.length}},{key:"test",get:function(){return{numClients:this._clients.length}}}]);return l}()});