// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../assets ../../config ../../intl ../../kernel ../has ../Logger ../urlUtils ./loaderConfig ./utils ./WorkerFallback ../../intl/locale ../../support/revision".split(" "),function(u,v,H,g,I,B,b,C,h,n,w,k,x,y){function p(){p=v._asyncToGenerator(function*(){if(!b("esri-workers")||(b("mozilla"),0))return z(new k);if(!l&&!m)try{var c=["let globalId\x3d0;const outgoing\x3dnew Map,configuration\x3dJSON.parse(",');self.esriConfig\x3dconfiguration.esriConfig;const workerPath\x3dself.esriConfig.workers.workerPath,HANDSHAKE\x3d0,OPEN\x3d1,OPENED\x3d2,RESPONSE\x3d3,INVOKE\x3d4,ABORT\x3d5;function createAbortError(){const e\x3dnew Error("Aborted");return e.name\x3d"AbortError",e}function receiveMessage(e){return e\x26\x26e.data?"string"\x3d\x3dtypeof e.data?JSON.parse(e.data):e.data:null}function invokeStaticMessage(e,o,r){const t\x3dr\x26\x26r.signal,n\x3dglobalId++;return new Promise(((r,i)\x3d\x3e{if(t){if(t.aborted)return i(createAbortError());t.addEventListener("abort",(()\x3d\x3e{outgoing.get(n)\x26\x26(outgoing.delete(n),self.postMessage({type:5,jobId:n}),i(createAbortError()))}))}outgoing.set(n,{resolve:r,reject:i}),self.postMessage({type:4,jobId:n,methodName:e,abortable:null!\x3dt,data:o})}))}let workerRevisionChecked\x3d!1;function checkWorkerRevision(e){if(!workerRevisionChecked\x26\x26e.kernelInfo){workerRevisionChecked\x3d!0;const{revision:o,version:r}\x3dconfiguration.kernelInfo,{revision:t,version:n}\x3de.kernelInfo;esriConfig.assetsPath!\x3d\x3desriConfig.defaultAssetsPath\x26\x26o!\x3d\x3dt\x26\x26console.warn(`Version mismatch detected between ArcGIS API for JavaScript modules and assets. For more information visit https://bit.ly/3QnsuSo.\\nModules version: ${r}\\nAssets version: ${n}`)}}function messageHandler(e){const o\x3dreceiveMessage(e);if(!o)return;const r\x3do.jobId;switch(o.type){case 1:let n;function t(e){const o\x3dn.connect(e);self.postMessage({type:2,jobId:r,data:o},[o])}"function"\x3d\x3dtypeof define\x26\x26define.amd?require([workerPath],(e\x3d\x3e{n\x3de.default||e,checkWorkerRevision(n),n.loadWorker(o.modulePath).then((e\x3d\x3ee||new Promise((e\x3d\x3e{require([o.modulePath],e)})))).then(t)})):"System"in self\x26\x26"function"\x3d\x3dtypeof System.import?System.import(workerPath).then((e\x3d\x3e(n\x3de.default,checkWorkerRevision(n),n.loadWorker(o.modulePath)))).then((e\x3d\x3ee||System.import(o.modulePath))).then(t):esriConfig.workers.useDynamicImport?import(workerPath).then((e\x3d\x3e{n\x3de.default||e,checkWorkerRevision(n),n.loadWorker(o.modulePath).then((e\x3d\x3ee||import(o.modulePath))).then(t)})):(self.RemoteClient||importScripts(workerPath),n\x3dself.RemoteClient.default||self.RemoteClient,checkWorkerRevision(n),n.loadWorker(o.modulePath).then(t));break;case 3:if(outgoing.has(r)){const i\x3doutgoing.get(r);outgoing.delete(r),o.error?i.reject(JSON.parse(o.error)):i.resolve(o.data)}}}self.dojoConfig\x3dconfiguration.loaderConfig,esriConfig.workers.loaderUrl\x26\x26(self.importScripts(esriConfig.workers.loaderUrl),"function"\x3d\x3dtypeof require\x26\x26"function"\x3d\x3dtypeof require.config\x26\x26require.config(configuration.loaderConfig)),self.addEventListener("message",messageHandler),self.postMessage({type:0});'],
q=c.join;let a;if(null!=g["default"]){const A={...g};delete A["default"];a=JSON.parse(JSON.stringify(A))}else a=JSON.parse(JSON.stringify(g));a.assetsPath=h.makeAbsolute(a.assetsPath);a.defaultAssetsPath=a.defaultAssetsPath?h.makeAbsolute(a.defaultAssetsPath):void 0;a.request.interceptors=[];a.log.interceptors=[];a.locale=x.getLocale();a.has={"esri-csp-restrictions":b("esri-csp-restrictions"),"esri-2d-debug":!1,"esri-2d-update-debug":b("esri-2d-update-debug"),"featurelayer-pbf":b("featurelayer-pbf"),
"featurelayer-simplify-thresholds":b("featurelayer-simplify-thresholds"),"featurelayer-simplify-payload-size-factors":b("featurelayer-simplify-payload-size-factors"),"featurelayer-simplify-mobile-factor":b("featurelayer-simplify-mobile-factor"),"esri-atomics":b("esri-atomics"),"esri-shared-array-buffer":b("esri-shared-array-buffer"),"esri-tiles-debug":b("esri-tiles-debug"),"esri-workers-arraybuffer-transfer":b("esri-workers-arraybuffer-transfer"),"feature-polyline-generalization-factor":b("feature-polyline-generalization-factor"),
"host-webworker":1,"polylabel-placement-enabled":b("polylabel-placement-enabled")};a.workers.loaderUrl?a.workers.loaderUrl=h.makeAbsolute(a.workers.loaderUrl):n.DEFAULT_LOADER_URL&&(a.workers.loaderUrl=n.DEFAULT_LOADER_URL);a.workers.workerPath=a.workers.workerPath?h.makeAbsolute(a.workers.workerPath):"esri/core/workers/RemoteClient";a.workers.useDynamicImport=!1;const f=g.workers.loaderConfig,D=n.loaderConfig({baseUrl:f?.baseUrl,locale:x.getLocale(),has:{"csp-restrictions":1,"dojo-test-sniff":0,
"host-webworker":1,...f?.has},map:{...f?.map},paths:{...f?.paths},packages:f?.packages||[]});var e=JSON.stringify({esriConfig:a,loaderConfig:D,kernelInfo:{version:B.version,buildDate:y.buildDate,revision:y.commitHash}});const E=q.call(c,`'${e}'`);l=URL.createObjectURL(new Blob([E],{type:"text/javascript"}))}catch(a){m=a||{}}let d;if(l)try{d=new Worker(l,{name:`esri-worker-${F++}`})}catch(a){r.warn("Failed to create Worker. Fallback to execute module in main thread",m),d=new k}else r.warn("Failed to create Worker. Fallback to execute module in main thread",
m),d=new k;return z(d)});return p.apply(this,arguments)}function z(c){return t.apply(this,arguments)}function t(){t=v._asyncToGenerator(function*(c){return new Promise(q=>{function e(a){(a=w.receiveMessage(a))&&a.type===G&&(c.removeEventListener("message",e),c.removeEventListener("error",d),q(c))}function d(a){a.preventDefault();c.removeEventListener("message",e);c.removeEventListener("error",d);r.warn("Failed to create Worker. Fallback to execute module in main thread",a);c=new k;c.addEventListener("message",
e);c.addEventListener("error",d)}c.addEventListener("message",e);c.addEventListener("error",d)})});return t.apply(this,arguments)}const r=C.getLogger("esri.core.workers.workerFactory"),{HANDSHAKE:G}=w.MessageType;let l,m,F=0;u.createWorker=function(){return p.apply(this,arguments)};Object.defineProperties(u,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});