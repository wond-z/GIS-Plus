// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define(["exports","../../core/maybe","./jsonUtils"],function(f,p,x){function t({scale:b,translate:a},c){return Math.round((c-a[0])/b[0])}function u({scale:b,translate:a},c){return Math.round((a[1]-c)/b[1])}function y(b,a,c){const d=[];let e,g,k,h;for(let l=0;l<c.length;l++){const n=c[l];if(0<l){if(k=t(b,n[0]),h=u(b,n[1]),k!==e||h!==g)d.push(a(n,k-e,h-g)),e=k,g=h}else e=t(b,n[0]),g=u(b,n[1]),d.push(a(n,e,g))}return 0<d.length?d:null}function E(b,a,c,d){return y(b,c?d?v:m:d?m:w,a)}function F(b,a,c,
d){const e=[];c=c?d?v:m:d?m:w;for(d=0;d<a.length;d++){const g=y(b,c,a[d]);g&&3<=g.length&&e.push(g)}return e.length?e:null}function G(b,a,c,d){const e=[];c=c?d?v:m:d?m:w;for(d=0;d<a.length;d++){const g=y(b,c,a[d]);g&&2<=g.length&&e.push(g)}return e.length?e:null}function q({scale:b,translate:a},c){return c*b[0]+a[0]}function r({scale:b,translate:a},c){return a[1]-c*b[1]}function z(b,a,c){const d=Array(c.length);if(!c.length)return d;const [e,g]=b.scale;let k=q(b,c[0][0]);b=r(b,c[0][1]);d[0]=a(c[0],
k,b);for(let h=1;h<c.length;h++){const l=c[h];k+=l[0]*e;b-=l[1]*g;d[h]=a(l,k,b)}return d}function A(b,a,c){const d=Array(c.length);for(let e=0;e<c.length;e++)d[e]=z(b,a,c[e]);return d}function H(b,a,c,d){return z(b,c?d?v:m:d?m:w,a)}function I(b,a,c,d){return A(b,c?d?v:m:d?m:w,a)}function J(b,a,c,d){return A(b,c?d?v:m:d?m:w,a)}function B(b,a,c){let [d,e]=c[0],g=Math.min(d,a[0]),k=Math.min(e,a[1]),h=Math.max(d,a[2]);a=Math.max(e,a[3]);for(let l=1;l<c.length;l++){const [n,C]=c[l];d+=n;e+=C;0>n&&(g=Math.min(g,
d));0<n&&(h=Math.max(h,d));0>C?k=Math.min(k,e):0<C&&(a=Math.max(a,e))}b[0]=g;b[1]=k;b[2]=h;b[3]=a;return b}function D(b,a){if(!a.length)return null;b[0]=b[1]=Number.POSITIVE_INFINITY;b[2]=b[3]=Number.NEGATIVE_INFINITY;for(let c=0;c<a.length;c++)B(b,b,a[c]);return b}function K(b,a,c,d,e){a.xmin=t(b,c.xmin);a.ymin=u(b,c.ymin);a.xmax=t(b,c.xmax);a.ymax=u(b,c.ymax);a!==c&&(d&&(a.zmin=c.zmin,a.zmax=c.zmax),e&&(a.mmin=c.mmin,a.mmax=c.mmax));return a}function L(b,a,c,d,e){a.points=E(b,c.points,d,e)??[];
return a}function M(b,a,c,d,e){a.x=t(b,c.x);a.y=u(b,c.y);a!==c&&(d&&(a.z=c.z),e&&(a.m=c.m));return a}function N(b,a,c,d,e){b=F(b,c.rings,d,e);if(!b)return null;a.rings=b;return a}function O(b,a,c,d,e){b=G(b,c.paths,d,e);if(!b)return null;a.paths=b;return a}const w=(b,a,c)=>[a,c],m=(b,a,c)=>[a,c,b[2]],v=(b,a,c)=>[a,c,b[2],b[3]];f.equals=function(b,a){if(b===a||null==b&&null==a)return!0;if(null==b||null==a)return!1;let c,d,e,g;b&&"upperLeft"===b.originPosition?(c=b.translate[0],d=b.translate[1],b=b.scale[0]):
(c=p.isSome(b.extent)?b.extent.xmin:0,d=p.isSome(b.extent)?b.extent.ymax:0,b=b.tolerance);a&&"upperLeft"===a.originPosition?(e=a.translate[0],g=a.translate[1],a=a.scale[0]):(e=p.isSome(a.extent)?a.extent.xmin:0,g=p.isSome(a.extent)?a.extent.ymax:0,a=a.tolerance);return c===e&&d===g&&b===a};f.getQuantizedBoundsCoordsArray=B;f.getQuantizedBoundsCoordsArrayArray=D;f.getQuantizedBoundsPaths=function(b){return D([0,0,0,0],b)};f.getQuantizedBoundsPoints=function(b){const a=[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,
Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY];return B(a,a,b)};f.getQuantizedBoundsRings=function(b){return D([0,0,0,0],b)};f.quantizeBounds=function(b,a,c){a[0]=t(b,c[0]);a[3]=u(b,c[1]);a[2]=t(b,c[2]);a[1]=u(b,c[3]);return a};f.quantizeExtent=K;f.quantizeGeometry=function(b,a){return b&&a?x.isPoint(a)?M(b,{},a,!1,!1):x.isPolyline(a)?O(b,{},a,!1,!1):x.isPolygon(a)?N(b,{},a,!1,!1):x.isMultipoint(a)?L(b,{},a,!1,!1):x.isExtent(a)?K(b,{},a,!1,!1):null:null};f.quantizeMultipoint=L;f.quantizePaths=
G;f.quantizePoint=M;f.quantizePoints=E;f.quantizePolygon=N;f.quantizePolyline=O;f.quantizeRings=F;f.quantizeX=t;f.quantizeY=u;f.toQuantizationTransform=function(b){return b?{originPosition:"upper-left"===b.originPosition?"upperLeft":"lower-left"===b.originPosition?"lowerLeft":b.originPosition,scale:b.tolerance?[b.tolerance,b.tolerance]:[1,1],translate:p.isSome(b.extent)?[b.extent.xmin,b.extent.ymax]:[0,0]}:null};f.unquantizeBounds=function(b,a,c){return c?(a[0]=q(b,c[0]),a[1]=r(b,c[3]),a[2]=q(b,c[2]),
a[3]=r(b,c[1]),a):[q(b,a[0]),r(b,a[3]),q(b,a[2]),r(b,a[1])]};f.unquantizeCoordsArray=z;f.unquantizeCoordsArrayArray=A;f.unquantizeExtent=function(b,a,c,d,e){a.xmin=q(b,c.xmin);a.ymin=r(b,c.ymin);a.xmax=q(b,c.xmax);a.ymax=r(b,c.ymax);a!==c&&(d&&(a.zmin=c.zmin,a.zmax=c.zmax),e&&(a.mmin=c.mmin,a.mmax=c.mmax));return a};f.unquantizeMultipoint=function(b,a,c,d,e){p.isSome(c)&&(a.points=H(b,c.points,d,e));return a};f.unquantizePaths=I;f.unquantizePoint=function(b,a,c,d,e){if(p.isNone(c))return a;a.x=q(b,
c.x);a.y=r(b,c.y);a!==c&&(d&&(a.z=c.z),e&&(a.m=c.m));return a};f.unquantizePoints=H;f.unquantizePolygon=function(b,a,c,d,e){p.isSome(c)&&(a.rings=J(b,c.rings,d,e));return a};f.unquantizePolyline=function(b,a,c,d,e){p.isSome(c)&&(a.paths=I(b,c.paths,d,e));return a};f.unquantizeRings=J;f.unquantizeX=q;f.unquantizeY=r;Object.defineProperties(f,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});