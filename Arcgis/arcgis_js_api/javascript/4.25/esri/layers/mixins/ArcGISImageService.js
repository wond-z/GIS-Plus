// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../Graphic ../../rasterRenderers ../../request ../../core/Error ../../core/jsonMap ../../core/lang ../../core/Logger ../../core/maybe ../../core/reactiveUtils ../../core/urlUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../support/commonProperties ../support/DimensionalDefinition ../support/ExportImageServiceParameters ../support/Field ../support/FieldsIndex ../support/imageryRendererUtils ../support/MosaicRule ../support/MultidimensionalSubset ../support/PixelBlock ../support/rasterEnums ../support/RasterFunction ../support/RasterInfo ../support/RasterJobHandler ../support/rasterDatasets/multidimensionalUtils ../support/rasterFormats/RasterCodec ../support/rasterFunctions/vectorFieldUtils ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../rest/imageService ../../core/has ../support/source/DataLayerSource ../../rest/query/executeQueryJSON ../../config ../../kernel ../../core/unitUtils ../../geometry/support/spatialReferenceUtils ../graphics/featureConversionUtils ../../geometry/Extent ../../geometry/Geometry ../../geometry/Multipoint ../../geometry/Point ../../geometry/Polygon ../../geometry/Polyline ../../geometry/support/normalizeUtils ../../core/pbf ../../rest/support/FeatureSet ../../rest/support/Query ../../rest/query/support/AttachmentInfo ../../rest/support/AttachmentQuery ../../rest/query/executeForCount ../../rest/query/executeForIds ../../rest/support/RelationshipQuery ../../rest/support/TopFeaturesQuery ../../rest/imageService/fetchRasterInfo ../../rest/imageService/getCatalogItemRasterInfo ../../rest/support/ImageAngleParameters ../../rest/support/ImageHistogramParameters ../../rest/support/ImageIdentifyParameters ../../rest/support/ImagePixelLocationParameters ../../rest/support/ImageSampleParameters ../../views/2d/engine/flow/dataUtils ../../geometry/SpatialReference".split(" "),
function(Z,v,k,Na,ka,R,C,D,la,aa,ba,u,ma,na,p,E,A,oa,H,ca,da,pa,I,qa,ra,J,sa,S,K,L,ta,ua,M,T,va,N,wa,F,Oa,Pa,xa,Qa,Ra,Sa,Ta,Ua,U,Va,Wa,Xa,ya,Ya,Za,$a,za,V,ab,bb,Aa,Ba,cb,db,ea,Ca,Da,fa,ha,Ea,Fa,Ga,W){function Ha(h){return h?(h=JSON.stringify(h).match(/"rasterFunction":"(.*?")/gi)?.map(w=>w.replace('"rasterFunction":"',"").replace('"',"")))?h.join("/"):null:null}const X=la.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",
UNKNOWN:"unknown"}),Ia=new Set("png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" ")),Ja=p.ensureRange(E.ensureNumber,{min:0,max:255});Z.ArcGISImageService=h=>{function w(G){return G?.path??""}h=function(G){function O(){var a=G.apply(this,arguments)||this;a._functionRasterInfos={};a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a._cachedRendererJson=null;a._serviceSupportsMosaicRule=null;a._rasterAttributeTableFieldPrefix="Raster.";a.adjustAspectRatio=null;a.bandIds=
void 0;a.capabilities=null;a.compressionQuality=void 0;a.compressionTolerance=.01;a.copyright=null;a.defaultMosaicRule=null;a.definitionExpression=null;a.exportImageServiceParameters=null;a.rasterInfo=null;a.fields=null;a.fullExtent=null;a.hasMultidimensions=!1;a.imageMaxHeight=4100;a.imageMaxWidth=4100;a.interpolation=void 0;a.minScale=0;a.maxScale=0;a.multidimensionalSubset=null;a.noData=null;a.noDataInterpretation=void 0;a.objectIdField=null;a.geometryType="polygon";a.typeIdField=null;a.types=
[];a.pixelFilter=null;a.raster=void 0;a.sourceType=null;a.viewId=void 0;a.symbolizer=null;a.rasterFunctionInfos=null;a.serviceDataType=null;a.spatialReference=null;a.pixelType=null;a.serviceRasterInfo=null;a.sourceJSON=null;a.url=null;a.version=void 0;return a}v._inheritsLoose(O,G);var g=O.prototype;g.initialize=function(){this._set("exportImageServiceParameters",new pa.ExportImageServiceParameters({layer:this}))};g.readServiceSupportsMosaicRule=function(a,b){return this._isMosaicRuleSupported(b)};
g.readBandIds=function(a,b){if(Array.isArray(a)&&0<a.length&&a.every(c=>"number"===typeof c))return a};g.readCapabilities=function(a,b){return this._readCapabilities(b)};g.writeCompressionQuality=function(a,b,c){null!=a&&"lerc"!==this.format&&(b[c]=a)};g.writeCompressionTolerance=function(a,b,c){"lerc"===this.format&&null!=a&&(b[c]=a)};g.readDefaultMosaicRule=function(a,b){return this._serviceSupportsMosaicRule?J.fromJSON(b):null};g.readFormat=function(a,b){return"esriImageServiceDataTypeVector-UV"===
b.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===b.serviceDataType?"lerc":null!=this.pixelFilter?"lerc":"jpgpng"};g.readMinScale=function(a,b){return null!=b.minLOD&&null!=b.maxLOD?a:0};g.readMaxScale=function(a,b){return null!=b.minLOD&&null!=b.maxLOD?a:0};g.readMosaicRule=function(a,b){return(a=a||b.mosaicRule)?J.fromJSON(a):this._isMosaicRuleSupported(b)?J.fromJSON(b):null};g.writeMosaicRule=function(a,b,c){a=this.mosaicRule;const d=this.definitionExpression;a?d&&d!==a.where&&(a=a.clone(),
a.where=d):d&&(a=new J({where:d}));this._isValidCustomizedMosaicRule(a)&&(b[c]=a.toJSON())};g.writeNoData=function(a,b,c){null!=a&&"number"===typeof a&&(b[c]=Ja(a))};g.readObjectIdField=function(a,b){a||(a=(a=b.fields.filter(c=>"esriFieldTypeOID"===c.type||"oid"===c.type))&&a[0]&&a[0].name);return a};g.readSourceType=function(a,b){return this._isMosaicDataset(b)?"mosaic-dataset":"raster-dataset"};g.readRenderer=function(a,b,c){a=b?.layerDefinition?.drawingInfo?.renderer;c=R.read(a,c);if(null==c)return null;
"vector-field"===c.type&&b.symbolTileSize&&!a.symbolTileSize&&(c.symbolTileSize=b.symbolTileSize);ra.isSupportedRendererType(c)||ba.getLogger(this.declaredClass).warn("ArcGISImageService","Imagery layer doesn't support given renderer type.");return c};g.writeRenderer=function(a,b,c){b.layerDefinition=b.layerDefinition||{};b.layerDefinition.drawingInfo=b.layerDefinition.drawingInfo||{};b.layerDefinition.drawingInfo.renderer=a.toJSON();"vector-field"===a.type&&(b.symbolTileSize=a.symbolTileSize)};g.readRenderingRule=
function(a,b){a=b.rasterFunctionInfos;return b.renderingRule||a&&a.length&&"None"!==a[0].name?this._isRFTJson(b.renderingRule)?L.fromJSON({rasterFunctionDefinition:b.renderingRule}):L.fromJSON(b.renderingRule||{rasterFunctionInfos:b.rasterFunctionInfos}):null};g.writeRenderingRule=function(a,b,c){a=a.toJSON();b[c]=a.rasterFunctionDefinition?a.rasterFunctionDefinition:a};g.readSpatialReference=function(a,b){return(a=a||b.extent.spatialReference)?W.fromJSON(a):null};g.readPixelType=function(a){return X.fromJSON(a)||
a};g.writePixelType=function(a,b,c){if(u.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)b[c]=X.toJSON(a)};g.readVersion=function(a,b){(a=b.currentVersion)||(a=b.hasOwnProperty("fields")||b.hasOwnProperty("timeInfo")?10:9.3);return a};g.applyFilter=function(a){let b=a;this.pixelFilter&&(b=this._clonePixelData(a),this.pixelFilter(b));return b};g.applyRenderer=function(){var a=v._asyncToGenerator(function*(b,c){var d=b;const {renderer:e,symbolizer:f,pixelFilter:n,bandIds:l}=
this;if(!this._isPicture()&&e&&f&&!n){d=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(e.toJSON());const q=this._rasterJobHandler.instance;q?(d&&(f.bind(),yield q.updateSymbolizer(f,c),this._cachedRendererJson=e.toJSON()),c=yield q.symbolize({bandIds:l,...b},c),d={extent:b.extent,pixelBlock:c}):d={extent:b.extent,pixelBlock:f.symbolize({bandIds:l,...b})}}return d});return function(b,c){return a.apply(this,arguments)}}();g.destroy=function(){this._shutdownJobHandler()};g.increaseRasterJobHandlerUsage=
function(){this._rasterJobHandler.refCount++};g.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};g.computeAngles=function(){var a=v._asyncToGenerator(function*(b,c){if(!(yield this._fetchCapabilities(c?.signal)).operations.supportsComputeAngles)throw new D("imagery-layer:compute-angles","this operation is not supported on the input image service");b=E.ensureClass(Da,b).clone();return F.computeAngles(this.url,
b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();g.computePixelSpaceLocations=function(){var a=v._asyncToGenerator(function*(b,c){if(!(yield this._fetchCapabilities(c?.signal)).operations.supportsComputePixelLocation)throw new D("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");b=E.ensureClass(Ea,b).clone();return F.computePixelSpaceLocations(this.url,b,this._getRequestOptions(c))});return function(b,
c){return a.apply(this,arguments)}}();g.computeHistograms=function(){var a=v._asyncToGenerator(function*(b,c){if(!(yield this._fetchCapabilities(c?.signal)).operations.supportsComputeHistograms)throw new D("imagery-layer:compute-histograms","this operation is not supported on the input image service");b=E.ensureClass(fa,b).clone();const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==b.renderingRule&&(b.renderingRule=f);e&&null==b.mosaicRule&&(b.mosaicRule=e);d&&null==b.raster&&(b.raster=d);
return F.computeHistograms(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();g.computeStatisticsHistograms=function(){var a=v._asyncToGenerator(function*(b,c){if(!(yield this._fetchCapabilities(c?.signal)).operations.supportsComputeStatisticsHistograms)throw new D("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");b=E.ensureClass(fa,b).clone();const {raster:d,mosaicRule:e,renderingRule:f}=this;
f&&null==b.renderingRule&&(b.renderingRule=f);e&&null==b.mosaicRule&&(b.mosaicRule=e);d&&null==b.raster&&(b.raster=d);return F.computeStatisticsHistograms(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();g.getField=function(a){const {fieldsIndex:b}=this;return u.isSome(b)?b.get(a):void 0};g.getFieldDomain=function(a,b){return(a=this.getField(a))?a.domain:null};g.fetchImage=function(){var a=v._asyncToGenerator(function*(b,c,d,e={}){if(null==b||null==
c||null==d)throw new D("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){var f=yield this.generateRasterInfo(this.renderingRule,{signal:e.signal});f&&(this.rasterInfo=f)}f=this.getExportImageServiceParameters(b,c,d,e.timeExtent);if(null==f){if(e.requestAsImageElement&&this._canRequestImageElement(this.format))return b=document.createElement("canvas"),b.width=c,b.height=d,{imageOrCanvasElement:b};
e=(this.bandIds?.length||this.rasterInfo?.bandCount)??0;f=c*d;const n=this.rasterInfo?.pixelType??"unknown",l=[];for(let q=0;q<e;q++)l.push(S.createEmptyBand(n,f));return{pixelData:{pixelBlock:new S({width:c,height:d,pixels:l,mask:new Uint8Array(f),pixelType:n}),extent:b}}}return this._requestArrayBuffer({imageServiceParameters:f,imageProps:{extent:b,width:c,height:d,format:this.format},requestAsImageElement:e.requestAsImageElement&&!this.pixelFilter||!1,signal:e.signal})});return function(b,c,d){return a.apply(this,
arguments)}}();g.fetchKeyProperties=function(a){return C(w(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:10.3<=this.version?a?.renderingRule:null})}).then(b=>b.data)};g.fetchRasterAttributeTable=function(a){return 10.1>this.version?Promise.reject(new D("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):C(w(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.3<=this.version?a?.renderingRule:null})}).then(b=>za.fromJSON(b.data))};
g.getCatalogItemRasterInfo=function(a,b){const c=this._getQueryParams();b={...b,query:c};return Ca.getCatalogItemRasterInfo(w(this.parsedUrl),a,b)};g.getCatalogItemICSInfo=function(){var a=v._asyncToGenerator(function*(b,c){var {data:d}=yield C(w(this.parsedUrl)+"/"+b+"/info/ics",{query:this._getQueryParams(),...c});if(d=d&&d.ics){var e=null;try{e=(yield C(w(this.parsedUrl)+"/"+b+"/info",{query:this._getQueryParams(),...c})).data.extent}catch{}if(!e||!e.spatialReference)return{ics:d,icsToPixelTransform:null,
icsExtent:null,northDirection:null};var f=10.7<=this.version?C(w(this.parsedUrl)+"/"+b+"/info/icstopixel",{query:this._getQueryParams(),...c}).then(r=>r.data).catch(()=>({})):{},n=e.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[e]}),inSR:n.wkid||JSON.stringify(n),outSR:"0:"+b};l=C(w(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...c}).then(r=>r.data).catch(()=>({}));var q=(e.xmin+e.xmax)/2,m=(e.ymax-e.ymin)/6;e=e.ymin+m;var t=[];for(let r=
0;5>r;r++)t.push({x:q,y:e+m*r});b={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:t}),inSR:n.wkid||JSON.stringify(n),outSR:"0:"+b};c=C(w(this.parsedUrl)+"/project",{query:this._getQueryParams(b),...c}).then(r=>r.data).catch(()=>({}));b=yield Promise.all([f,l,c]);c=b[0].ipxf;null==c&&(f=d.geodataXform?.xf_0,"topup"===f?.name?.toLowerCase()&&6===f?.coefficients?.length&&(c={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:f.coefficients,cellsizeRatio:0,
type:"GeometricXform"}}));if(f=U.fromJSON(b[1]&&b[1].geometries&&b[1].geometries[0]))f.spatialReference=new W({wkid:0,imageCoordinateSystem:d});b=b[2].geometries?b[2].geometries.filter(r=>null!=r&&null!=r.x&&null!=r.y&&"NaN"!==r.x&&"NaN"!==r.y):[];l=b.length;if(3>l)return{ics:d,icsToPixelTransform:c,icsExtent:f,northDirection:null};e=m=q=n=0;for(t=0;t<l;t++)n+=b[t].x,q+=b[t].y,m+=b[t].x*b[t].x,e+=b[t].x*b[t].y;l=(l*e-n*q)/(l*m-n*n);n=0;q=b[4].x>b[0].x;b=b[4].y>b[0].y;Infinity===l?n=b?90:270:0===l?
n=q?0:180:0<l?n=q?180*Math.atan(l)/Math.PI:180*Math.atan(l)/Math.PI+180:0>l&&(n=b?180+180*Math.atan(l)/Math.PI:360+180*Math.atan(l)/Math.PI);return{ics:d,icsToPixelTransform:c,icsExtent:f,northDirection:n}}});return function(b,c){return a.apply(this,arguments)}}();g.generateRasterInfo=function(){var a=v._asyncToGenerator(function*(b,c){if(this.serviceRasterInfo&&(!b||"none"===b.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(b)))return this.serviceRasterInfo;const d=Ha(b);if(!d)return null;
if(this._functionRasterInfos[d])return this._functionRasterInfos[d];b=this._generateRasterInfo(b,c);this._functionRasterInfos[d]=b;try{return yield b}catch{return this._functionRasterInfos[d]=null}});return function(b,c){return a.apply(this,arguments)}}();g.getExportImageServiceParameters=function(a,b,c,d){a=a.clone().shiftCentralMeridian();const e=F.getImageSpatialReferenceQueryParameter(a.spatialReference,w(this.parsedUrl));this.pixelType!==this.serviceRasterInfo?.pixelType&&(this.exportImageServiceParameters.pixelType=
this.pixelType);const f=this.exportImageServiceParameters.toJSON(),{bandIds:n,noData:l}=f;var {renderingRule:q}=f,m=this.renderingRule?.rasterFunctionDefinition,t=!this.renderer||"raster-stretch"===this.renderer.type;n?.length&&this._hasRenderingRule(this.renderingRule)&&!m&&t?(m={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:n}},"Stretch"===q.rasterFunction?(m.rasterFunctionArguments.Raster=q.rasterFunctionArguments.Raster,q.rasterFunctionArguments.Raster=m):"Colormap"===q.rasterFunction?
(t=q.rasterFunctionArguments.Raster,"Stretch"===t?.rasterFunction?(m.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=m):(m.rasterFunctionArguments.Raster=t,q.rasterFunctionArguments.Raster=m)):(m.rasterFunctionArguments.Raster=q,q=m),f.bandIds=void 0):f.bandIds=n?.join(",");l instanceof Array&&0<l.length&&(f.noData=l.join(","));t=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,d):null;
f.mosaicRule=u.isSome(t)?JSON.stringify(t):null;({multidimensionalSubset:m}=this);if(m&&u.isSome(t)&&t.multidimensionalDefinition&&M.hasExcludedVariableOrDimension(t.multidimensionalDefinition,m,!0))return null;f.renderingRule=this._getRenderingRuleString(L.fromJSON(q));q={};if(d){const {start:x,end:B}=d.toJSON();if(x&&B&&x===B){q.time=""+x;var r=[x]}else if(null!=x||null!=B)q.time=`${null==x?"null":x},${null==B?"null":B}`,r=null!=x&&null!=B?[x,B]:[x??B];if(r&&m){d=m.dimensions.find(({name:y})=>"StdTime"===
y);if(2===r.length&&d.extent.length){r[0]=Math.max(r[0],d.extent[0]);r[1]=Math.min(r[1],d.extent[1]??d.extent[0]);if(r[1]<r[0])return null;q.time=r.join()}r=new da({variableName:"",dimensionName:"StdTime",isSlice:1===r.length,values:r});if(M.hasExcludedVariableOrDimension([r],m,!0))return null}}return{bbox:a.xmin+","+a.ymin+","+a.xmax+","+a.ymax,bboxSR:e,imageSR:e,size:b+","+c,...f,...q}};g.getSamples=function(){var a=v._asyncToGenerator(function*(b,c){if(!(yield this._fetchCapabilities(c?.signal))?.operations.supportsGetSamples)throw new D("imagery-layer:get-samples",
"getSamples operation is not supported on the input image service");b=E.ensureClass(Fa,b).clone();const {raster:d}=this;d&&null==b.raster&&(b.raster=d);return F.getSamples(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();g.identify=function(){var a=v._asyncToGenerator(function*(b,c){if(!(yield this._fetchCapabilities(c?.signal)).operations.supportsIdentify)throw new D("imagery-layer:query-rasters","query operation is not supported on the input image service");
b=E.ensureClass(ha,b).clone();const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==b.renderingRule&&(b.renderingRule=f);if(e&&null==b.mosaicRule){const n=this._combineMosaicRuleWithTimeExtent(e,b.timeExtent);b.mosaicRule=u.unwrap(n)}d&&null==b.raster&&(b.raster=d);return F.identify(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();g.createQuery=function(){const a=new V;a.outFields=["*"];a.returnGeometry=!0;a.where=this.definitionExpression||"1\x3d1";
return a};g.queryRasters=function(){var a=v._asyncToGenerator(function*(b,c){({query:b,requestOptions:c}=yield this._prepareForQuery(b,c));return xa.executeQueryJSON(this.url,b,c)});return function(b,c){return a.apply(this,arguments)}}();g.queryObjectIds=function(){var a=v._asyncToGenerator(function*(b,c){({query:b,requestOptions:c}=yield this._prepareForQuery(b,c));return Ba.executeForIds(this.url,b,c)});return function(b,c){return a.apply(this,arguments)}}();g.queryRasterCount=function(){var a=
v._asyncToGenerator(function*(b,c){({query:b,requestOptions:c}=yield this._prepareForQuery(b,c));return Aa.executeForCount(this.url,b,c)});return function(b,c){return a.apply(this,arguments)}}();g.queryVisibleRasters=function(){var a=v._asyncToGenerator(function*(b,c){if(!b)throw new D("imagery-layer: query-visible-rasters","missing query parameter");yield this.load();const {pixelSize:d,returnDomainValues:e,returnTopmostRaster:f,showNoDataRecords:n}=c||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,
showNoDataRecords:!1};let l=!1;var q=null,m=null;const t=this._rasterFunctionNamesIndex;if(u.isSome(b.outFields)&&(l=b.outFields.some(y=>!y.toLowerCase().includes("raster.servicepixelvalue")),10.4<=this.version)){m=b.outFields.filter(z=>z.toLowerCase().includes("raster.servicepixelvalue")&&24<z.length).map(z=>{z=z.slice(25);return[this._updateRenderingRulesFunctionName(z,t),z]});q=m.map(z=>new L({functionName:z[0]}));m=m.map(z=>z[1]);const {renderingRule:y}=this;0===q.length?y?.functionName?(q.push(y),
m.push(y.functionName)):q=null:y?.functionName&&!q.some(z=>z.functionName===y.functionName)&&(q.push(y),m.push(y.functionName))}const r=u.isNone(b.outSpatialReference)||b.outSpatialReference.equals(this.spatialReference),x=b.timeExtent||this.timeExtent,B=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,x);q=this._getQueryParams({geometry:b.geometry,timeExtent:x,mosaicRule:B,renderingRule:10.4>this.version?this.renderingRule:null,renderingRules:q,pixelSize:d,returnCatalogItems:l,
returnGeometry:r,raster:this.raster,maxItemCount:f?1:null});delete q.f;q=new ha(q);try{yield this.generateRasterInfo(this.renderingRule);const y=yield F.identify(this.url,q,{signal:c?.signal,query:{...this.customParameters}}),z=b.outFields,Ka=null!=y.value&&y.value.toLowerCase().includes("nodata");if(!l||r||!y?.catalogItems?.features.length||!n&&Ka)return this._processVisibleRastersResponse(y,{returnDomainValues:e,templateRRFunctionNames:m,showNoDataRecords:n,templateFields:z});const P=this.objectIdField||
"ObjectId",ia=y.catalogItems?.features??[],La=ia.map(Q=>Q.attributes?.[P]),Ma=new V({objectIds:La,returnGeometry:!0,outSpatialReference:b.outSpatialReference,outFields:[P]}),ja=yield this.queryRasters(Ma);ja?.features?.length&&ja.features.forEach(Q=>{ia.forEach(Y=>{Y.attributes[P]===Q.attributes[P]&&(Y.geometry=new ya(Q.geometry),u.isSome(b.outSpatialReference)&&(Y.geometry.spatialReference=b.outSpatialReference))})});return this._processVisibleRastersResponse(y,{returnDomainValues:e,templateRRFunctionNames:m,
showNoDataRecords:n,templateFields:z})}catch{throw new D("imagery-layer:query-visible-rasters","encountered error when querying visible rasters");}});return function(b,c){return a.apply(this,arguments)}}();g.fetchVariableStatisticsHistograms=function(){var a=v._asyncToGenerator(function*(b,c){var d=C(w(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:b}),signal:c}).then(e=>e.data?.statistics);b=C(w(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:b}),signal:c}).then(e=>
e.data?.histograms);d=yield Promise.all([d,b]);d[0]&&d[0].forEach(e=>{e.avg=e.mean;e.stddev=e.standardDeviation});return{statistics:d[0]||null,histograms:d[1]||null}});return function(b,c){return a.apply(this,arguments)}}();g.createFlowMesh=function(){var a=v._asyncToGenerator(function*(b,c){const d=this._rasterJobHandler.instance;return d?d.createFlowMesh(b,c):Ga.createFlowMesh(b.meshType,b.simulationSettings,b.flowData,u.isSome(c.signal)?c.signal:(new AbortController).signal)});return function(b,
c){return a.apply(this,arguments)}}();g.getMultidimensionalSubsetVariables=function(a){return M.getSubsetVariablesFromMdInfo(this.multidimensionalSubset,a??this.multidimensionalInfo)};g._fetchService=function(){var a=v._asyncToGenerator(function*(b){yield this._fetchServiceInfo(b);this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);var c=this.sourceJSON;c=u.isSome(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):ea.fetchServiceRasterInfo(w(this.parsedUrl),c,{signal:b,query:this._getQueryParams()}).then(e=>
{this._set("serviceRasterInfo",e);return e});b=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:b}):null;const d=this._getRasterFunctionInfos();return Promise.all([c,b,d]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]);e[2]&&this._set("rasterFunctionInfos",e[2]);this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),ba.getLogger(this.declaredClass).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer"));
this._set("renderer",this._configRenderer(this.renderer));this.addHandles([ma.watch(()=>this.renderingRule,f=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(f).then(n=>{n&&(this.rasterInfo=n)})})]);({serviceRasterInfo:e}=this);e&&u.isSome(e.multidimensionalInfo)&&this._updateMultidimensionalDefinition(e)})});return function(b){return a.apply(this,arguments)}}();g._combineMosaicRuleWithTimeExtent=function(a,b){var c=this.timeInfo;if(u.isNone(a)||u.isNone(this.multidimensionalInfo)||
u.isNone(b)||u.isNone(c?.startField))return a;const {startField:d}=c,e=this.multidimensionalInfo.variables.some(m=>m.dimensions.some(t=>t.name===d))?d:"StdTime";a=a.clone();if("mosaic-dataset"===this.sourceType)return a.multidimensionalDefinition=a.multidimensionalDefinition?.filter(m=>m.dimensionName!==e),this._cleanupMultidimensionalDefinition(a);a.multidimensionalDefinition=a.multidimensionalDefinition||[];c=a.multidimensionalDefinition.filter(m=>m.dimensionName===e);const f=u.isSome(b.start)?
b.start.getTime():null;b=u.isSome(b.end)?b.end.getTime():null;const n=null==f||null==b||f===b,l=n?[f||b]:[[f,b]],q=10.8<=this.version;c.length?c.forEach(m=>{m.dimensionName===e&&(q?(m.dimensionName=null,m.isSlice=!1,m.values=[]):(m.isSlice=n,m.values=l))}):q||(b=a.multidimensionalDefinition.filter(m=>null!=m.variableName&&null==m.dimensionName),b.length?b.forEach(m=>{m.dimensionName=e;m.isSlice=n;m.values=l}):a.multidimensionalDefinition.push(new da({variableName:"",dimensionName:e,isSlice:n,values:l})));
return this._cleanupMultidimensionalDefinition(a)};g._cleanupMultidimensionalDefinition=function(a){if(u.isNone(a))return null;a.multidimensionalDefinition&&(a.multidimensionalDefinition=a.multidimensionalDefinition.filter(b=>!(!b.variableName&&!b.dimensionName)),0===a.multidimensionalDefinition.length&&(a.multidimensionalDefinition=null));return"mosaic-dataset"!==this.sourceType&&null==a.multidimensionalDefinition?null:a};g._prepareForQuery=function(){var a=v._asyncToGenerator(function*(b,c){if(!(yield this._fetchCapabilities(c?.signal)).operations.supportsQuery)throw new D("imagery-layer:query-rasters",
"query operation is not supported on the input image service");b=u.isSome(b)?E.ensureClass(V,b):this.createQuery();c=this._getRequestOptions(c);this.raster&&(c.query={...c.query,raster:this.raster});return{query:b,requestOptions:c}});return function(b,c){return a.apply(this,arguments)}}();g._initJobHandler=function(){var a=v._asyncToGenerator(function*(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const b=new ua;this._rasterJobHandler.connectionPromise=
b.initialize().then(()=>{this._rasterJobHandler.instance=b},()=>{});yield this._rasterJobHandler.connectionPromise});return function(){return a.apply(this,arguments)}}();g._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0;this._cachedRendererJson=null};g._isSupportedRenderer=function(a){const {rasterInfo:b,renderingRule:c}=this;
return"unique-value"===a.type&&this._hasRenderingRule(c)&&1===b?.bandCount&&["u8","s8"].includes(b.pixelType)||null!=b&&null!=a&&N.getSupportedRendererTypes(b).includes(a.type)};g._fetchCapabilities=function(){var a=v._asyncToGenerator(function*(b){if(this.capabilities)return this.capabilities;yield this._fetchServiceInfo(b);return this.capabilities});return function(b){return a.apply(this,arguments)}}();g._fetchServiceInfo=function(){var a=v._asyncToGenerator(function*(b){let c=this.sourceJSON;if(!c){const {data:d,
ssl:e}=yield C(w(this.parsedUrl),{query:this._getQueryParams(),signal:b});this.sourceJSON=c=d;e&&(this.url=this.url.replace(/^http:/i,"https:"))}if(-1<c.capabilities?.toLowerCase().split(",").map(d=>d.trim()).indexOf("tilesonly"))throw new D("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(c,{origin:"service",url:this.parsedUrl})});return function(b){return a.apply(this,arguments)}}();g._isMosaicDataset=function(a){return a.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===
a.serviceSourceType:0<a.fields?.length};g._isMosaicRuleSupported=function(a){if(!a)return!1;const b=this._isMosaicDataset(a);a=10.71<=a.currentVersion&&a.hasMultidimensions&&!(1<a.fields?.length);return b||a};g._isVectorFieldResampleFunction=function(a){if(u.isNone(a))return!1;const {functionName:b,functionArguments:c}=a;a="resample"===b?.toLowerCase();const d=c?.ResampleType||c?.resampleType;return a&&(7===d||10===d)};g._isPicture=function(){return!this.format||this.format.includes("jpg")||this.format.includes("png")};
g._configRenderer=function(a){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo&&3<=this.rasterInfo.bandCount){var b=N.getDefaultBandCombination(this.rasterInfo);!b||3===this.rasterInfo.bandCount&&0===b[0]&&1===b[1]&&2===b[2]||(this.bandIds=b)}a||(a=N.createDefaultRenderer(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));b=N.normalizeRendererJSON(a.toJSON());
this.symbolizer?(this.symbolizer.rendererJSON=b,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new wa({rendererJSON:b,rasterInfo:this.rasterInfo});this.symbolizer.bind().success||(this.symbolizer=null)}return a};g._clonePixelData=function(a){return null==a?a:{extent:a.extent&&a.extent.clone(),pixelBlock:u.isSome(a.pixelBlock)?a.pixelBlock.clone():null}};g._getQueryParams=function(a){a&&u.isSome(a.renderingRule)&&"string"!==typeof a.renderingRule&&(a.renderingRule=this._getRenderingRuleString(a.renderingRule));
const {raster:b,viewId:c}=this;return{raster:b,viewId:c,f:"json",...a,...this.customParameters}};g._getRequestOptions=function(a){return{...a,query:{...a?.query,...this.customParameters}}};g._decodePixelBlock=function(a,b,c){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:a,options:b}):T.decode(a,b,c)};g._getRasterFunctionInfos=function(){var a=v._asyncToGenerator(function*(b){const c=this.sourceJSON.rasterFunctionInfos;return this.loaded?c:c&&10.3<=this.version?
1===c.length&&"none"===c[0].name.toLowerCase()?c:(yield C(w(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:b})).data?.rasterFunctionInfos:null});return function(b){return a.apply(this,arguments)}}();g._canRequestImageElement=function(a){return!this.pixelFilter&&(!a||a.includes("png"))};g._requestArrayBuffer=function(){var a=v._asyncToGenerator(function*(b){const {imageProps:c,requestAsImageElement:d,signal:e}=b;if(d&&this._canRequestImageElement(c.format))return{imageOrCanvasElement:(yield C(w(this.parsedUrl)+
"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...b.imageServiceParameters}),signal:e})).data,params:c};var f=this._initJobHandler();b=C(w(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...b.imageServiceParameters}),signal:e});f=(yield Promise.all([b,f]))[0].data;var n=b=c.format||"jpgpng";"bsq"!==n&&"bip"!==n&&(n=T.getFormat(f));if(!n)throw new D("imagery-layer:fetch-image","unsupported format signature "+
String.fromCharCode.apply(null,new Uint8Array(f)));n="gif"===b||"bmp"===b||b.includes("png")&&("png"===n||"jpg"===n);const l={signal:e};return{pixelData:{pixelBlock:yield n?T.decode(f,{useCanvas:!0,...c},l):this._decodePixelBlock(f,{width:c.width,height:c.height,planes:null,pixelType:null,noDataValue:null,format:b},l),extent:c.extent},params:c}});return function(b){return a.apply(this,arguments)}}();g._generateRasterInfo=function(a,b){const c=this._getQueryParams();b={...b,query:c};return ea.generateRasterInfo(w(this.parsedUrl),
a,b)};g._isValidCustomizedMosaicRule=function(a){return a&&JSON.stringify(a.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())};g._updateMultidimensionalDefinition=function(a){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)&&(a=M.getDefaultMultidimensionalDefinition(a,{multidimensionalSubset:this.multidimensionalSubset}),u.isSome(a)&&0<a.length)){this.mosaicRule=this.mosaicRule||new J;const b=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.renderingRule&&
"none"!==this.renderingRule.functionName?.toLowerCase()&&a.forEach(c=>c.variableName="");if(!b||b&&0>=b.length)this.mosaicRule.multidimensionalDefinition=a}};g._processVisibleRastersResponse=function(a,b){b=b||{};const c=a.value,{templateRRFunctionNames:d,showNoDataRecords:e,returnDomainValues:f,templateFields:n}=b;b=a.processedValues;var l=a.catalogItems&&a.catalogItems.features;let q=a.properties&&a.properties.Values&&a.properties.Values.map(B=>B.replace(/ /gi,", "))||[];var m=this.objectIdField||
"ObjectId",t="string"===typeof c&&c.toLowerCase().includes("nodata");a=[];!c||l||t||(l={},l[m]=0,l=new ka(this.fullExtent,null,l),q=[c],l=[l]);if(!l)return[];this._updateResponseFieldNames(l,n);t&&!e&&(l=[]);for(m=0;m<l.length;m++){t=l[m];if(null!=c){var r=q[m];var x=this.renderingRule&&b&&0<b.length&&d&&0<d.length&&d.includes(this.renderingRule.functionName)?b[d.indexOf(this.renderingRule.functionName)]:c;if("nodata"===r.toLowerCase()&&!e)continue;t.attributes["Raster.ItemPixelValue"]=r;t.attributes["Raster.ServicePixelValue"]=
x;this._updateFeatureWithMagDirValues(t,r);const B=this.fields&&0<this.fields.length;x=this.renderingRule&&u.isSome(this.serviceRasterInfo?.attributeTable)?B?r:c:x;this.renderingRule||(x=B?r:c);this._updateFeatureWithRasterAttributeTableValues(t,x)}t.sourceLayer=t.layer=this;f&&this._updateFeatureWithDomainValues(t);if(d&&b&&d.length===b.length)for(r=0;r<d.length;r++)t.attributes["Raster.ServicePixelValue."+d[r]]=b[r];a.push(l[m])}return a};g._updateFeatureWithRasterAttributeTableValues=function(a,
b){var c=this.rasterInfo&&this.rasterInfo.attributeTable||this.serviceRasterInfo?.attributeTable;if(!u.isNone(c)){var {features:d,fields:e}=c,f=(c=e.map(l=>l.name).filter(l=>"value"===l.toLowerCase()))&&c[0];if(f){var n=d.filter(l=>l.attributes[f]===(null!=b?parseInt(b,10):null));n&&n[0]&&e.forEach(l=>{a.attributes[this._rasterAttributeTableFieldPrefix+l.name]=n[0].attributes[l.name]})}}};g._updateFeatureWithMagDirValues=function(a,b){if(this._isVectorDataSet()){var c=b.split(/,\s*/).map(d=>parseFloat(d));
b=c.map(d=>[d]);c=c.map(d=>({minValue:d,maxValue:d,noDataValue:null}));b=new S({height:1,width:1,pixelType:"f32",pixels:b,statistics:c});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:b,extent:new U(0,0,0,0,this.spatialReference)});b="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[b.pixels[0][0],b.pixels[1][0]]:va.uvComponentToVector([b.pixels[0][0],b.pixels[1][0]]);a.attributes["Raster.Magnitude"]=b[0];a.attributes["Raster.Direction"]=b[1]}};g._updateFeatureWithDomainValues=
function(a){const b=this.fields&&this.fields.filter(c=>c.domain&&"coded-value"===c.domain.type);null!=b&&b.forEach(c=>{const d=a.attributes[c.name];if(null!=d){const e=c.domain.codedValues.find(f=>f.code===d);e&&(a.attributes[c.name]=e.name)}})};g._updateResponseFieldNames=function(a,b){if(b&&!(1>b.length)){var c=this.fieldsIndex;u.isNone(c)||a.forEach(d=>{if(d&&d.attributes)for(const e of b){const f=c.get(e)?.name;f&&f!==e&&(d.attributes[e]=d.attributes[f],delete d.attributes[f])}})}};g._getRenderingRuleString=
function(a){if(this._hasRenderingRule(a)){a=a.toJSON();a=a.rasterFunctionDefinition??a;if(a.thumbnail||a.thumbnailEx)a.thumbnail=a.thumbnailEx=null;return JSON.stringify(a)}return null};g._hasRenderingRule=function(a){return null!=a&&null!=a.functionName&&"none"!==a.functionName.toLowerCase()};g._updateRenderingRulesFunctionName=function(a,b){if(a&&!(1>a.length)){if("Raw"===a)return a.replace("Raw","None");var c=a.toLowerCase().replace(/ /gi,"_");return b.has(c)?b.get(c):a}};g._isRFTJson=function(a){return a&&
a.name&&a.arguments&&a.function&&a.hasOwnProperty("functionType")};g._isVectorDataSet=function(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType};g._readCapabilities=function(a){const b=a.capabilities?a.capabilities.toLowerCase().split(",").map(m=>m.trim()):["image","catalog"],{currentVersion:c,advancedQueryCapabilities:d,maxRecordCount:e}=a,f=b.includes("image"),n="esriImageServiceDataTypeElevation"===a.serviceDataType,
l=!!(a.spatialReference||a.extent&&a.extent.spatialReference),q=b.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:f,supportsExportImage:f,supportsIdentify:f,supportsMeasure:b.includes("mensuration")&&l,supportsDownload:b.includes("download"),supportsQuery:b.includes("catalog")&&a.fields&&0<a.fields.length,supportsGetSamples:10.2<=c&&f,supportsProject:10.3<=c&&f,supportsComputeStatisticsHistograms:10.4<=c&&f,supportsQueryBoundary:10.6<=c&&f,supportsCalculateVolume:10.7<=
c&&n,supportsComputePixelLocation:10.7<=c&&b.includes("catalog"),supportsComputeAngles:10.91<=c,supportsAdd:q,supportsDelete:q,supportsEditing:q,supportsUpdate:q,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:e,maxRecordCountFactor:void 0,supportsStatistics:!!d?.supportsStatistics,
supportsOrderBy:!!d?.supportsOrderBy,supportsDistinct:!!d?.supportsDistinct,supportsPagination:!!d?.supportsPagination,supportsStandardizedQueriesOnly:!!d?.useStandardizedQueries,supportsPercentileStatistics:!!d?.supportsPercentileStatistics,supportsCentroid:!!d?.supportsReturningGeometryCentroid,supportsDistance:!!d?.supportsQueryWithDistance,supportsExtent:!!d?.supportsReturningQueryExtent,supportsGeometryProperties:!!d?.supportsReturningGeometryProperties,supportsHavingClause:!!d?.supportsHavingClause,
supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!d?.supportsDefaultSR,supportsFullTextSearch:!1,
supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}};v._createClass(O,[{key:"_rasterFunctionNamesIndex",get:function(){const a=new Map;if(!this.rasterFunctionInfos||u.isSome(this.rasterFunctionInfos)&&1>this.rasterFunctionInfos.length)return a;u.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(b=>{a.set(b.name.toLowerCase().replace(/ /gi,"_"),b.name)});return a}},{key:"fieldsIndex",get:function(){return this.fields?new qa(this.fields):null}},{key:"format",
set:function(a){a&&Ia.has(a.toLowerCase())&&this._set("format",a.toLowerCase())}},{key:"mosaicRule",set:function(a){a&&a.mosaicMethod&&(a=J.fromJSON({...a.toJSON(),mosaicMethod:a.mosaicMethod,mosaicOperation:a.mosaicOperation}));this._set("mosaicRule",a)}},{key:"multidimensionalInfo",get:function(){return u.isSome(this.serviceRasterInfo)?this.serviceRasterInfo.multidimensionalInfo:null}},{key:"parsedUrl",get:function(){return na.urlToObject(this.url)}},{key:"renderer",set:function(a){this.loaded&&
(a=this._configRenderer(a));this._set("renderer",a)}},{key:"rasterFields",get:function(){const a=this._rasterAttributeTableFieldPrefix||"Raster.";var b=new I({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"});const c=new I({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),d=new I({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});
let e=this.fields?aa.clone(this.fields):[];e.push(c);this.capabilities?.operations.supportsQuery&&this.fields&&0<this.fields.length&&e.push(b);10.4<=this.version&&u.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(f=>"none"===f.name.toLowerCase())&&e.push(d);u.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(f=>"none"!==f.name.toLowerCase()).forEach(f=>{e.push(new I({name:"Raster.ServicePixelValue."+f.name,alias:f.name,domain:null,editable:!1,length:50,type:"string"}))});
this._isVectorDataSet()&&(e.push(new I({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),e.push(new I({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));({attributeTable:b}=this.rasterInfo??{});u.isSome(b)&&(b=b.fields.filter(f=>"esriFieldTypeOID"!==f.type&&"value"!==f.name.toLowerCase()).map(f=>{const n=aa.clone(f);n.name=a+f.name;return n}),e=e.concat(b));return e}},{key:"renderingRule",set:function(a){a&&a.rasterFunction&&(a=L.fromJSON({...a.toJSON(),
rasterFunction:a.rasterFunction,rasterFunctionArguments:a.rasterFunctionArguments}));this._set("renderingRule",a)}}]);return O}(h);k.__decorate([p.property()],h.prototype,"_functionRasterInfos",void 0);k.__decorate([p.property()],h.prototype,"_rasterJobHandler",void 0);k.__decorate([p.property()],h.prototype,"_cachedRendererJson",void 0);k.__decorate([p.property({readOnly:!0})],h.prototype,"_serviceSupportsMosaicRule",void 0);k.__decorate([A.reader("_serviceSupportsMosaicRule",["currentVersion","fields"])],
h.prototype,"readServiceSupportsMosaicRule",null);k.__decorate([p.property()],h.prototype,"_rasterAttributeTableFieldPrefix",void 0);k.__decorate([p.property({readOnly:!0})],h.prototype,"_rasterFunctionNamesIndex",null);k.__decorate([p.property()],h.prototype,"adjustAspectRatio",void 0);k.__decorate([p.property({type:[E.Integer],json:{write:!0}})],h.prototype,"bandIds",void 0);k.__decorate([A.reader("bandIds")],h.prototype,"readBandIds",null);k.__decorate([p.property({readOnly:!0,json:{read:!1}})],
h.prototype,"capabilities",void 0);k.__decorate([A.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],h.prototype,"readCapabilities",null);k.__decorate([p.property({type:Number})],h.prototype,"compressionQuality",void 0);k.__decorate([H.writer("compressionQuality")],h.prototype,"writeCompressionQuality",null);k.__decorate([p.property({type:Number})],h.prototype,"compressionTolerance",void 0);k.__decorate([H.writer("compressionTolerance")],h.prototype,"writeCompressionTolerance",
null);k.__decorate([p.property({json:{read:{source:"copyrightText"}}})],h.prototype,"copyright",void 0);k.__decorate([p.property({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],h.prototype,"defaultMosaicRule",void 0);k.__decorate([A.reader("defaultMosaicRule",["defaultMosaicMethod"])],h.prototype,"readDefaultMosaicRule",null);k.__decorate([p.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],h.prototype,"definitionExpression",void 0);
k.__decorate([p.property({readOnly:!0,constructOnly:!0})],h.prototype,"exportImageServiceParameters",void 0);k.__decorate([p.property()],h.prototype,"rasterInfo",void 0);k.__decorate([p.property({readOnly:!0,type:[I]})],h.prototype,"fields",void 0);k.__decorate([p.property({readOnly:!0})],h.prototype,"fieldsIndex",null);k.__decorate([p.property({type:"png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" "),json:{write:!0}})],h.prototype,"format",null);k.__decorate([A.reader("service","format",
["serviceDataType"])],h.prototype,"readFormat",null);k.__decorate([p.property({type:U})],h.prototype,"fullExtent",void 0);k.__decorate([p.property({readOnly:!0})],h.prototype,"hasMultidimensions",void 0);k.__decorate([p.property({json:{read:{source:"maxImageHeight"}}})],h.prototype,"imageMaxHeight",void 0);k.__decorate([p.property({json:{read:{source:"maxImageWidth"}}})],h.prototype,"imageMaxWidth",void 0);k.__decorate([p.property({type:String,json:{type:K.interpolationKebab.jsonValues,read:K.interpolationKebab.read,
write:K.interpolationKebab.write}})],h.prototype,"interpolation",void 0);k.__decorate([p.property()],h.prototype,"minScale",void 0);k.__decorate([A.reader("service","minScale")],h.prototype,"readMinScale",null);k.__decorate([p.property()],h.prototype,"maxScale",void 0);k.__decorate([A.reader("service","maxScale")],h.prototype,"readMaxScale",null);k.__decorate([p.property({type:J})],h.prototype,"mosaicRule",null);k.__decorate([A.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],h.prototype,
"readMosaicRule",null);k.__decorate([H.writer("mosaicRule")],h.prototype,"writeMosaicRule",null);k.__decorate([p.property()],h.prototype,"multidimensionalInfo",null);k.__decorate([p.property({type:sa,json:{write:!0}})],h.prototype,"multidimensionalSubset",void 0);k.__decorate([p.property({json:{type:E.Integer}})],h.prototype,"noData",void 0);k.__decorate([H.writer("noData")],h.prototype,"writeNoData",null);k.__decorate([p.property({type:String,json:{type:K.noDataInterpretationKebab.jsonValues,read:K.noDataInterpretationKebab.read,
write:K.noDataInterpretationKebab.write}})],h.prototype,"noDataInterpretation",void 0);k.__decorate([p.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],h.prototype,"objectIdField",void 0);k.__decorate([A.reader("objectIdField")],h.prototype,"readObjectIdField",null);k.__decorate([p.property({})],h.prototype,"geometryType",void 0);k.__decorate([p.property({})],h.prototype,"typeIdField",void 0);k.__decorate([p.property({})],h.prototype,"types",void 0);k.__decorate([p.property({readOnly:!0})],
h.prototype,"parsedUrl",null);k.__decorate([p.property({type:Function})],h.prototype,"pixelFilter",void 0);k.__decorate([p.property()],h.prototype,"raster",void 0);k.__decorate([p.property({readOnly:!0})],h.prototype,"sourceType",void 0);k.__decorate([A.reader("sourceType",["serviceSourceType","fields"])],h.prototype,"readSourceType",null);k.__decorate([p.property()],h.prototype,"viewId",void 0);k.__decorate([p.property({types:R.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",
origins:{"web-scene":{types:R.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(G){return{enabled:G&&"vector-field"!==G.type&&"flow"!==G.type}}}}}}})],h.prototype,"renderer",null);k.__decorate([A.reader("renderer")],h.prototype,"readRenderer",null);k.__decorate([H.writer("renderer")],h.prototype,"writeRenderer",null);k.__decorate([p.property()],h.prototype,"symbolizer",void 0);k.__decorate([p.property(ca.opacity)],h.prototype,"opacity",void 0);k.__decorate([p.property({readOnly:!0})],
h.prototype,"rasterFields",null);k.__decorate([p.property({constructOnly:!0})],h.prototype,"rasterFunctionInfos",void 0);k.__decorate([p.property({type:L})],h.prototype,"renderingRule",null);k.__decorate([A.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],h.prototype,"readRenderingRule",null);k.__decorate([H.writer("renderingRule")],h.prototype,"writeRenderingRule",null);k.__decorate([p.property()],h.prototype,"serviceDataType",void 0);k.__decorate([p.property({readOnly:!0,type:W})],
h.prototype,"spatialReference",void 0);k.__decorate([A.reader("spatialReference",["spatialReference","extent"])],h.prototype,"readSpatialReference",null);k.__decorate([p.property({json:{type:X.jsonValues}})],h.prototype,"pixelType",void 0);k.__decorate([A.reader("pixelType")],h.prototype,"readPixelType",null);k.__decorate([H.writer("pixelType")],h.prototype,"writePixelType",null);k.__decorate([p.property({constructOnly:!0,type:ta})],h.prototype,"serviceRasterInfo",void 0);k.__decorate([p.property()],
h.prototype,"sourceJSON",void 0);k.__decorate([p.property(ca.url)],h.prototype,"url",void 0);k.__decorate([p.property({readOnly:!0})],h.prototype,"version",void 0);k.__decorate([A.reader("version",["currentVersion","fields","timeInfo"])],h.prototype,"readVersion",null);return h=k.__decorate([oa.subclass("esri.layers.mixins.ArcGISImageService")],h)};Object.defineProperties(Z,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});