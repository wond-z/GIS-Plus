// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../config ../request ../symbols ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/arrayUtils ../core/accessorSupport/ensureType ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../geometry/Extent ../geometry/support/spatialReferenceUtils ./Layer ./mixins/BlendLayer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./support/commonProperties ../symbols/Symbol ../symbols/SimpleLineSymbol ../symbols/PictureMarkerSymbol ../symbols/SimpleMarkerSymbol ../symbols/SimpleFillSymbol".split(" "),
function(k,d,r,t,q,u,b,v,w,e,L,M,x,y,z,A,B,C,D,E,F,G,n,h,H,p,I,J){const K=["atom","xml"];q={base:h,key:"type",typeMap:{"simple-line":H},errorContext:"symbol"};p={base:h,key:"type",typeMap:{"picture-marker":p,"simple-marker":I},errorContext:"symbol"};h={base:h,key:"type",typeMap:{"simple-fill":J},errorContext:"symbol"};b=function(l){function m(...a){a=l.call(this,...a)||this;a.description=null;a.fullExtent=null;a.legendEnabled=!0;a.lineSymbol=null;a.pointSymbol=null;a.polygonSymbol=null;a.operationalLayerType=
"GeoRSS";a.url=null;a.type="geo-rss";return a}k._inheritsLoose(m,l);var g=m.prototype;g.normalizeCtorArgs=function(a,c){return"string"===typeof a?{url:a,...c}:a};g.readFeatureCollections=function(a,c){c.featureCollection.layers.forEach(f=>{(f=f.layerDefinition.drawingInfo.renderer.symbol)&&"esriSFS"===f.type&&f.outline?.style.includes("esriSFS")&&(f.outline.style="esriSLSSolid")});return c.featureCollection.layers};g.load=function(a){const c=u.isSome(a)?a.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service",
"Feature Service","Feature Collection","Scene Service"]},a).catch(v.throwIfAbortError).then(()=>this._fetchService(c)).then(f=>{this.read(f,{origin:"service"})}));return Promise.resolve(this)};g.hasDataChanged=function(){var a=k._asyncToGenerator(function*(){const c=yield this._fetchService();this.read(c,{origin:"service",ignoreDefaults:!0});return!0});return function(){return a.apply(this,arguments)}}();g._fetchService=function(){var a=k._asyncToGenerator(function*(c){const f=this.spatialReference;
({data:c}=yield t(r.geoRSSServiceUrl,{query:{url:this.url,refresh:this.loaded?!0:void 0,outSR:A.isWGS84(f)?void 0:f.wkid??JSON.stringify(f)},signal:c}));return c});return function(c){return a.apply(this,arguments)}}();g._hasGeometry=function(a){return this.featureCollections?.some(c=>c.featureSet?.geometryType===a&&0<c.featureSet.features?.length)??!1};k._createClass(m,[{key:"hasPoints",get:function(){return this._hasGeometry("esriGeometryPoint")}},{key:"hasPolylines",get:function(){return this._hasGeometry("esriGeometryPolyline")}},
{key:"hasPolygons",get:function(){return this._hasGeometry("esriGeometryPolygon")}},{key:"title",get:function(){const a=this._get("title");return a&&"defaults"!==this.originOf("title")?a:this.url?w.getFilename(this.url,K)||"GeoRSS":a||""},set:function(a){this._set("title",a)}}]);return m}(C.BlendLayer(F.RefreshableLayer(D.OperationalLayer(E.PortalLayer(G.ScaleRangeLayer(b.MultiOriginJSONMixin(B)))))));d.__decorate([e.property()],b.prototype,"description",void 0);d.__decorate([e.property()],b.prototype,
"featureCollections",void 0);d.__decorate([x.reader("service","featureCollections",["featureCollection.layers"])],b.prototype,"readFeatureCollections",null);d.__decorate([e.property({type:z,json:{name:"lookAtExtent"}})],b.prototype,"fullExtent",void 0);d.__decorate([e.property(n.id)],b.prototype,"id",void 0);d.__decorate([e.property(n.legendEnabled)],b.prototype,"legendEnabled",void 0);d.__decorate([e.property({types:q,json:{write:!0}})],b.prototype,"lineSymbol",void 0);d.__decorate([e.property({type:["show",
"hide"]})],b.prototype,"listMode",void 0);d.__decorate([e.property({types:p,json:{write:!0}})],b.prototype,"pointSymbol",void 0);d.__decorate([e.property({types:h,json:{write:!0}})],b.prototype,"polygonSymbol",void 0);d.__decorate([e.property({type:["GeoRSS"]})],b.prototype,"operationalLayerType",void 0);d.__decorate([e.property(n.url)],b.prototype,"url",void 0);d.__decorate([e.property({json:{origins:{service:{read:{source:"name",reader(l){return l||void 0}}}}}})],b.prototype,"title",null);d.__decorate([e.property({readOnly:!0,
json:{read:!1},value:"geo-rss"})],b.prototype,"type",void 0);return b=d.__decorate([y.subclass("esri.layers.GeoRSSLayer")],b)});