// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../geometry ../../request ../../core/Error ../../core/iteratorUtils ../../core/maybe ../../core/promiseUtils ../../core/urlUtils ../../geometry/projection ../../geometry/support/spatialReferenceUtils ../../geometry/support/typeUtils ../graphics/sources/geojson/geojson ./dateUtils ./xmlUtils ../support/Field ../../geometry/SpatialReference ../../geometry/Extent".split(" "),function(l,m,ka,t,k,y,u,U,v,K,w,V,W,X,n,r,L,Y){function z(){z=m._asyncToGenerator(function*(a,
b){b=yield t(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:"2.0.0",...b?.customParameters},signal:b?.signal});b=M(b.data);v.isHTTPSProtocol(a)&&(v.hasSameOrigin(a,b.operations.DescribeFeatureType.url,!0)&&(b.operations.DescribeFeatureType.url=v.toHTTPS(b.operations.DescribeFeatureType.url)),v.hasSameOrigin(a,b.operations.GetFeature.url,!0)&&(b.operations.GetFeature.url=v.toHTTPS(b.operations.GetFeature.url)));return b});return z.apply(this,arguments)}function M(a){a=
A(a);Z(a);B(a);a=a.firstElementChild;const b=y.cache(aa(a));return{operations:ba(a),get featureTypes(){return Array.from(b())},readFeatureTypes:b}}function ba(a){let b=!1;const c={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};n.visitXML(a,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute("name")){case "GetCapabilities":return{DCP:{HTTP:{Get:d=>{c.GetCapabilities.url=d.getAttribute("xlink:href")}}}};case "DescribeFeatureType":return{DCP:{HTTP:{Get:d=>
{c.DescribeFeatureType.url=d.getAttribute("xlink:href")}}}};case "GetFeature":return{DCP:{HTTP:{Get:d=>{c.GetFeature.url=d.getAttribute("xlink:href")}}},Parameter:d=>{if("outputFormat"===d.getAttribute("name"))return{AllowedValues:{Value:f=>{(f=f.textContent)&&ca.has(f.toLowerCase())&&(c.GetFeature.outputFormat=f)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case "KVPEncoding":return{DefaultValue:d=>{b="true"===d.textContent.toLowerCase()}};case "ImplementsResultPaging":return{DefaultValue:d=>
{c.GetFeature.supportsPagination="true"===d.textContent.toLowerCase()}}}}}});if(!b)throw new k("wfs-layer:kvp-encoding-not-supported","WFS service doesn't support key/value pair (KVP) encoding");if(u.isNone(c.GetFeature.outputFormat))throw new k("wfs-layer:geojson-not-supported","WFS service doesn't support GeoJSON output format");return c}function aa(a){return n.iterateXML(a,{FeatureTypeList:{FeatureType:b=>{const c={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",
namespaceUri:"",supportedSpatialReferences:[]},e=new Set([4326]),d=f=>{f=parseInt(f.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);Number.isNaN(f)||e.add(f)};n.visitXML(b,{Name:f=>{const {name:g,prefix:h}=x(f.textContent);c.typeName=`${h}:${g}`;c.name=g;c.namespacePrefix=h;c.namespaceUri=f.lookupNamespaceURI(h)},Abstract:f=>{c.description=f.textContent},Title:f=>{c.title=f.textContent},WGS84BoundingBox:f=>{c.extent=da(f)},DefaultSRS:d,DefaultCRS:d,OtherSRS:d,OtherCRS:d});c.title||(c.title=
c.name);c.supportedSpatialReferences.push(...e);return c}}})}function da(a){let b,c,e,d;for(const f of a.children)switch(f.localName){case "LowerCorner":[b,c]=f.textContent.split(" ").map(g=>Number.parseFloat(g));break;case "UpperCorner":[e,d]=f.textContent.split(" ").map(g=>Number.parseFloat(g))}return{xmin:b,ymin:c,xmax:e,ymax:d,spatialReference:w.WGS84}}function N(a,b,c){return y.find(a,e=>c?e.name===b&&e.namespaceUri===c:e.typeName===b||e.name===b)}function C(){C=m._asyncToGenerator(function*(a,
b,c,e={}){const {featureType:d,extent:f}=yield O(a,b,c,e),{fields:g,geometryType:h,swapXY:q,objectIdField:p,geometryField:D}=yield ea(a,d.typeName,e);return{url:a.operations.GetCapabilities.url,name:d.name,namespaceUri:d.namespaceUri,fields:g,geometryField:D,geometryType:h,objectIdField:p,spatialReference:e.spatialReference??L.WGS84,extent:f,swapXY:q,wfsCapabilities:a,customParameters:e.customParameters}});return C.apply(this,arguments)}function O(a,b,c){return E.apply(this,arguments)}function E(){E=
m._asyncToGenerator(function*(a,b,c,e={}){const {spatialReference:d=L.WGS84}=e;a=a.readFeatureTypes();c=b?N(a,b,c):a.next().value;if(u.isNone(c)){if(b)throw new k("wfs-layer:feature-type-not-found",`The type '${b}' could not be found in the service`);throw new k("wfs-layer:empty-service","The service is empty");}b=new Y({...c.extent,spatialReference:d});if(!w.equals(d,w.WGS84))try{yield K.initializeProjection(w.WGS84,d,void 0,e),b=K.project(b,w.WGS84)}catch{throw new k("wfs-layer:unsupported-spatial-reference",
"Projection not supported");}return{extent:b,spatialReference:d,featureType:c}});return E.apply(this,arguments)}function ea(a,b){return F.apply(this,arguments)}function F(){F=m._asyncToGenerator(function*(a,b,c={}){const [e,d]=yield U.eachAlways([P(a.operations.DescribeFeatureType.url,b,c),fa(a,b,c)]);if(e.error||d.error)throw new k("wfs-layer:getWFSLayerTypeInfo-error",`An error occurred while getting info about the feature type '${b}'`,{error:e.error||d.error});const {fields:f,errors:g}=e.value??
{};a=e.value?.geometryType||d.value?.geometryType;c=d.value?.swapXY??!1;if(u.isNone(a))throw new k("wfs-layer:unknown-geometry-type",`The geometry type could not be determined for type '${b}`,{typeName:b,geometryType:a,fields:f,errors:g});return{...Q(f??[]),geometryType:a,swapXY:c}});return F.apply(this,arguments)}function Q(a){const b=a.find(e=>"geometry"===e.type);let c=a.find(e=>"oid"===e.type);a=a.filter(e=>"geometry"!==e.type);c||(c=new r({name:"__esri_wfs_id__",type:"oid",alias:"__esri_wfs_id__"}),
a.unshift(c));return{geometryField:b?.name??null,objectIdField:c.name,fields:a}}function fa(a,b){return G.apply(this,arguments)}function G(){G=m._asyncToGenerator(function*(a,b,c={}){let e,d=!1;const [f,g]=yield Promise.all([R(a.operations.GetFeature.url,b,a.operations.GetFeature.outputFormat,{...c,count:1}),t(a.operations.GetFeature.url,{responseType:"text",query:S(b,void 0,{...c,count:1}),signal:c?.signal})]);if(a="FeatureCollection"===f.type&&f.features[0]?.geometry){e=V.featureGeometryTypeKebabDictionary.fromJSON(W.getGeometryType(a.type));
switch(a.type){case "Point":var h=a.coordinates;break;case "LineString":case "MultiPoint":h=a.coordinates[0];break;case "MultiLineString":case "Polygon":h=a.coordinates[0][0];break;case "MultiPolygon":h=a.coordinates[0][0][0]}if(b=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(g.data))a=h[0].toFixed(3),h=h[1].toFixed(3),c=parseFloat(b[1]).toFixed(3),b=parseFloat(b[2]).toFixed(3),a===b&&h===c&&(d=!0)}return{geometryType:e,swapXY:d}});return G.apply(this,arguments)}function P(a,b,c){return H.apply(this,
arguments)}function H(){H=m._asyncToGenerator(function*(a,b,c){a=yield t(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:"2.0.0",TYPENAME:b,...c?.customParameters},signal:c?.signal});return T(b,a.data)});return H.apply(this,arguments)}function T(a,b){const {name:c}=x(a);b=A(b);B(b);const e=y.find(n.iterateXML(b.firstElementChild,{element:d=>({name:d.getAttribute("name"),typeName:x(d.getAttribute("type")).name})}),({name:d})=>d===c);if(u.isSome(e)){const d=y.find(n.iterateXML(b.firstElementChild,
{complexType:f=>f}),f=>f.getAttribute("name")===e.typeName);if(u.isSome(d))return ha(d)}throw new k("wfs-layer:feature-type-not-found",`Type '${a}' not found in document`,{document:(new XMLSerializer).serializeToString(b)});}function ha(a){const b=[],c=[];let e=void 0;var d=n.iterateXML(a,{complexContent:{extension:{sequence:{element:f=>f}}}});for(const f of d){d=f.getAttribute("name");if(!d)continue;let g,h;f.hasAttribute("type")?g=x(f.getAttribute("type")).name:n.visitXML(f,{simpleType:{restriction:D=>
{g=x(D.getAttribute("base")).name;return{maxLength:ia=>{h=+ia.getAttribute("value")}}}}});if(!g)continue;const q="true"===f.getAttribute("nillable");let p=!1;switch(g.toLowerCase()){case "integer":case "nonpositiveinteger":case "negativeinteger":case "long":case "int":case "short":case "byte":case "nonnegativeinteger":case "unsignedlong":case "unsignedint":case "unsignedshort":case "unsignedbyte":case "positiveinteger":c.push(new r({name:d,alias:d,type:"integer",nullable:q}));break;case "float":case "double":case "decimal":c.push(new r({name:d,
alias:d,type:"double",nullable:q}));break;case "boolean":case "string":case "gyearmonth":case "gyear":case "gmonthday":case "gday":case "gmonth":case "anyuri":case "qname":case "notation":case "normalizedstring":case "token":case "language":case "idrefs":case "entities":case "nmtoken":case "nmtokens":case "name":case "ncname":case "id":case "idref":case "entity":case "duration":case "time":c.push(new r({name:d,alias:d,type:"string",nullable:q,length:h??255}));break;case "datetime":case "date":c.push(new r({name:d,
alias:d,type:"date",nullable:q,length:h??36}));break;case "pointpropertytype":e="point";p=!0;break;case "multipointpropertytype":e="multipoint";p=!0;break;case "curvepropertytype":case "multicurvepropertytype":case "multilinestringpropertytype":e="polyline";p=!0;break;case "surfacepropertytype":case "multisurfacepropertytype":case "multipolygonpropertytype":e="polygon";p=!0;break;case "geometrypropertytype":case "multigeometrypropertytype":p=!0;b.push(new k("wfs-layer:unknown-geometry-type",`geometry type '${g}' is not supported`,
{type:(new XMLSerializer).serializeToString(a)}));break;default:b.push(new k("wfs-layer:unknown-field-type",`Unknown field type '${g}'`,{type:(new XMLSerializer).serializeToString(a)}))}p&&c.push(new r({name:d,alias:d,type:"geometry",nullable:q}))}for(const f of c)if("integer"===f.type&&!f.nullable&&ja.has(f.name.toLowerCase())){f.type="oid";break}return{geometryType:e,fields:c,errors:b}}function R(a,b,c,e){return I.apply(this,arguments)}function I(){I=m._asyncToGenerator(function*(a,b,c,e){({data:a}=
yield t(a,{responseType:"text",query:S(b,c,e),signal:e?.signal}));a=a.replace(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{if(e?.dateFields?.length){const d=new Set(e.dateFields);return JSON.parse(a,(f,g)=>d.has(f)?X.parseDate(g):g)}return JSON.parse(a)}catch(d){throw new k("wfs-layer:malformed-json","Error while parsing the\u00a0response",{response:a,error:d});}});return I.apply(this,arguments)}function S(a,b,c){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:a,OUTPUTFORMAT:b,SRSNAME:"EPSG:4326",
STARTINDEX:c?.startIndex,COUNT:c?.count,...c?.customParameters}}function J(){J=m._asyncToGenerator(function*(a,b,c){a=yield t(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:b,RESULTTYPE:"hits",...c?.customParameters},signal:c?.signal});a=A(a.data);B(a);a=Number.parseFloat(a.firstElementChild.getAttribute("numberMatched"));return Number.isNaN(a)?0:a});return J.apply(this,arguments)}function A(a){return(new DOMParser).parseFromString(a.trim(),"text/xml")}
function x(a){const [b,c]=a.split(":");return{prefix:c?b:"",name:c??b}}function Z(a){if((a=a.firstElementChild?.getAttribute("version"))&&"2.0.0"!==a)throw new k("wfs-layer:unsupported-wfs-version",`Unsupported WFS version ${a}. Supported version: ${"2.0.0"}`);}function B(a){let b="",c="";n.visitXML(a.firstElementChild,{Exception:e=>{b=e.getAttribute("exceptionCode");return{ExceptionText:d=>{c=d.textContent}}}});if(b)throw new k(`wfs-layer:${b}`,c);}const ca=new Set(["json","application/json","geojson",
"application/json; subtype\x3dgeojson"]),ja=new Set(["objectid","fid"]);l.WFS_OID_FIELD_NAME="__esri_wfs_id__";l.describeFeatureType=P;l.findFeatureType=N;l.getCapabilities=function(a,b){return z.apply(this,arguments)};l.getFeature=R;l.getFeatureCount=function(a,b,c){return J.apply(this,arguments)};l.getFeatureTypeInfo=O;l.getWFSLayerInfo=function(a,b,c){return C.apply(this,arguments)};l.parseDescribeFeatureTypeResponse=T;l.parseGetCapabilitiesResponse=M;l.prepareWFSLayerFields=Q;Object.defineProperties(l,
{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});