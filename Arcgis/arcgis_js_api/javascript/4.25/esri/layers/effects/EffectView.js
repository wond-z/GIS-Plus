// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/Accessor ../../core/has ../../core/lang ../../core/Logger ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ./parser ./utils".split(" "),function(e,w,h,z,A,p,B,l,E,C,D,x){function t(c){c=D.parse(c)||[];var b=(b=c[0])?"type"in b:!1;return b?[{scale:-1,effects:c}]:c}function u(c,b,g){return c[0]?.effects&&b[0]?.effects?(-1===c[0]?.scale||
-1===b[0]?.scale)&&(1<c.length||1<b.length)&&0>=g?!1:x.canInterpolateEffects(c[0].effects,b[0].effects):!0}function y(c,b,g){const a=c.length>b.length?c:b;c=c.length>b.length?b:c;var d=c[c.length-1];b=d?.scale??g;d=d?.effects??[];for(let f=c.length;f<a.length;f++)c.push({scale:b,effects:[...d]});for(b=0;b<a.length;b++)c[b].scale=-1===c[b].scale?g:c[b].scale,a[b].scale=-1===a[b].scale?g:a[b].scale,x.normalizeEffects(c[b].effects,a[b].effects)}e.EffectView=function(c){function b(a){a=c.call(this,a)||
this;a._from=null;a._to=null;a._final=null;a._current=[];a._time=0;a.duration=A("mapview-transitions-duration");a.effects=[];return a}w._inheritsLoose(b,c);var g=b.prototype;g.canTransitionTo=function(a){try{return 0<this.scale&&u(this._current,t(a),this.scale)}catch{return!1}};g.transitionStep=function(a,d){this._applyTimeTransition(a);this._updateForScale(d)};g.endTransitions=function(){this._applyTimeTransition(this.duration)};g._transitionTo=function(a){0<this.scale&&u(this._current,a,this.scale)?
(this._final=a,this._to=p.clone(a),y(this._current,this._to,this.scale),this._from=p.clone(this._current),this._time=0):(this._from=this._to=this._final=null,this._current=a);this._set("effects",this._current[0]?p.clone(this._current[0].effects):[])};g._applyTimeTransition=function(a){if(this._to&&this._from&&this._current&&this._final){this._time+=a;a=Math.min(1,this._time/this.duration);for(let f=0;f<this._current.length;f++){const k=this._current[f],n=this._from[f],m=this._to[f];var d=n.scale;
k.scale=d+(m.scale-d)*a;for(d=0;d<k.effects.length;d++)k.effects[d].interpolate(n.effects[d],m.effects[d],a)}1===a&&(this._current=this._final,this._set("effects",this._current[0]?p.clone(this._current[0].effects):[]),this._from=this._to=this._final=null)}};g._updateForScale=function(a){this._set("scale",a);if(0!==this._current.length){var d=this._current,f=this._current.length-1,k,n=1;if(1===d.length||a>=d[0].scale)var m=k=d[0].effects;else if(a<=d[f].scale)m=k=d[f].effects;else for(let q=0;q<f;q++){const r=
d[q],v=d[q+1];if(r.scale>=a&&v.scale<=a){n=(a-r.scale)/(v.scale-r.scale);k=r.effects;m=v.effects;break}}for(a=0;a<this.effects.length;a++)this.effects[a].interpolate(k[a],m[a],n)}};w._createClass(b,[{key:"effect",set:function(a){const d=this._get("effect");a=a||"";if(d!==a){this._set("effect",a);try{this._transitionTo(t(a))}catch(f){this._transitionTo([]),B.getLogger(this.declaredClass).warn("Invalid Effect",{effect:a,error:f})}}}},{key:"hasEffects",get:function(){return this.transitioning||!!this.effects.length}},
{key:"scale",set:function(a){this._updateForScale(a)}},{key:"transitioning",get:function(){return null!==this._to}}]);return b}(z);h.__decorate([l.property()],e.EffectView.prototype,"_to",void 0);h.__decorate([l.property()],e.EffectView.prototype,"duration",void 0);h.__decorate([l.property({value:""})],e.EffectView.prototype,"effect",null);h.__decorate([l.property({readOnly:!0})],e.EffectView.prototype,"effects",void 0);h.__decorate([l.property({readOnly:!0})],e.EffectView.prototype,"hasEffects",
null);h.__decorate([l.property({value:0})],e.EffectView.prototype,"scale",null);h.__decorate([l.property({readOnly:!0})],e.EffectView.prototype,"transitioning",null);e.EffectView=h.__decorate([C.subclass("esri.layers.effects.EffectView")],e.EffectView);e.canInterpolateEffectStops=u;e.convertEffectToStops=t;e.normalizeEffectStops=y;Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});