// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../core/Collection ../core/Error ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/accessorSupport/decorators/property ../core/arrayUtils ../core/accessorSupport/ensureType ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../chunks/vec3 ../chunks/vec3f64 ../geometry/Extent ./Layer ./mixins/APIKeyMixin ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/SceneService ./support/arcgisLayerUrl ./support/commonProperties ./voxel/VoxelSection ./voxel/VoxelSimpleShading ./voxel/VoxelVariable ./voxel/VoxelVariableStyle ./voxel/VoxelVolume ./voxel/VoxelVolumeIndex ./voxel/VoxelVolumeStyle".split(" "),
function(w,f,l,r,e,m,D,E,g,T,F,x,G,H,I,y,J,K,L,M,N,O,P,Q,t,u,z,R,A,B,S,C){const n=e.getLogger("esri.layers.VoxelLayer");e=function(p){function q(a){a=p.call(this,a)||this;a.serviceRoot="";a.popupEnabled=!0;a.operationalLayerType="Voxel";a.legendEnabled=!0;a.title=null;a.sections=null;a.currentVariableId=0;a.volumeStyles=null;a.renderMode="volume";a.variableStyles=null;a.enableSlices=!0;a.enableSections=!0;a.enableDynamicSections=!0;a.enableIsosurfaces=!0;a.shading=new z;a.opacity=1;a.variables=new l;
a.volumes=new l;a.index=null;a.minScale=0;a.maxScale=0;a.type="voxel";a.version={major:Number.NaN,minor:Number.NaN,versionString:""};a.fullExtent=null;a.volumeStyles=new (l.ofType(C));a.variableStyles=new (l.ofType(A));a.sections=new (l.ofType(u));return a}w._inheritsLoose(q,p);var k=q.prototype;k.load=function(a){const b=m.isSome(a)?a.signal:null;a=this.loadFromPortal({supportedTypes:["Scene Service"]},a).catch(E.throwIfAbortError).then(()=>this._fetchService(b)).then(()=>this.serviceRoot=this.url);
this.addResolvingPromise(a);return Promise.resolve(this)};k.read=function(a,b){p.prototype.read.call(this,a,b);for(const c of this.volumes)c.spatialReference=this.spatialReference};k.readVersion=function(a,b){return p.prototype.parseVersionString.call(this,a)};k.validateLayer=function(a){if(a.layerType&&a.layerType!==this.operationalLayerType)throw new r("voxel-layer:layer-type-not-supported","VoxelLayer does not support this layer type",{layerType:a.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor)||
3>this.version.major)throw new r("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"3.x"});if(3<this.version.major)throw new r("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"3.x"});};k.readFullExtent=function(a,b,c){if(null!=a&&"object"===typeof a){a=y.fromJSON(a,c);if(0===a.zmin&&0===a.zmax&&Array.isArray(b.volumes)&&(b=B.fromJSON(b.volumes[0]),
b.isValid&&"xyt"!==b.volumeType&&(c=b.dimensions[2],c.isRegular))){b=c.regularSpacing.offset;c=c.regularSpacing.offset+c.regularSpacing.scale*(c.size-1);if(b>c){const d=b;b=c;c=d}a.zmin=b;a.zmax=c}return a}return null};k.getConfiguration=function(){const a={layerType:this.operationalLayerType,version:this.version.versionString,name:this.title,spatialReference:this.spatialReference,fullExtent:this.fullExtent,volumes:this.volumes.toJSON(),variables:this.variables.toJSON(),index:this.index.toJSON(),
sections:this.getSections(),style:{volumeStyles:this.getVolumeStyles(),currentVariableId:this.currentVariableId,renderMode:this.renderMode,variableStyles:this.getVariableStyles(),enableSections:this.enableSections,enableDynamicSections:this.enableDynamicSections,enableIsosurfaces:this.enableIsosurfaces,enableSlices:this.enableSlices,shading:this.shading}};return a.index&&this.index.isValid()?JSON.stringify(a):""};k.getVariableStyle=function(a){let b=-1;b=m.isSome(a)?a:this.currentVariableId;if(!this.variableStyles||
-1===b)return null;a=this.variableStyles.findIndex(c=>c.variableId===b);return 0>a?null:this.variableStyles.getItemAt(a)};k.getVariable=function(a){let b=-1;b=m.isSome(a)?a:this.currentVariableId;if(!this.variables||-1===b)return null;a=this.variables.findIndex(c=>c.id===b);return 0>a?null:this.variables.getItemAt(a)};k.getVolume=function(a){const b=this.getVariable(a);return m.isSome(b)?this.volumes.find(({id:c})=>c===b.volumeId):null};k.getVolumeStyle=function(a){const b=this.getVariable(a);return m.isSome(b)?
this.volumeStyles.find(({volumeId:c})=>c===b.volumeId):null};k.getColorForContinuousDataValue=function(a,b,c){var d=this.getVariable(a);if(!m.isSome(d)||"continuous"!==d.renderingFormat.continuity||!this.variableStyles)return null;d=this.variableStyles.findIndex(h=>h.variableId===a);if(0>d)return null;d=this.variableStyles.getItemAt(d);return d.transferFunction?d.transferFunction.getColorForContinuousDataValue(b,c):null};k.getSections=function(){const a=[];for(const b of this.sections)a.push(new u({enabled:b.enabled,
href:b.href,id:b.id,label:b.label,normal:b.normal,point:b.point,sizeInPixel:b.sizeInPixel,slices:b.slices,timeId:b.timeId,variableId:b.variableId}));return a};k.getVariableStyles=function(){const a=[];for(const b of this.variableStyles){const c=this._getVariable(b);if(m.isSome(c)){const d=b.clone();4<d.isosurfaces.length&&(d.isosurfaces=d.isosurfaces.slice(0,3),n.error("A maximum of 4 isosurfaces are supported for Voxel Layers."));for(const h of d.isosurfaces)if(h.colorLocked){const v=this.getColorForContinuousDataValue(d.variableId,
h.value,!1);null===v||v.equals(h.color)||(h.color=v)}if("continuous"===c.renderingFormat.continuity)(null===d.transferFunction||2>d.transferFunction.colorStops.length)&&n.error(`VoxelVariableStyle for variable ${c.id} is invalid. At least 2 color stops are required in the transferFunction for continuous Voxel Layer variables.`),null===d.transferFunction||Array.isArray(d.transferFunction.stretchRange)&&2===d.transferFunction.stretchRange.length||(n.error(`VoxelVariableStyle for variable ${c.id} is invalid. The stretchRange of the transferFunction for continuous Voxel Layer variables must be of the form [minimumDataValue, maximumDataValue].`),
d.transferFunction.stretchRange=[0,1],d.transferFunction.colorStops.removeAll());else if("discrete"===c.renderingFormat.continuity)if(0===b.uniqueValues.length)n.error(`VoxelVariableStyle for variable ${c.id} is invalid. Unique values are required for discrete Voxel Layer variables.`);else for(const h of b.uniqueValues)null!==h.label&&void 0!==h.label||null===h.value||void 0===h.value||(h.label=h.value.toString());a.push(d)}else n.error(`VoxelVariable ID=${b.variableId} doesn't exist, VoxelVariableStyle for this VoxelVariable will be ignored.`)}return a};
k.getVolumeStyles=function(){const a=[];for(const b of this.volumeStyles){const c=this._getVolumeFromVolumeId(b.volumeId);if(m.isSome(c)){const d=b.clone();for(const h of d.slices)this._isPlaneValid(h,[0,1,c.zDimension],c.dimensions)||(h.enabled=!1,h.label="invalid");for(const h of d.dynamicSections)this._isPlaneValid(h,[0,1,c.zDimension],c.dimensions)||(h.enabled=!1,h.label="invalid");a.push(d)}else n.error(`VoxelVolume ID=${b.volumeId} doesn't exist, VoxelVolumeStyle for this VoxelVolume will be ignored.`)}return a};
k._getVariable=function(a){a=a.variableId;for(const b of this.variables)if(b.id===a)return b;return null};k._getVolumeFromVolumeId=function(a){for(const b of this.volumes)if(b.id===a)return b;return null};k._isPlaneValid=function(a,b,c){if(!(a.point&&Array.isArray(a.point)&&3===a.point.length&&a.normal&&Array.isArray(a.normal)&&3===a.normal.length))return!1;for(let d=0;3>d;++d){const h=a.point[d];if(0>h||h>=c[b[d]].size)return!1}b=I.fromValues(a.normal[0],a.normal[1],a.normal[2]);H.normalize(b,b);
if(1E-6>Math.abs(b[0])+Math.abs(b[1])+Math.abs(b[2]))return!1;a.normal[0]=b[0];a.normal[1]=b[1];a.normal[2]=b[2];return!0};w._createClass(q,[{key:"url",set:function(a){this._set("url",Q.sanitizeUrl(a,n))}}]);return q}(P.SceneService(L.ArcGISService(M.OperationalLayer(N.PortalLayer(O.ScaleRangeLayer(D.MultiOriginJSONMixin(K.APIKeyMixin(J))))))));f.__decorate([g.property(t.popupEnabled)],e.prototype,"popupEnabled",void 0);f.__decorate([g.property({type:["Voxel"]})],e.prototype,"operationalLayerType",
void 0);f.__decorate([g.property(t.legendEnabled)],e.prototype,"legendEnabled",void 0);f.__decorate([g.property({json:{write:!0}})],e.prototype,"title",void 0);f.__decorate([g.property(t.url)],e.prototype,"url",null);f.__decorate([g.property({type:l.ofType(u),json:{origins:{"web-scene":{name:"layerDefinition.sections",write:!0}}}})],e.prototype,"sections",void 0);f.__decorate([g.property({type:F.Integer,json:{origins:{"web-scene":{name:"layerDefinition.style.currentVariableId",write:{enabled:!0,isRequired:!0,
ignoreOrigin:!0}},service:{name:"style.currentVariableId"}}}})],e.prototype,"currentVariableId",void 0);f.__decorate([g.property({type:l.ofType(C),json:{origins:{"web-scene":{name:"layerDefinition.style.volumeStyles",write:!0},service:{name:"style.volumeStyles"}}}})],e.prototype,"volumeStyles",void 0);f.__decorate([g.property({type:["volume","surfaces"],json:{origins:{"web-scene":{name:"layerDefinition.style.renderMode",write:!0},service:{name:"style.renderMode"}}}})],e.prototype,"renderMode",void 0);
f.__decorate([g.property({type:l.ofType(A),json:{origins:{"web-scene":{name:"layerDefinition.style.variableStyles",write:!0},service:{name:"style.variableStyles"}}}})],e.prototype,"variableStyles",void 0);f.__decorate([g.property({type:Boolean,json:{origins:{"web-scene":{name:"layerDefinition.style.enableSlices",write:!0},service:{name:"style.enableSlices"}}}})],e.prototype,"enableSlices",void 0);f.__decorate([g.property({type:Boolean,json:{origins:{"web-scene":{name:"layerDefinition.style.enableSections",
write:!0},service:{name:"style.enableSections"}}}})],e.prototype,"enableSections",void 0);f.__decorate([g.property({type:Boolean,json:{origins:{"web-scene":{name:"layerDefinition.style.enableDynamicSections",write:!0},service:{name:"style.enableDynamicSections"}}}})],e.prototype,"enableDynamicSections",void 0);f.__decorate([g.property({type:Boolean,json:{origins:{"web-scene":{name:"layerDefinition.style.enableIsosurfaces",write:!0},service:{name:"style.enableIsosurfaces"}}}})],e.prototype,"enableIsosurfaces",
void 0);f.__decorate([g.property({type:z,json:{origins:{"web-scene":{name:"layerDefinition.style.shading",write:!0},service:{name:"style.shading"}}}})],e.prototype,"shading",void 0);f.__decorate([g.property({type:["show","hide"]})],e.prototype,"listMode",void 0);f.__decorate([g.property({type:Number,range:{min:0,max:1},nonNullable:!0,json:{read:!1,write:!1,origins:{"web-scene":{read:!1,write:!1},"portal-item":{read:!1,write:!1}}}})],e.prototype,"opacity",void 0);f.__decorate([g.property({type:l.ofType(R)})],
e.prototype,"variables",void 0);f.__decorate([g.property({type:l.ofType(B)})],e.prototype,"volumes",void 0);f.__decorate([g.property({type:S})],e.prototype,"index",void 0);f.__decorate([g.property({type:Number,json:{name:"layerDefinition.minScale",read:!1,write:!1,origins:{service:{read:!1,write:!1}}}})],e.prototype,"minScale",void 0);f.__decorate([g.property({type:Number,json:{name:"layerDefinition.maxScale",read:!1,write:!1,origins:{service:{read:!1,write:!1}}}})],e.prototype,"maxScale",void 0);
f.__decorate([g.property({json:{read:!1},readOnly:!0})],e.prototype,"type",void 0);f.__decorate([g.property({readOnly:!0,json:{name:"serviceVersion"}})],e.prototype,"version",void 0);f.__decorate([x.reader("service","version")],e.prototype,"readVersion",null);f.__decorate([g.property({type:y})],e.prototype,"fullExtent",void 0);f.__decorate([x.reader("service","fullExtent",["fullExtent"])],e.prototype,"readFullExtent",null);return e=f.__decorate([G.subclass("esri.layers.VoxelLayer")],e)});