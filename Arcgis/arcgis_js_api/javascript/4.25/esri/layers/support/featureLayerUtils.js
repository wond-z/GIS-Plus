// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("require exports ../../chunks/_rollupPluginBabelHelpers ../../core/Error ../../core/has ../../core/jsonMap ../../core/maybe ../../core/sql ./arcgisLayerUrl ../../rest/support/AttachmentQuery ../../rest/support/Query ../../rest/support/RelationshipQuery".split(" "),function(P,h,n,k,Q,v,J,R,K,S,t,L){function e(a,b,c){return!(a&&a.hasOwnProperty(b)?!a[b]:!c)}function u(a,b,c){return a&&a.hasOwnProperty(b)?a[b]:c}function T(a){a=a?.supportedSpatialAggregationStatistics?.map(b=>b.toLowerCase());
return{envelope:!!a?.includes("envelopeaggregate"),centroid:!!a?.includes("centroidaggregate"),convexHull:!!a?.includes("convexhullaggregate")}}function r(a,b){return!!a?.supportedOperationsWithCacheHint?.map(c=>c.toLowerCase())?.includes(b.toLowerCase())}function U(a){const b=a.attachmentProperties,c={supportsName:!1,supportsSize:!1,supportsContentType:!1,supportsKeywords:!1,supportsExifInfo:!1,supportsCacheHint:r(a.advancedQueryCapabilities,"queryAttachments"),supportsResize:e(a,"supportsAttachmentsResizing",
!1)};b&&Array.isArray(b)&&b.forEach(d=>{const f=V[d.name];f&&(c[f]=!!d.isEnabled)});return c}function W(a,b,c){a=a?a.toLowerCase().split(",").map(q=>q.trim()):[];c=c?K.parse(c):null;c=a.includes(J.isSome(c)&&"MapServer"===c.serverType?"data":"query");const d=a.includes("editing")&&!b.datesInUnknownTimezone;let f=d&&a.includes("create"),g=d&&a.includes("delete"),p=d&&a.includes("update");const m=a.includes("changetracking"),l=b.advancedQueryCapabilities;!d||f||g||p||(f=g=p=!0);return{supportsCalculate:e(b,
"supportsCalculate",!1),supportsTruncate:e(b,"supportsTruncate",!1),supportsValidateSql:e(b,"supportsValidateSql",!1),supportsAdd:f,supportsDelete:g,supportsEditing:d,supportsChangeTracking:m,supportsQuery:c,supportsQueryAnalytics:e(l,"supportsQueryAnalytic",!1),supportsQueryAttachments:e(l,"supportsQueryAttachments",!1),supportsQueryTopFeatures:e(l,"supportsTopFeaturesQuery",!1),supportsResizeAttachments:e(b,"supportsAttachmentsResizing",!1),supportsSync:a.includes("sync"),supportsUpdate:p,supportsExceedsLimitStatistics:e(b,
"supportsExceedsLimitStatistics",!1)}}function X(a,b){const c=a.advancedQueryCapabilities,d=a.ownershipBasedAccessControlForFeatures,f=a.archivingInfo;var g=M(a),p=b?.includes("MapServer");g=!Q("mapserver-pbf-enabled")&&p&&10.81>(g??0);b=K.isHostedAgolService(b);p=(a.supportedQueryFormats||"").split(",").reduce((m,l)=>{(l=l.toLowerCase().trim())&&m.add(l);return m},new Set);return{supportsStatistics:e(c,"supportsStatistics",a.supportsStatistics),supportsPercentileStatistics:e(c,"supportsPercentileStatistics",
!1),supportsSpatialAggregationStatistics:e(c,"supportsSpatialAggregationStatistics",!1),supportedSpatialAggregationStatistics:T(c),supportsCentroid:e(c,"supportsReturningGeometryCentroid",!1),supportsDistance:e(c,"supportsQueryWithDistance",!1),supportsDistinct:e(c,"supportsDistinct",a.supportsAdvancedQueries),supportsExtent:e(c,"supportsReturningQueryExtent",!1),supportsGeometryProperties:e(c,"supportsReturningGeometryProperties",!1),supportsHavingClause:e(c,"supportsHavingClause",!1),supportsOrderBy:e(c,
"supportsOrderBy",a.supportsAdvancedQueries),supportsPagination:e(c,"supportsPagination",!1),supportsQuantization:e(a,"supportsCoordinatesQuantization",!1),supportsQuantizationEditMode:e(a,"supportsQuantizationEditMode",!1),supportsQueryGeometry:e(a,"supportsReturningQueryGeometry",!1),supportsResultType:e(c,"supportsQueryWithResultType",!1),supportsMaxRecordCountFactor:e(c,"supportsMaxRecordCountFactor",!1),supportsSqlExpression:e(c,"supportsSqlExpression",!1),supportsStandardizedQueriesOnly:e(a,
"useStandardizedQueries",!1),supportsTopFeaturesQuery:e(c,"supportsTopFeaturesQuery",!1),supportsQueryByOthers:e(d,"allowOthersToQuery",!0),supportsHistoricMoment:e(f,"supportsQueryWithHistoricMoment",!1),supportsFormatPBF:!g&&p.has("pbf"),supportsDisjointSpatialRelationship:e(c,"supportsDisjointSpatialRel",!1),supportsCacheHint:e(c,"supportsQueryWithCacheHint",!1)||r(c,"query"),supportsDefaultSpatialReference:e(c,"supportsDefaultSR",!1),supportsCompactGeometry:b,supportsFullTextSearch:e(c,"supportsFullTextSearch",
!1),maxRecordCountFactor:u(a,"maxRecordCountFactor",void 0),maxRecordCount:u(a,"maxRecordCount",void 0),standardMaxRecordCount:u(a,"standardMaxRecordCount",void 0),tileMaxRecordCount:u(a,"tileMaxRecordCount",void 0)}}function w(){w=n._asyncToGenerator(function*(a,b,c,d){const {source:f}=yield a.load();yield x(a,b,d);if(!f.addAttachment)throw new k(d,"Layer source does not support addAttachment capability");return f.addAttachment(b,c)});return w.apply(this,arguments)}function x(a,b,c){const {attributes:d}=
b,{objectIdField:f}=a;return a.get("capabilities.data.supportsAttachment")?b?d?f&&d[f]?Promise.resolve():Promise.reject(new k(c,`feature is missing the identifying attribute ${f}`)):Promise.reject(new k(c,"'attributes' are required on a feature to query attachments")):Promise.reject(new k(c,"A feature is required to add/delete/update attachments")):Promise.reject(new k(c,"this layer doesn't support attachments"))}function y(){y=n._asyncToGenerator(function*(a,b,c,d,f){const {source:g}=yield a.load();
yield x(a,b,f);if(!g.updateAttachment)throw new k(f,"Layer source does not support updateAttachment capability");return g.updateAttachment(b,c,d)});return y.apply(this,arguments)}function z(){z=n._asyncToGenerator(function*(a,b,c){const d=yield new Promise((f,g)=>P(["../graphics/editingSupport"],f,g));a=yield a.load();return d.applyEdits(a,a.source,b,c)});return z.apply(this,arguments)}function A(){A=n._asyncToGenerator(function*(a,b,c,d){const {source:f}=yield a.load();yield x(a,b,d);if(!f.deleteAttachments)throw new k(d,
"Layer source does not support deleteAttachments capability");return f.deleteAttachments(b,c)});return A.apply(this,arguments)}function B(){B=n._asyncToGenerator(function*(a,b,c){({source:a}=yield a.load({signal:b?.signal}));if(!a.fetchRecomputedExtents)throw new k(c,"Layer source does not support fetchUpdates capability");return a.fetchRecomputedExtents(b)});return B.apply(this,arguments)}function C(){C=n._asyncToGenerator(function*(a,b,c,d){b=S.from(b);const {source:f,capabilities:g}=yield a.load();
if(!g?.data?.supportsAttachment)throw new k(d,"this layer doesn't support attachments");const {attachmentTypes:p,objectIds:m,globalIds:l,num:q,size:N,start:Y,where:O}=b;if(!g?.operations?.supportsQueryAttachments){a=p&&p.length;c=l&&l.length;const Z=N&&N.length;if(m&&1<m.length||a||c||Z||q||Y||O)throw new k(d,"when 'supportsQueryAttachments' is false, only objectIds of length 1 are supported",b);}if(!m?.length&&!O)throw new k(d,"'objectIds' or 'where' are required to perform attachment query",b);
if(!f.queryAttachments)throw new k(d,"Layer source does not support queryAttachments capability",b);return f.queryAttachments(b)});return C.apply(this,arguments)}function D(){D=n._asyncToGenerator(function*(a,b,c,d){const {source:f}=yield a.load();if(!f.queryObjectIds)throw new k(d,"Layer source does not support queryObjectIds capability");return f.queryObjectIds(t.from(b)??a.createQuery(),c)});return D.apply(this,arguments)}function E(){E=n._asyncToGenerator(function*(a,b,c,d){const {source:f}=yield a.load();
if(!f.queryFeatureCount)throw new k(d,"Layer source does not support queryFeatureCount capability");return f.queryFeatureCount(t.from(b)??a.createQuery(),c)});return E.apply(this,arguments)}function F(){F=n._asyncToGenerator(function*(a,b,c,d){const {source:f}=yield a.load();if(!f.queryExtent)throw new k(d,"Layer source does not support queryExtent capability");return f.queryExtent(t.from(b)??a.createQuery(),c)});return F.apply(this,arguments)}function G(){G=n._asyncToGenerator(function*(a,b,c,d){({source:a}=
yield a.load());if(!a.queryRelatedFeatures)throw new k(d,"Layer source does not support queryRelatedFeatures capability");return a.queryRelatedFeatures(L.from(b),c)});return G.apply(this,arguments)}function H(){H=n._asyncToGenerator(function*(a,b,c,d){({source:a}=yield a.load());if(!a.queryRelatedFeaturesCount)throw new k(d,"Layer source does not support queryRelatedFeaturesCount capability");return a.queryRelatedFeaturesCount(L.from(b),c)});return H.apply(this,arguments)}function I(){I=n._asyncToGenerator(function*(a){const b=
a.source;if(b?.refresh)try{const {dataChanged:c,updates:d}=yield b.refresh();J.isSome(d)&&(a.sourceJSON={...a.sourceJSON,...d},a.read(d,{origin:"service",url:a.parsedUrl}));if(c)return!0}catch{}if(a.definitionExpression)try{return(yield R.parseWhereClause(a.definitionExpression,a.fieldsIndex)).hasDateFunctions}catch{}return!1});return I.apply(this,arguments)}function M(a){return a.currentVersion?a.currentVersion:a.hasOwnProperty("capabilities")||a.hasOwnProperty("drawingInfo")||a.hasOwnProperty("hasAttachments")||
a.hasOwnProperty("htmlPopupType")||a.hasOwnProperty("relationships")||a.hasOwnProperty("timeInfo")||a.hasOwnProperty("typeIdField")||a.hasOwnProperty("types")?10:9.3}v=new v.JSONMap({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch"});const V={name:"supportsName",size:"supportsSize",contentType:"supportsContentType",keywords:"supportsKeywords",exifInfo:"supportsExifInfo"};h.addAttachment=
function(a,b,c,d){return w.apply(this,arguments)};h.applyEdits=function(a,b,c){return z.apply(this,arguments)};h.createQuery=function(a){const b=new t,c=a.get("capabilities.data"),d=a.get("capabilities.query");b.historicMoment=a.historicMoment;b.gdbVersion=a.gdbVersion;b.returnGeometry=!0;d&&(b.compactGeometryEnabled=d.supportsCompactGeometry,b.defaultSpatialReferenceEnabled=d.supportsDefaultSpatialReference);c&&(c.supportsZ&&null!=a.returnZ&&(b.returnZ=a.returnZ),c.supportsM&&null!=a.returnM&&(b.returnM=
a.returnM));b.outFields=["*"];const {timeOffset:f,timeExtent:g}=a;b.timeExtent=null!=f&&null!=g?g.offset(-f.value,f.unit):g||null;b.multipatchOption="multipatch"===a.geometryType?"xyFootprint":null;return b};h.deleteAttachments=function(a,b,c,d){return A.apply(this,arguments)};h.fetchRecomputedExtents=function(a,b,c){return B.apply(this,arguments)};h.geometryTypeKebabDict=v;h.getFeatureLayerCapabilities=function(a,b,c){var d={supportsCacheHint:r(b.advancedQueryCapabilities,"queryAnalytics")},f=U(b);
var g={isVersioned:e(b,"isDataVersioned",!1),supportsAttachment:e(b,"hasAttachments",!1),supportsM:e(b,"hasM",!1),supportsZ:e(b,"hasZ",!1)};var p={supportsAdvancedFieldProperties:e(b,"supportsFieldDescriptionProperty",!1)};a=W(b.capabilities||a,b,c);c=X(b,c);var m=b.advancedQueryCapabilities;var l=e(m,"supportsAdvancedQueryRelated",!1);m={supportsPagination:e(m,"supportsQueryRelatedPagination",!1),supportsCount:l,supportsOrderBy:l,supportsCacheHint:r(m,"queryRelated")};l={supportsCacheHint:r(b.advancedQueryCapabilities,
"queryTopFilter")};const q=b.ownershipBasedAccessControlForFeatures;b={supportsGeometryUpdate:e(b,"allowGeometryUpdates",!0),supportsGlobalId:e(b,"supportsApplyEditsWithGlobalIds",!1),supportsReturnServiceEditsInSourceSpatialReference:e(b,"supportsReturnServiceEditsInSourceSR",!1),supportsRollbackOnFailure:e(b,"supportsRollbackOnFailureParameter",!1),supportsUpdateWithoutM:e(b,"allowUpdateWithoutMValues",!1),supportsUploadWithItemId:e(b,"supportsAttachmentsByUploadId",!1),supportsDeleteByAnonymous:e(q,
"allowAnonymousToDelete",!0),supportsDeleteByOthers:e(q,"allowOthersToDelete",!0),supportsUpdateByAnonymous:e(q,"allowAnonymousToUpdate",!0),supportsUpdateByOthers:e(q,"allowOthersToUpdate",!0)};return{analytics:d,attachment:f,data:g,metadata:p,operations:a,query:c,queryRelated:m,queryTopFeatures:l,editing:b}};h.hasDataChanged=function(a){return I.apply(this,arguments)};h.queryAttachments=function(a,b,c,d){return C.apply(this,arguments)};h.queryExtent=function(a,b,c,d){return F.apply(this,arguments)};
h.queryFeatureCount=function(a,b,c,d){return E.apply(this,arguments)};h.queryObjectIds=function(a,b,c,d){return D.apply(this,arguments)};h.queryRelatedFeatures=function(a,b,c,d){return G.apply(this,arguments)};h.queryRelatedFeaturesCount=function(a,b,c,d){return H.apply(this,arguments)};h.readGlobalIdField=function(a){const {globalIdField:b,fields:c}=a;if(b)return b;if(c)for(const d of c)if("esriFieldTypeGlobalID"===d.type)return d.name};h.readObjectIdField=function(a){const {objectIdField:b,fields:c}=
a;if(b)return b;if(c)for(const d of c)if("esriFieldTypeOID"===d.type)return d.name};h.readVersion=M;h.updateAttachment=function(a,b,c,d,f){return y.apply(this,arguments)};Object.defineProperties(h,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});