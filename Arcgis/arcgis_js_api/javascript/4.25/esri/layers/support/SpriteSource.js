// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../request ../../core/Error ../../core/Logger ../../core/typedArrayUtil ../../core/urlUtils".split(" "),function(k,n,m,t,p,q){function r(d){var g=document.createElement("canvas");const b=g.getContext("2d");g.width=d.width;g.height=d.height;b.drawImage(d,0,0,d.width,d.height);g=b.getImageData(0,0,d.width,d.height);return{width:d.width,height:d.height,data:new Uint8Array(g.data)}}return function(){function d(b,a){this._spriteSource=b;this._maxTextureSize=
a;this.devicePixelRatio=1;this._spriteImageFormat="png";this._isRetina=!1;this._spritesData={};this.height=this.width=this.image=null;this.loadStatus="not-loaded";"url"===b.type&&b.spriteFormat&&(this._spriteImageFormat=b.spriteFormat);b.pixelRatio&&(this.devicePixelRatio=b.pixelRatio);this.baseURL=b.spriteUrl}var g=d.prototype;g.getSpriteInfo=function(b){return this._spritesData?this._spritesData[b]:null};g.load=function(){var b=k._asyncToGenerator(function*(a){if(this.baseURL){this.loadStatus="loading";
try{yield this._loadSprites(a),this.loadStatus="loaded"}catch{this.loadStatus="failed"}}else this.loadStatus="failed"});return function(a){return b.apply(this,arguments)}}();g._loadSprites=function(){var b=k._asyncToGenerator(function*(a){this._isRetina=1.15<this.devicePixelRatio?!0:!1;const {width:c,height:h,data:e,json:l}=yield this._getSpriteData(this._spriteSource,a);if((a=Object.keys(l))&&0!==a.length&&e){this._spritesData=l;this.width=c;this.height=h;a=Math.max(this._maxTextureSize,4096);if(c>
a||h>a)throw a=`Sprite resource for style ${this.baseURL} is bigger than the maximum allowed of ${a} pixels}`,t.getLogger("esri.layers.support.SpriteSource").error(a),new m("SpriteSource",a);for(let f=0;f<e.length;f+=4)a=e[f+3]/255,e[f]*=a,e[f+1]*=a,e[f+2]*=a;this.image=e}else this._spritesData=this.image=null,this.width=this.height=0});return function(a){return b.apply(this,arguments)}}();g._getSpriteData=function(){var b=k._asyncToGenerator(function*(a,c){if("image"===a.type){if(1.15>this.devicePixelRatio){if(!a.spriteSource1x)throw new m("SpriteSource",
"no image data provided for low resolution sprites!");c=a.spriteSource1x.image;a=a.spriteSource1x.json}else{if(!a.spriteSource2x)throw new m("SpriteSource","no image data provided for high resolution sprites!");c=a.spriteSource2x.image;a=a.spriteSource2x.json}return"width"in c&&"height"in c&&"data"in c&&(p.isArrayBuffer(c.data)||p.isUint8ClampedArray(c.data))?{width:c.width,height:c.height,data:new Uint8Array(c.data),json:a}:{...r(c),json:a}}a=q.urlToObject(this.baseURL);const h=a.query?"?"+q.objectToQuery(a.query):
"",e=this._isRetina?"@2x":"",l=`${a.path}${e}.${this._spriteImageFormat}${h}`,[f,u]=yield Promise.all([n(`${a.path}${e}.json${h}`,c),n(l,{responseType:"image",...c})]);return{...r(u.data),json:f.data}});return function(a,c){return b.apply(this,arguments)}}();k._createClass(d,[{key:"spriteNames",get:function(){const b=[];for(const a in this._spritesData)b.push(a);b.sort();return b}}]);return d}()});