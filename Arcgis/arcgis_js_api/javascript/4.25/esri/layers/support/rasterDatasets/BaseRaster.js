// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../request ../../../core/Error ../../../core/JSONSupport ../../../core/Logger ../../../core/maybe ../../../core/Promise ../../../core/promiseUtils ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../arcgisLayerUrl ../commonProperties ../DimensionalDefinition ../RasterStorageInfo ../TileInfo ./multidimensionalUtils ./RawBlockCache ../rasterFormats/RasterCodec ../rasterFunctions/pixelUtils ../rasterFunctions/rasterProjectionHelper ../rasterFunctions/vectorFieldUtils ../../../geometry/Point ../../../geometry/Extent".split(" "),
function(A,D,B,ba,S,ca,da,v,ea,fa,E,qa,ha,ia,ja,ka,la,ma,T,M,F,na,G,x,U,H,N){B=function(V){function O(){var a=V.apply(this,arguments)||this;a.rasterJobHandler=null;a.datasetName=null;a.datasetFormat=null;a.rasterInfo=null;a.ioConfig={sampling:"closest"};return a}A._inheritsLoose(O,V);var u=O.prototype;u.init=function(){var a=A._asyncToGenerator(function*(){const b=x.load();this.addResolvingPromise(b);yield this.when()});return function(){return a.apply(this,arguments)}}();u.normalizeCtorArgs=function(a){a&&
a.ioConfig&&(a={...a,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:T.create(),...a.ioConfig}});return a};u.open=function(){var a=A._asyncToGenerator(function*(b){throw new S("BaseRaster:open-not-implemented","open() is not implemented");});return function(b){return a.apply(this,arguments)}}();u.fetchTile=function(){var a=A._asyncToGenerator(function*(b,c,d,e={}){const g=e.tileInfo||this.rasterInfo.storageInfo.tileInfo;b=this.getTileExtentFromTileInfo(b,c,d,g);return this.fetchPixels(b,
g.size[0],g.size[1],e)});return function(b,c,d){return a.apply(this,arguments)}}();u.identify=function(){var a=A._asyncToGenerator(function*(b,c={}){b=ha.ensureClass(H,b).clone().normalize();const {multidimensionalDefinition:d,timeExtent:e}=c,{hasMultidimensionalTranspose:g,multidimensionalInfo:f}=this.rasterInfo;var {transposedVariableName:h}=c;const n=v.isSome(f)&&g&&(null!=e||M.isMultiSliceOrRangeDefinition(d));n&&!h&&(h=v.isSome(d)&&0<d.length?d[0].variableName??void 0:f.variables[0].name,c={...c,
transposedVariableName:h});c=this._getRequestOptionsWithSliceId(c);const {spatialReference:k,extent:l}=this.rasterInfo;var {datumTransformation:p}=c;p=x.projectPoint(b,k,p);if(!l.intersects(p)||v.isSome(this.rasterInfo.transform)&&(p=this.rasterInfo.transform.inverseTransform(p),!this.rasterInfo.nativeExtent.intersects(p)))return{location:p,value:null};let r=0;const m=v.isSome(h)&&v.isSome(f)&&this.rasterInfo.hasMultidimensionalTranspose;if(!m)if(c.srcResolution)r=x.snapPyramid(c.srcResolution,this.rasterInfo,
this.ioConfig.sampling).pyramidLevel;else if(r=yield this.computeBestPyramidLevelForLocation(b,c),null==r)return{location:p,value:null};b=this.identifyPixelLocation(p,r,null,m);if(null===b)return{location:p,value:null};const {row:t,col:q,rowOffset:w,colOffset:y,blockWidth:C}=b;h=h??v.unwrap(c.sliceId);h=F.getRasterId(this.url,h);b=`${r}/${t}/${q}`;let z=F.getBlock(h,null,b);v.isNone(z)&&(z=this.fetchRawTile(r,t,q,c),F.putBlock(h,null,b,z));h=yield z;return v.isNone(h)||!h.pixels?.length?{location:p,
value:null}:this._processIdentifyResult(h,{srcLocation:p,position:w*C+y,pyramidLevel:r,useTransposedTile:!!m,requestSomeSlices:n,identifyOptions:c})});return function(b){return a.apply(this,arguments)}}();u.fetchPixels=function(){var a=A._asyncToGenerator(function*(b,c,d,e={}){b=x.snapExtent(b);e=this._getRequestOptionsWithSliceId(e);if(e.requestRawData)return this._fetchPixels(b,c,d,e);var g=x.getWorldWidth(b.spatialReference),f=x.getWorldWrapCount(b);if(v.isNone(g)||0===f||1===f&&this._isGlobalWrappableSource)return this._fetchPixels(b,
c,d,e);if(3<=f)return{extent:b,pixelBlock:null};const h=[],{xmin:n,xmax:k}=b,l=Math.round(g/(k-n)*c),p=l-Math.round((g/2-n)/(k-n)*c);let r=0;const m=[];for(let q=0;q<=f;q++){var t=new N({xmin:0===q?n:-g/2,xmax:q===f?k-g*q:g/2,ymin:b.ymin,ymax:b.ymax,spatialReference:b.spatialReference});const w=0===q?l-p:q===f?c-r:l;r+=w;m.push(w);t=e.disableWrapAround&&0<q?null:this._fetchPixels(t,w,d,e);h.push(t)}g=(yield Promise.all(h)).map(q=>q?.pixelBlock);f=null;c={width:c,height:d};f=this.rasterJobHandler?
(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:c,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:m},e)).pixelBlock:G.mosaic(g,c,{blockWidths:m});e=x.projectExtent(b,this.rasterInfo.spatialReference,e.datumTransformation);return{extent:b,srcExtent:e,pixelBlock:f}});return function(b,c,d){return a.apply(this,arguments)}}();u.fetchRawPixels=function(){var a=A._asyncToGenerator(function*(b,c,d,e={}){c={x:Math.floor(c.x),
y:Math.floor(c.y)};const g=yield this._fetchRawTiles(b,c,d,e),{nativeExtent:f,nativePixelSize:h,storageInfo:n}=this.rasterInfo;var k=2**b,l=h.x*k;k*=h.y;l=new N({xmin:f.xmin+l*c.x,xmax:f.xmin+l*(c.x+d.width-1),ymin:f.ymax-k*(c.y+d.height-1),ymax:f.ymax-k*c.y,spatialReference:f.spatialReference});if(!g)return{extent:l,srcExtent:l,pixelBlock:null};const {pixelBlocks:p,mosaicSize:r}=g;if(1===p.length&&v.isSome(p[0])&&p[0].width===d.width&&p[0].height===d.height)return{extent:l,srcExtent:l,pixelBlock:g.pixelBlocks[0]};
b={x:c.x%(0<b?n.pyramidBlockWidth:n.blockWidth),y:c.y%(0<b?n.pyramidBlockHeight:n.blockHeight)};d=this.rasterJobHandler?(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:r,destDimension:d,clipOffset:b,clipSize:d,coefs:null,sampleSpacing:null,interpolation:e.interpolation,alignmentInfo:null,blockWidths:null},e)).pixelBlock:G.mosaic(p,r,{clipOffset:b,clipSize:d});return{extent:l,srcExtent:l,pixelBlock:d}});return function(b,c,d){return a.apply(this,arguments)}}();u.fetchRawTile=
function(a,b,c,d){throw new S("BaseRaster:read-not-implemented","fetchRawTile() is not implemented");};u.computeExtent=function(a){return x.projectExtent(this.rasterInfo.extent,a)};u.decodePixelBlock=function(a,b){return!this.rasterJobHandler||b.useCanvas?na.decode(a,b):this.rasterJobHandler.decode({data:a,options:b})};u.request=function(){var a=A._asyncToGenerator(function*(b,c,d=0){const {customFetchParameters:e}=this.ioConfig,{range:g,query:f,headers:h}=c;d=d??c.retryCount??this.ioConfig.retryCount;
const n=g?{Range:`bytes=${g.from}-${g.to}`}:null;try{return yield ba(b,{...c,query:{...f,...e},headers:{...h,...n}})}catch(k){if(0<d)return d--,this.request(b,c,d);throw k;}});return function(b,c){return a.apply(this,arguments)}}();u.getSliceIndex=function(a){const {multidimensionalInfo:b}=this.rasterInfo;return v.isNone(b)||v.isNone(a)||0===a.length?null:M.getSliceIndex(a,b)};u.getTileExtentFromTileInfo=function(a,b,c,d){a=v.unwrapOrThrow(d.lodAt(a));return this.getTileExtent({x:a.resolution,y:a.resolution},
b,c,d.origin,d.spatialReference,d.size)};u.updateTileInfo=function(){const {storageInfo:a,spatialReference:b,extent:c,pixelSize:d}=this.rasterInfo;if(!a.tileInfo){const g=[];var e=a.maximumPyramidLevel||0;let f=Math.max(d.x,d.y),h=1/.0254*96*f;for(let n=0;n<=e;n++)g.push({level:e-n,resolution:f,scale:h}),f*=2,h*=2;e=new H({x:c.xmin,y:c.ymax,spatialReference:b});a.tileInfo=new T({origin:e,size:[a.blockWidth,a.blockHeight],spatialReference:b,lods:g});a.isVirtualTileInfo=!0}};u.createRemoteDatasetStorageInfo=
function(a,b=512,c=512,d){const {width:e,height:g,nativeExtent:f,pixelSize:h,spatialReference:n}=a,k=new H({x:f.xmin,y:f.ymax,spatialReference:n});null==d&&(d=Math.max(0,Math.round(Math.log(Math.max(e,g))/Math.LN2-8)));const l=this.computeBlockBoundary(f,512,512,{x:f.xmin,y:f.ymax},[h],d);a.storageInfo=new ma({blockWidth:b,blockHeight:c,pyramidBlockWidth:b,pyramidBlockHeight:c,origin:k,firstPyramidLevel:1,maximumPyramidLevel:d,blockBoundary:l})};u.computeBestPyramidLevelForLocation=function(){var a=
A._asyncToGenerator(function*(b,c){return 0});return function(b){return a.apply(this,arguments)}}();u.computeBlockBoundary=function(a,b,c,d,e,g=0,f=2){if(1===e.length&&0<g){e=[...e];let {x:k,y:l}=e[0];for(let p=0;p<g;p++)k*=f,l*=f,e.push({x:k,y:l})}g=[];const {x:h,y:n}=d;for(d=0;d<e.length;d++){const {x:k,y:l}=e[d];g.push({minCol:Math.floor((a.xmin-h+.1*k)/b/k),maxCol:Math.floor((a.xmax-h-.1*k)/b/k),minRow:Math.floor((n-a.ymax+.1*l)/c/l),maxRow:Math.floor((n-a.ymin-.1*l)/c/l)})}return g};u.getPyramidPixelSize=
function(a){const {nativePixelSize:b}=this.rasterInfo,{pyramidResolutions:c,pyramidScalingFactor:d}=this.rasterInfo.storageInfo;if(0===a)return b;if(v.isSome(c)&&c.length)return c[a-1];a=d**a;return{x:b.x*a,y:b.y*a}};u.identifyPixelLocation=function(a,b,c,d){const {spatialReference:e,nativeExtent:g,storageInfo:f}=this.rasterInfo,{maximumPyramidLevel:h,origin:n,transposeInfo:k}=f,l=d&&v.isSome(k)?k.tileSize[0]:f.blockWidth;d=d&&v.isSome(k)?k.tileSize[1]:f.blockHeight;a=x.projectPoint(a,e,c);if(!g.intersects(a)||
0>b||b>h)return null;c=this.getPyramidPixelSize(b);const {x:p,y:r}=c;c=(n.y-a.y)/r/d;const m=(a.x-n.x)/p/l;return{pyramidLevel:b,row:Math.floor(c),col:Math.floor(m),rowOffset:Math.min(d-1,Math.floor((c-Math.floor(c))*d)),colOffset:Math.min(l-1,Math.floor((m-Math.floor(m))*l)),blockWidth:l,srcLocation:a}};u.getTileExtent=function(a,b,c,d,e,g){const [f,h]=g;c=d.x+c*f*a.x;b=d.y-b*h*a.y;return new N({xmin:c,xmax:c+f*a.x,ymin:b-h*a.y,ymax:b,spatialReference:e})};u.getBlockWidthHeight=function(a){return{blockWidth:0<
a?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:0<a?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}};u.isBlockOutside=function(a,b,c){a=this.rasterInfo.storageInfo.blockBoundary[a];return!a||a.maxRow<b||a.maxCol<c||a.minRow>b||a.minCol>c};u._fetchPixels=function(){var a=A._asyncToGenerator(function*(b,c,d,e={}){var g=x.getWorldWrapCount(b);if(2<=g)return{extent:b,pixelBlock:null};var f=this._getSourceDataInfo(b,
c,d,e);const {pyramidLevel:h,pyramidResolution:n,srcResolution:k,srcExtent:l,srcWidth:p,srcHeight:r}=f;if(0===p||0===r)return{extent:b,srcExtent:l,pixelBlock:null};var m=v.unwrap(this.rasterInfo.transform),t="gcs-shift"===m?.type,q=v.isSome(x.getWorldWidth(b.spatialReference));if(t||!q)g=x.getWorldWrapCount(f.srcExtent,t);var w=this.rasterInfo.storageInfo,y={x:Math.floor((l.xmin-w.origin.x)/n.x+.1),y:Math.floor((w.origin.y-l.ymax)/n.y+.1)};f=yield this._fetchRawTiles(h,y,{width:p,height:r,wrapCount:g},
e);if(!f)return{extent:b,srcExtent:l,pixelBlock:null};t=0<h?w.pyramidBlockWidth:w.blockWidth;const C=0<h?w.pyramidBlockHeight:w.blockHeight,z=t===p&&C===r&&0===y.x%t&&0===y.y%C;y=new H({x:(b.xmax-b.xmin)/c,y:(b.ymax-b.ymin)/d,spatialReference:b.spatialReference});const P=!b.spatialReference.equals(this.rasterInfo.spatialReference);({datumTransformation:w}=e);if(!P&&z&&1===f.pixelBlocks.length&&t===c&&C===d&&k.x===y.x&&k.y===y.y)return{extent:b,srcExtent:l,pixelBlock:f.pixelBlocks[0]};t=q&&v.isSome(x.getWorldWidth(l.spatialReference));
(q=e.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector"))&&!this.rasterJobHandler&&(yield x.load());g=this.rasterJobHandler?yield this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:b,srcBufferExtent:f.extent,pixelSize:y.toJSON(),datumTransformation:w,rasterTransform:m,hasWrapAround:0<g||t,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:q},e):x.getProjectionOffsetGrid({projectedExtent:b,srcBufferExtent:f.extent,pixelSize:y,datumTransformation:w,
rasterTransform:m,hasWrapAround:0<g||t,isAdaptive:!1,includeGCSGrid:q});m=!e.requestRawData;t={rows:g.spacing[0],cols:g.spacing[1]};y=v.unwrap(this._getRasterTileAlignmentInfo(h,f.extent.xmin));const {pixelBlocks:I,mosaicSize:J,isPartiallyFilled:Q}=f;f=null;this.rasterJobHandler?(c=yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:I,srcMosaicSize:J,destDimension:m?{width:c,height:d}:null,coefs:m?g.coefficients:null,sampleSpacing:m?t:null,projectDirections:q,gcsGrid:q?g.gcsGrid:null,isUV:"vector-uv"===
this.rasterInfo.dataType,interpolation:e.interpolation,alignmentInfo:y,blockWidths:null},e),{pixelBlock:m,localNorthDirections:f}=c):(y=G.mosaic(I,J,{alignmentInfo:y}),m=m?G.approximateTransform(y,{width:c,height:d},g.coefficients,t,e.interpolation):y,q&&g.gcsGrid&&(f=G.getLocalArithmeticNorthRotations({width:c,height:d},g.gcsGrid),m=U.convertToLocalDirections(m,this.rasterInfo.dataType,f)));return e.requestRawData||q?{srcExtent:l,pixelBlock:m,transformGrid:g,localNorthDirections:f,extent:b,isPartiallyFilled:Q}:
{srcExtent:l,extent:b,pixelBlock:m}});return function(b,c,d){return a.apply(this,arguments)}}();u._fetchRawTiles=function(){var a=A._asyncToGenerator(function*(b,c,d,e){const {origin:g,blockBoundary:f}=this.rasterInfo.storageInfo,{blockWidth:h,blockHeight:n}=this.getBlockWidthHeight(b);let {x:k,y:l}=c,{width:p,height:r,wrapCount:m}=d;var t=this._getRasterTileAlignmentInfo(b,0);e.buffer&&(k-=e.buffer.cols,l-=e.buffer.rows,p+=2*e.buffer.cols,r+=2*e.buffer.rows);var q=0,w=0;let y=0;m&&v.isSome(t)&&({worldColumnCountFromOrigin:w,
originColumnOffset:y,rightPadding:q}=t,w*t.blockWidth-q>=k+p&&(q=0));c=Math.floor(k/h);d=Math.floor(l/n);const C=Math.floor((k+p+q-1)/h);q=Math.floor((l+r+q-1)/n);var z=f[b];if(!z)return null;const {minRow:P,minCol:I,maxCol:J,maxRow:Q}=z;if(0===m&&(q<P||C<I||d>Q||c>J))return null;z=[];let W=!1;const oa=null==this.ioConfig.allowPartialFill?e.allowPartialFill:this.ioConfig.allowPartialFill;for(let K=d;K<=q;K++)for(let L=c;L<=C;L++){let R=L;!e.disableWrapAround&&m&&v.isSome(t)&&w<=L&&(R=L-w-y);if(K>=
P&&R>=I&&Q>=K&&J>=R){const X=this._fetchRawTile(b,K,R,e);oa?z.push(new Promise(Y=>{X.then(pa=>Y(pa)).catch(()=>{W=!0;Y(null)})})):z.push(X)}else z.push(Promise.resolve(null))}if(0===z.length)return null;e=yield Promise.all(z);t={height:(q-d+1)*n,width:(C-c+1)*h};({spatialReference:w}=this.rasterInfo);b=this.getPyramidPixelSize(b);const {x:Z,y:aa}=b;return{extent:new N({xmin:g.x+c*h*Z,xmax:g.x+(C+1)*h*Z,ymin:g.y-(q+1)*n*aa,ymax:g.y-d*n*aa,spatialReference:w}),pixelBlocks:e,mosaicSize:t,isPartiallyFilled:W}});
return function(b,c,d,e){return a.apply(this,arguments)}}();u._fetchRawTile=function(a,b,c,d){var e=this.rasterInfo.storageInfo.blockBoundary[a];if(!e)return Promise.resolve(null);const {minRow:g,minCol:f,maxCol:h,maxRow:n}=e;if(b<g||c<f||b>n||c>h)return Promise.resolve(null);const k=F.getRasterId(this.url,d.sliceId),l=`${a}/${b}/${c}`;e=F.getBlock(k,d.registryId,l);if(v.isNone(e)){const p=new AbortController;e=this.fetchRawTile(a,b,c,{...d,signal:p.signal});F.putBlock(k,d.registryId,l,e,p);e.catch(()=>
F.deleteBlock(k,d.registryId,l))}if(d.signal)fa.onAbort(d,()=>{F.decreaseRefCount(k,d.registryId,l)});return e};u._computeMagDirValues=function(a){const {bandCount:b,dataType:c}=this.rasterInfo;if((2!==b||"vector-magdir"!==c)&&"vector-uv"!==c||2!==a?.length||!a[0]?.length)return null;var d=a[0].length;if("vector-magdir"===c)return d=a[1].map(h=>(h+360)%360),[a[0],d];const [e,g]=a;a=[];const f=[];for(let h=0;h<d;h++){const [n,k]=U.uvComponentToVector([e[h],g[h]]);a.push(n);f.push(k)}return[a,f]};u._getRasterTileAlignmentInfo=
function(a,b){null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=x.getRasterDatasetAlignmentInfo(this.rasterInfo));return v.isNone(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:b,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[a]}};u._getSourceDataInfo=function(a,b,c,d={}){const e={datumTransformation:d.datumTransformation,pyramidLevel:0,pyramidResolution:null,
srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};d.srcResolution&&(e.srcResolution=d.srcResolution,this._updateSourceDataInfo(a,e));var g=this.rasterInfo.storageInfo.maximumPyramidLevel||0;const {srcWidth:f,srcHeight:h,pyramidLevel:n}=e;var k=f/b;const l=h/c,p=n<g&&16<=k*l;if(p||n===g&&(8<k||8<l)||0===f||0===h){var r=new H({x:(a.xmax-a.xmin)/b,y:(a.ymax-a.ymin)/c,spatialReference:a.spatialReference});r=x.projectResolution(r,this.rasterInfo.spatialReference,a,e.datumTransformation);const m=
!r||d.srcResolution&&r.x+r.y<d.srcResolution.x+d.srcResolution.y;p&&d.srcResolution&&m&&(k=Math.round(Math.log(Math.max(k,l))/Math.LN2)-1,g-n+3>=k&&(g=2**k,r={x:d.srcResolution.x*g,y:d.srcResolution.y*g}));r&&(e.srcResolution=r,this._updateSourceDataInfo(a,e))}if(8<e.srcWidth/b||8<e.srcHeight/c)e.srcWidth=0,e.srcHeight=0;return e};u._updateSourceDataInfo=function(a,b){b.srcWidth=0;b.srcHeight=0;var c=this.rasterInfo.spatialReference;const {srcResolution:d,datumTransformation:e}=b,{pyramidLevel:g,
pyramidResolution:f,excessiveReading:h}=x.snapPyramid(d,this.rasterInfo,this.ioConfig.sampling);h||(a=b.srcExtent||x.projectExtent(a,c,e),null!=a&&((c=v.unwrap(this.rasterInfo.transform))&&(a=c.inverseTransform(a)),b.srcExtent=a,c=Math.ceil((a.xmax-a.xmin)/f.x-.1),a=Math.ceil((a.ymax-a.ymin)/f.y-.1),b.pyramidLevel=g,b.pyramidResolution=f,b.srcWidth=c,b.srcHeight=a))};u._getRequestOptionsWithSliceId=function(a){v.isSome(this.rasterInfo.multidimensionalInfo)&&null==a.sliceId&&(a={...a,sliceId:this.getSliceIndex(a.multidimensionalDefinition)});
return a};u._processIdentifyResult=function(a,b){const {srcLocation:c,position:d,pyramidLevel:e,useTransposedTile:g}=b,f=a.pixels[0].length/a.width/a.height;if(a.mask&&!a.mask[d])return{location:c,value:null};const {multidimensionalInfo:h}=this.rasterInfo;if(v.isNone(h)||!g)return b=a.pixels.map(m=>m[d]),a={location:c,value:b,pyramidLevel:e},b=this._computeMagDirValues(b.map(m=>[m])),b?.length&&(a.magdirValue=b.map(m=>m[0])),a;let n=a.pixels.map(m=>Array.prototype.slice.call(m,d*f,d*f+f)),k=this._computeMagDirValues(n);
const {requestSomeSlices:l,identifyOptions:p}=b;let r=M.createSlices(h,p.transposedVariableName);if(l){const m=M.getSliceIds(r,v.unwrap(p.multidimensionalDefinition),v.unwrap(p.timeExtent));n=n.map(t=>m.map(q=>t[q]));k=k?.map(t=>m.map(q=>t[q]));r=m.map(t=>r[t])}a=r.map((m,t)=>{m={value:n.map(q=>q[t]),multidimensionalDefinition:m.multidimensionalDefinition.map(q=>new la({...q,isSlice:!0}))};k?.length&&(m.magdirValue=[k[0][t],k[1][t]]);return m});return{location:c,value:null,dataSeries:a,pyramidLevel:e}};
A._createClass(O,[{key:"_isGlobalWrappableSource",get:function(){const {rasterInfo:a}=this,b=x.getWorldWidth(a.spatialReference);return v.isSome(b)&&a.extent.width>=b/2}},{key:"url",set:function(a){this._set("url",ja.sanitizeUrl(a,da.getLogger(this.declaredClass)))}}]);return O}(ea.EsriPromiseMixin(ca.JSONSupport));D.__decorate([E.property()],B.prototype,"_rasterTileAlighmentInfo",void 0);D.__decorate([E.property({readOnly:!0})],B.prototype,"_isGlobalWrappableSource",null);D.__decorate([E.property(ka.url)],
B.prototype,"url",null);D.__decorate([E.property({type:String,json:{write:!0}})],B.prototype,"datasetName",void 0);D.__decorate([E.property({type:String,json:{write:!0}})],B.prototype,"datasetFormat",void 0);D.__decorate([E.property()],B.prototype,"rasterInfo",void 0);D.__decorate([E.property()],B.prototype,"ioConfig",void 0);D.__decorate([E.property()],B.prototype,"sourceJSON",void 0);return B=D.__decorate([ia.subclass("esri.layers.support.rasterDatasets.BaseRaster")],B)});