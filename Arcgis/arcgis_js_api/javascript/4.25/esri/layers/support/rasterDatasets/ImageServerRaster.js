// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/maybe ../../../core/urlUtils ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../RasterInfo ../RasterStorageInfo ../serviceTileInfoProperty ../TileInfo ../TilemapCache ./BaseRaster ../rasterFunctions/pixelUtils ../rasterTransforms/GCSShiftTransform ../../../rest/imageService/fetchRasterInfo ../../../geometry/SpatialReference ../../../geometry/Point ../../../geometry/Extent".split(" "),
function(t,A,w,B,u,F,D,U,V,G,H,I,J,K,L,M,N,O,P,Q,R,S){w=function(E){function C(){var e=E.apply(this,arguments)||this;e._levelOffset=0;e._tilemapCache=null;e._slices=null;e.datasetFormat="RasterTileServer";e.tileType=null;return e}t._inheritsLoose(C,E);var m=C.prototype;m.open=function(){var e=t._asyncToGenerator(function*(a){yield this.init();var b=a&&a.signal;a=this.sourceJSON?{data:this.sourceJSON}:yield this.request(this.url,{query:{f:"json"},signal:b});a.ssl&&(this.url=this.url.replace(/^http:/i,
"https:"));this.sourceJSON=a=a.data;if(!a)throw new B("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!a.tileInfo)throw new B("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();var d="jpg jpeg png png8 png24 png32 mixed".split(" ");this.tileType=a.cacheType;null==this.tileType&&(d.includes(a.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===a.tileInfo.format.toLowerCase()?this.tileType="Elevation":
this.tileType="Raster");this.datasetName=a.name?.slice(a.name.indexOf("/")+1)??"";b=yield this._fetchRasterInfo({signal:b});if(u.isNone(b))throw new B("image-server-raster:open","cannot initialize image service");d="Map"===this.tileType?J.readServiceTileInfo(a.tileInfo,a):K.fromJSON(a.tileInfo);u.assertIsSome(d);const [c,h]=this._computeMinMaxLOD(b,d),{extent:k,pixelSize:f}=b,g=.5/b.width*f.x,p=Math.max(f.x,f.y);var {lods:n}=d;if("Map"!==this.tileType&&0!==a.maxScale||Math.abs(f.x-f.y)>g||!n.some(q=>
Math.abs(q.resolution-p)<g))f.x=f.y=c.resolution,b.width=Math.ceil((k.xmax-k.xmin)/f.x-.1),b.height=Math.ceil((k.ymax-k.ymin)/f.y-.1);const r=c.level-h.level,[x,y]=d.size,l=[];n.forEach(q=>{q.level>=h.level&&q.level<=c.level&&l.push({x:q.resolution,y:q.resolution})});l.sort((q,T)=>q.x-T.x);n=this.computeBlockBoundary(k,x,y,d.origin,l,r);const v=1<l.length?l.slice(1):null;var z;a.transposeInfo&&(z={tileSize:[a.transposeInfo.rows,a.transposeInfo.cols],packetSize:b.keyProperties?._yxs.PacketSize??0});
b.storageInfo=new I({blockWidth:d.size[0],blockHeight:d.size[1],pyramidBlockWidth:d.size[0],pyramidBlockHeight:d.size[1],pyramidResolutions:v,compression:d.format,origin:d.origin,firstPyramidLevel:1,maximumPyramidLevel:r,tileInfo:d,transposeInfo:z,blockBoundary:n});this._fixGCSShift(b);this._set("rasterInfo",b);a.capabilities.toLowerCase().includes("tilemap")&&(z={tileInfo:b.storageInfo.tileInfo,parsedUrl:F.urlToObject(this.url),url:this.url,tileServers:[],type:"tile"},this._tilemapCache=new L.TilemapCache({layer:z}))});
return function(a){return e.apply(this,arguments)}}();m.fetchRawTile=function(){var e=t._asyncToGenerator(function*(a,b,d,c={}){const {storageInfo:h,extent:k}=this.rasterInfo;var {transposeInfo:f}=h,g=u.isSome(f)&&!!c.transposedVariableName;if(this._slices&&!g&&null==c.sliceId)return null;({data:c}=yield this.request(`${this.url}/tile/${g?0:h.maximumPyramidLevel-a+this._levelOffset}/${b}/${d}`,{query:this._slices?g?{variable:c.transposedVariableName}:{sliceId:c.sliceId||0}:null,responseType:"array-buffer",
signal:c.signal}));if(!c)return null;f=g?f.tileSize:h.tileInfo.size;g=yield this.decodePixelBlock(c,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:g});f=h.blockBoundary[a];if("jpg"!==h.compression||d>f.minCol&&d<f.maxCol&&b>f.minRow&&b<f.maxRow)return g;const {origin:p,blockWidth:n,blockHeight:r}=h,{x,y}=this.getPyramidPixelSize(a);var l=Math.round((k.xmin-p.x)/x)%n;a=Math.round((k.xmax-p.x)/x)%n||n;var v=Math.round((p.y-k.ymax)/y)%r;c=Math.round((p.y-
k.ymin)/y)%r||r;l=d===f.minCol?l:0;v=b===f.minRow?v:0;N.setValidBoundary(g,{x:l,y:v},{width:(d===f.maxCol?a:n)-l,height:(b===f.maxRow?c:r)-v});return g});return function(a,b,d){return e.apply(this,arguments)}}();m.getSliceIndex=function(e){if(!this._slices||u.isNone(e)||0===e.length)return null;for(let a=0;a<this._slices.length;a++){const b=this._slices[a].multidimensionalDefinition;if(b.length===e.length&&!b.some(d=>{var c=e.find(k=>d.variableName===k.variableName&&k.dimensionName===d.dimensionName);
if(!c)return!0;const h=Array.isArray(d.values[0])?`${d.values[0][0]}-${d.values[0][1]}`:d.values[0];c=Array.isArray(c.values[0])?`${c.values[0][0]}-${c.values[0][1]}`:c.values[0];return h!==c}))return a}return null};m.fetchVariableStatisticsHistograms=function(){var e=t._asyncToGenerator(function*(a,b){var d=this.request(this.url+"/statistics",{query:{variable:a,f:"json"},signal:b}).then(c=>c.data?.statistics);a=this.request(this.url+"/histograms",{query:{variable:a,f:"json"},signal:b}).then(c=>c.data?.histograms);
d=yield Promise.all([d,a]);d[0]&&d[0].forEach(c=>{c.avg=c.mean;c.stddev=c.standardDeviation});return{statistics:d[0]||null,histograms:d[1]||null}});return function(a,b){return e.apply(this,arguments)}}();m.computeBestPyramidLevelForLocation=function(){var e=t._asyncToGenerator(function*(a,b={}){if(!this._tilemapCache)return 0;a=this.identifyPixelLocation(a,0,u.unwrap(b.datumTransformation));if(null===a)return null;let d=0;var {maximumPyramidLevel:c}=this.rasterInfo.storageInfo;c=c-d+this._levelOffset;
const h=a.srcLocation;for(;0<=c;){try{if("available"===(yield this._tilemapCache.fetchAvailability(c,a.row,a.col,b)))break}catch{}c--;d++;a=this.identifyPixelLocation(h,d,u.unwrap(b.datumTransformation));if(null===a)return null}return-1===c||null==a?null:d});return function(a){return e.apply(this,arguments)}}();m._fetchRasterInfo=function(){var e=t._asyncToGenerator(function*(a){var b=this.sourceJSON;if("Map"===this.tileType){a=b.fullExtent||b.extent;var d=Math.ceil((a.xmax-a.xmin)/b.pixelSizeX-.1);
const c=Math.ceil((a.ymax-a.ymin)/b.pixelSizeY-.1),h=Q.fromJSON(b.spatialReference||a.spatialReference);b=new R({x:b.pixelSizeX,y:b.pixelSizeY,spatialReference:h});return new H({width:d,height:c,bandCount:3,extent:S.fromJSON(a),spatialReference:h,pixelSize:b,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}({signal:d}=a);a=P.fetchServiceRasterInfo(this.url,this.sourceJSON,{signal:d,query:this.ioConfig.customFetchParameters});b=b.hasMultidimensions?this.request(`${this.url}/slices`,
{query:{f:"json"},signal:d}).then(c=>c.data&&c.data.slices).catch(()=>null):null;b=yield Promise.all([a,b]);this._slices=b[1];return b[0]});return function(a){return e.apply(this,arguments)}}();m._fixScaleInServiceInfo=function(){const {sourceJSON:e}=this;e.minScale&&0>e.minScale&&(e.minScale=0);e.maxScale&&0>e.maxScale&&(e.maxScale=0)};m._fixGCSShift=function(e){const {extent:a,spatialReference:b}=e;-1<a.xmin&&181<a.xmax&&b?.wkid&&b.isGeographic&&(e.nativeExtent=e.extent,e.transform=new O,e.extent=
e.transform.forwardTransform(a))};m._computeMinMaxLOD=function(e,a){const {pixelSize:b}=e,d=.5/e.width*b.x;({lods:e}=a);var c=a.lodAt(Math.max.apply(null,e.map(g=>g.level)));a=a.lodAt(Math.min.apply(null,e.map(g=>g.level)));var {tileType:h}=this;if("Map"===h)return this._levelOffset=e[0].level,[c,a];if("Raster"===h)return[e.find(g=>g.resolution===b.x)??c,a];const {minScale:k,maxScale:f}=this.sourceJSON;h=c;0<f&&((h=e.find(g=>Math.abs(g.scale-f)<d))||(h=e.filter(g=>g.scale>f).sort((g,p)=>g.scale>p.scale?
1:-1)[0]??c));c=a;0<k&&(c=e.find(g=>Math.abs(g.scale-k)<d)??a,this._levelOffset=c.level-a.level);return[h,c]};return C}(M);A.__decorate([D.property({type:String,json:{write:!0}})],w.prototype,"datasetFormat",void 0);A.__decorate([D.property()],w.prototype,"tileType",void 0);return w=A.__decorate([G.subclass("esri.layers.support.rasterDatasets.ImageServerRaster")],w)});