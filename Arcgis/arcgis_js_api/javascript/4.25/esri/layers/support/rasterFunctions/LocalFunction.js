// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/maybe ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ./BaseRasterFunction ./LocalFunctionArguments ./localUtils".split(" "),function(m,c,g,e,b,v,n,p,q,r){b=function(h){function f(){var a=h.apply(this,arguments)||this;a.functionName="Local";a.functionArguments=null;a.rasterArgumentNames=["rasters"];
return a}m._inheritsLoose(f,h);var k=f.prototype;k._bindSourceRasters=function(){var {sourceRasterInfos:a}=this;const d=a[0],{bandCount:t}=d,{processAsMultiband:l}=this.functionArguments;if(l&&a.some(u=>u.bandCount!==t))return{success:!1,error:"local-function: input rasters do not have same band count"};this.outputPixelType=this._getOutputPixelType("f32");a=d.clone();a.pixelType=this.outputPixelType;a.statistics=null;a.histograms=null;l||(a.bandCount=1);this.rasterInfo=a;return{success:!0}};k._processPixels=
function(a){({pixelBlocks:a}=a);return g.isNone(a)||a.some(d=>g.isNone(d))?null:r.local(a,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})};return f}(p);c.__decorate([e.property({json:{write:!0,name:"rasterFunction"}})],b.prototype,"functionName",void 0);c.__decorate([e.property({type:q,json:{write:!0,name:"rasterFunctionArguments"}})],b.prototype,"functionArguments",void 0);c.__decorate([e.property()],b.prototype,
"rasterArgumentNames",void 0);return b=c.__decorate([n.subclass("esri.layers.support.rasterFunctions.LocalFunction")],b)});