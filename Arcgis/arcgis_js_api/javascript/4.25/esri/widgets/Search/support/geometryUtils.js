// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../geometry ../../../core/Error ../../../core/Logger ../../../core/maybe ../../../geometry/support/scaleUtils ../../../geometry/Extent".split(" "),function(e,p,g,l,f,m,n){function h(a,b,c){const d=a.hasZ?a.z:void 0;return b&&b.map?(c?m.getExtentForScale(b,c):b.extent).clone().centerAt(a).set({zmax:d,zmin:d}):new n({xmin:a.x-.25,ymin:a.y-.25,xmax:a.x+.25,ymax:a.y+.25,spatialReference:a.spatialReference,zmin:d,zmax:d})}const k=l.getLogger("esri.widgets.Search.support.geometryUtils");
e.createExtentFromGeometry=function(a,b,c){if(f.isNone(a))return null;if("extent"===a.type)return a;if("multipoint"===a.type||"polygon"===a.type||"polyline"===a.type)return a.extent;if("point"===a.type)return h(a,b,c)};e.getPointFromGeometry=function(a){if(f.isNone(a))return null;switch(a.type){case "point":return a;case "extent":return a.center;case "polygon":return a.centroid;case "multipoint":return a.getPoint(0);case "polyline":return a.getPoint(0,0)}return null};e.getPointWithElevation=function(a,
b){if(!b)return k.error("missing-parameter: view is missing."),Promise.reject(new g("searchgeometryutils:missing-parameter","view is missing."));if(!a)return k.error("missing-parameter: point is missing."),Promise.reject(new g("searchgeometryutils:missing-parameter","point is missing."));if(a.hasZ||"2d"===b.type)return Promise.resolve(a);const c=b?.map?.ground;return c&&c.layers.length?c.queryElevation(a,{cache:b.basemapTerrain?.elevationQueryCache}).then(d=>d.geometry):Promise.resolve(a)};e.scaleExtent=
function(a,b,c){return f.isNone(a)||f.isNone(b)?null:h(a.center,b,c)};Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});