// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/asyncUtils ../../core/Collection ../../core/Error ../../core/HandleOwner ../../core/maybe ../../core/promiseUtils ../../core/reactiveUtils ../../core/time ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ../../webdoc/Widgets ../../webdoc/widgets/FloorFilter ../support/GoTo".split(" "),function(w,l,M,G,N,k,H,O,A,P,
m,W,X,Q,R,S,T){function B(C){return"esri.WebMap"===C.declaredClass}k=function(C){function D(a){a=C.call(this,a)||this;a.filterMenuOpen=!1;a.filterMenuType="site";a.filterMode="base-floors";a.levelsExpanded=!0;a.searchTerm=null;a.view=null;a._updateFloorFilterTask=null;return a}w._inheritsLoose(D,C);var h=D.prototype;h.initialize=function(){var a=this;this.handles.add([A.watch(()=>this.view?.map,b=>{H.isSome(this._updateFloorFilterTask)&&(this._updateFloorFilterTask.abort(),this._updateFloorFilterTask=
null);this._updateFloorFilterTask=M.createTask(function(){var c=w._asyncToGenerator(function*(e){yield a._updateFloorFilterFromMap(b);O.throwIfAborted(e);a._setInitialViewState(b)});return function(e){return c.apply(this,arguments)}}())},A.initial),A.watch(()=>this.view,(b,c)=>{this._unregisterWidget(c);this._registerWidget(b);this._watchSearchResults(b)},A.syncAndInitial),A.watch(()=>this.view?.widthBreakpoint,b=>{this._viewWidthBreakpoint=b}),A.watch(()=>this.view?.heightBreakpoint,b=>{this._viewHeightBreakpoint=
b})])};h.destroy=function(){this._unregisterWidget(this.view);this.view=null;H.isSome(this._updateFloorFilterTask)&&(this._updateFloorFilterTask.abort(),this._updateFloorFilterTask=null)};h.filterFacilities=function(a){let b=a;this.searchTerm&&(b=a.filter(c=>{({name:c}=c);return c.toLowerCase().includes(this.searchTerm.toLowerCase())}));this.site&&(b=b.filter(c=>c.siteId===this.site));return b.sort((c,e)=>{c=c.name;e=e.name;return c>e?1:c===e?0:-1})};h.filterSites=function(a){let b=a;this.searchTerm&&
(b=a.filter(c=>{({name:c}=c);return c.toLowerCase().includes(this.searchTerm.toLowerCase())}));return b.sort((c,e)=>{c=c.name;e=e.name;return c>e?1:c===e?0:-1})};h.getBaseLevel=function(a){const b=this.filterFeatures?.levels?.levelsInfo;let c=null;if(a){const {id:e}=a;if(b&&0<b.length&&(b.forEach(d=>{0===d.verticalOrder&&d.facilityId===e&&(c=d)}),!c)){let d=null;b.forEach(f=>{if(f.facilityId===e)if(d)if(0<=f.verticalOrder){if(0>d.verticalOrder||f.verticalOrder<d.verticalOrder)d=f}else 0>d.verticalOrder&&
f.verticalOrder>d.verticalOrder&&(d=f);else d=f});d&&(c=d)}}return c};h.getFacility=function(a){return this.filterFeatures?.facilities?.facilitiesInfo?.find(b=>b.id===a)??null};h.getFacilityLevels=function(a){return a&&this.filterFeatures?.levels?.levelsInfo?this.filterFeatures.levels.levelsInfo.filter(b=>b.facilityId===a).sort((b,c)=>{b=b.verticalOrder;c=c.verticalOrder;return b>c?-1:b===c?0:1}):[]};h.getLevel=function(a){return this.filterFeatures?.levels?.levelsInfo?.find(b=>b.id===a)??null};h.getSite=
function(a){return this.filterFeatures?.sites?.sitesInfo?.find(b=>b.id===a)??null};h.goTo=function(a){var {view:b}=this;b&&a&&({geometry:a}=a,a&&a.extent&&(b={duration:P.Milliseconds(1E3),easing:"out-back"},this.callGoTo({target:a.extent,options:b})))};h.setFloors=function(a){this.view?.map?.allLayers?.forEach(b=>{"feature"===b.type&&this._computeViewAllModeFloors(b)});this.view.floors=new G(this._computeFloors(a))};h.updateWebDocument=function(a){if(B(a)){const b=new S({enabled:this.enabled,longNames:this.longNames,
minimized:this.minimized,pinnedLevels:this.pinnedLevels,site:this.site??null,facility:this.facility??null,level:this.level??null});a.widgets?a.widgets.floorFilter=b:a.widgets=new R({floorFilter:b})}};h._computeFloors=function(a){if("single-floor"===this.filterMode)this._computeSingleFloor(a);else if("base-floors"===this.filterMode)return"3d"===this.view.type?this._computeBaseFloors3D(a):this._computeBaseFloors(a);return this._computeEmptyFloors()};h._computeSingleFloor=function(a){if(!a)return this._computeEmptyFloors();
const b=[];"all"===a?.id?this.getFacilityLevels(a.facilityId).forEach(c=>{c.id&&b.push(c.id)}):a&&b.push(a.id);return b};h._computeBaseFloors=function(a){const b=this.filterFeatures?.levels?.levelsInfo;if(!b||!b.length)return this._computeEmptyFloors();const c=[];"all"===a?.id?this.getFacilityLevels(a.facilityId).forEach(d=>{d.id&&c.push(d.id)}):a&&c.push(a.id);const e=a?.facilityId;b.forEach(d=>{const {id:f,facilityId:g,verticalOrder:n}=d;e||0!==n||c.includes(f)?g===e||0!==n||c.includes(f)||c.push(f):
c.push(f)});return c};h._computeBaseFloors3D=function(a){const b=this.filterFeatures?.levels?.levelsInfo;if(!b||!b.length)return this._computeEmptyFloors();const c=[],e=a?.id.split("--");1<e?.length&&"all"===e[0]?this.getFacilityLevels(a.facilityId).forEach(f=>{f.id&&c.push(f.id)}):a&&c.push(a.id);const d=a?.facilityId;b.forEach(f=>{const {id:g,facilityId:n}=f;d||c.includes(g)?n===d||c.includes(g)||c.push(g):c.push(g)});return c};h._computeEmptyFloors=function(){return[]};h._setFilterLayers=function(){var a=
w._asyncToGenerator(function*(){var {view:b}=this;if(!this._isOverridden("filterLayers"))if(B(b.map)||"esri.WebScene"===b.map.declaredClass){const e=b.map;var c=e?.allLayers;if(0<c?.items?.length){const d={siteLayer:null,facilityLayer:null,levelLayer:null},f=e.floorInfo?.siteLayer?.layerId,g=e.floorInfo?.facilityLayer?.layerId,n=e.floorInfo?.levelLayer?.layerId,x=e.floorInfo?.siteLayer?.sublayerId||e.floorInfo?.facilityLayer?.sublayerId||e.floorInfo?.levelLayer?.sublayerId;if(g&&n){b=c.items.filter(p=>
"feature"===p.type||"scene"===p.type);c=c.items.filter(p=>"map-image"===p.type);if(0<c?.length&&x){yield Promise.all(c.map(q=>q.load()));const p=e.floorInfo?.siteLayer?.sublayerId,u=e.floorInfo?.facilityLayer?.sublayerId,v=e.floorInfo?.levelLayer?.sublayerId;c.forEach(q=>{const r=q.id;q=q?.allSublayers;(r===f||r===g||r===n)&&0<q?.items?.length&&q.items.forEach(t=>{const z=t.id;r===f&&z===p?d.siteLayer=t:z===u?d.facilityLayer=t:z===v&&(d.levelLayer=t)})})}0<b?.length&&b.forEach(p=>{const u=p.id;u===
f?d.siteLayer=p:u===g?d.facilityLayer=p:u===n&&(d.levelLayer=p)});this.filterLayers=d}}}else throw new N("Map must be a webmap or webscene");});return function(){return a.apply(this,arguments)}}();h._getFilterFeatures=function(){var a=w._asyncToGenerator(function*(){if(this._isOverridden("filterFeatures"))return this.filterFeatures;const b={sites:null,facilities:null,levels:null};var c=yield this._getSites();b.sites=c;c=yield this._getFacilities();b.facilities=c;c=yield this._getLevels();b.levels=
c;return b});return function(){return a.apply(this,arguments)}}();h._getSites=function(){var a=w._asyncToGenerator(function*(){const {filterLayers:b,view:c}=this;var e=c.map;const {siteLayer:d}=b,f={sitesInfo:[]};if(!d||!e?.floorInfo?.siteLayer)return f;const g=d.createQuery();g.returnGeometry=!0;g.outFields=["*"];g.returnZ=!0;"type"in d&&"scene"===d.type&&(g.multipatchOption="xyFootprint");const {siteIdField:n,nameField:x}=e.floorInfo.siteLayer;e=yield d.queryFeatures(g);if(0<e?.features?.length){e=
e.features;const p=d?.fieldsIndex.get(n)?.name||n,u=d?.fieldsIndex.get(x)?.name||x;e.forEach(v=>{var q=v.attributes;v=v.geometry;const r=q[p];q=q[u];r&&q&&f.sitesInfo.push({id:r,name:q,geometry:v})})}return f});return function(){return a.apply(this,arguments)}}();h._getFacilities=function(){var a=w._asyncToGenerator(function*(){const {filterLayers:b,view:c}=this;var e=c.map;const {facilityLayer:d}=b,f={facilitiesInfo:[]};if(!d||!e?.floorInfo?.facilityLayer)return f;const g=d.createQuery();g.returnGeometry=
!0;g.outFields=["*"];g.returnZ=!0;"type"in d&&"scene"===d.type&&(g.multipatchOption="xyFootprint");const {facilityIdField:n,siteIdField:x,nameField:p}=e.floorInfo.facilityLayer;e=yield d.queryFeatures(g);if(0<e?.features?.length){e=e.features;const u=d?.fieldsIndex.get(n)?.name||n,v=d?.fieldsIndex.get(x)?.name||x,q=d?.fieldsIndex.get(p)?.name||p;e.forEach(r=>{var t=r.attributes;r=r.geometry;const z=t[u],F=t[v];t=t[q];z&&t&&f.facilitiesInfo.push({id:z,siteId:F,name:t,geometry:r})})}return f});return function(){return a.apply(this,
arguments)}}();h._getLevels=function(){var a=w._asyncToGenerator(function*(){const {filterLayers:b,view:c}=this;var e=c.map;const {levelLayer:d}=b,f={levelsInfo:[]};if(!d||!e?.floorInfo?.levelLayer)return f;const g=d.createQuery();g.returnGeometry=!0;g.outFields=["*"];g.returnZ=!0;const {levelIdField:n,facilityIdField:x,longNameField:p,shortNameField:u,levelNumberField:v,verticalOrderField:q}=e.floorInfo.levelLayer;e=yield d.queryFeatures(g);if(0<e?.features?.length){e=e.features;const r=d?.fieldsIndex.get(n)?.name||
n,t=d?.fieldsIndex.get(x)?.name||x,z=d?.fieldsIndex.get(p)?.name||p,F=d?.fieldsIndex.get(u)?.name||u,U=d?.fieldsIndex.get(v)?.name||v,V=d?.fieldsIndex.get(q)?.name||q;e.forEach(E=>{var y=E.attributes;E=y[r];const I=y[t],J=y[z],K=y[F],L=y[U];y=y[V];E&&I&&J&&K&&"number"===typeof L&&"number"===typeof y&&f.levelsInfo.push({id:E,facilityId:I,longName:J,shortName:K,levelNumber:L,verticalOrder:y})})}return f});return function(){return a.apply(this,arguments)}}();h._registerWidget=function(a){a?.persistableViewModels.includes(this)||
a?.persistableViewModels.add(this)};h._unregisterWidget=function(a){a?.persistableViewModels.remove(this)};h._watchSearchResults=function(a){a?.on("select-result-floor",b=>{const c=this.getLevel(b);c&&this.level!==b&&(this.level=b,this.setFloors(c))})};h._setInitialViewState=function(){var a=w._asyncToGenerator(function*(b){if(this.view)try{yield this.view.when();yield this._setFilterLayers();const c=yield this._getFilterFeatures();if(c)if(this.filterFeatures=c,this.hasFacilities&&this.hasLevels)if(this.hasMultipleSites||
(this.filterMenuType="facility"),this.facility&&this.level){this.filterMenuType="facility";const e=this.getFacility(this.facility),d=this.getLevel(this.level);this.site||(this.site=e.siteId||void 0);this.setFloors(d)}else if(this.facility&&!this.level){this.filterMenuType="facility";const e=this.getFacility(this.facility),d=this.getBaseLevel(e);this.site||(this.site=e.siteId||void 0);this.level=d?.id||void 0;this.setFloors(d)}else if(!this.facility&&this.level){this.filterMenuType="facility";const e=
this.getLevel(this.level),d=this.getFacility(e?.facilityId);this.facility=d?.id||void 0;this.site||(this.site=d?.siteId||void 0);this.setFloors(e)}else{if(!this.site||this.facility||this.level){if(!b||!B(b)){this.setFloors(null);return}b=b?.widgets?.floorFilter;if(!b){this.setFloors(null);return}b.site&&!this.site&&(this.site=b.site,this.filterMenuType="facility")}else this.filterMenuType="site";this.setFloors(null)}else console.error("Facilities and Levels are required for the Floor Filter widget")}catch(c){console.error("Couldn't retrieve sites, facilities, and levels",
c)}});return function(b){return a.apply(this,arguments)}}();h._callOverride=function(a,b){this._override(a,b)};h._updateFloorFilterFromMap=function(){var a=w._asyncToGenerator(function*(b){b&&B(b)&&(b=b?.widgets?.floorFilter)&&(this._isOverridden("enabled")||(this.enabled=b.enabled),this._isOverridden("longNames")||(this.longNames=b.longNames),this._isOverridden("minimized")||(this.minimized=b.minimized),this._isOverridden("pinnedLevels")||(this.pinnedLevels=b.pinnedLevels),this._isOverridden("site")||
(this.site=b.site),this._isOverridden("facility")||(this.facility=b.facility),this._isOverridden("level")||(this.level=b.level))});return function(b){return a.apply(this,arguments)}}();h._computeViewAllModeFloors=function(a){const {filterFeatures:b}=this;if(a.floorInfo?.viewAllMode&&this.hasLevels&&this.hasFacilities&&"base-floors"===this.filterMode){const {level:c,facility:e}=this,d=[];b.levels.levelsInfo.forEach(f=>{const {id:g,facilityId:n}=f;e&&n===e?c&&g===c&&d.push(g):d.push(g)});a.floorInfo.viewAllLevelIds=
new G(d)}};w._createClass(D,[{key:"enabled",set:function(a){this._callOverride("enabled",a)}},{key:"facility",set:function(a){if(a&&this._isOverridden("facility")){const b=this.getFacility(a);this.hasMultipleSites&&(this.site=b?.siteId||null)}this._callOverride("facility",a)}},{key:"filterFeatures",set:function(a){this._callOverride("filterFeatures",a)}},{key:"filterLayers",set:function(a){this._callOverride("filterLayers",a)}},{key:"hasFacilities",get:function(){return this.filterLayers?.facilityLayer&&
0<this.filterFeatures?.facilities?.facilitiesInfo?.length}},{key:"hasLevels",get:function(){return this.filterLayers?.levelLayer&&0<this.filterFeatures?.levels?.levelsInfo?.length}},{key:"hasMultipleSites",get:function(){return this.filterLayers?.siteLayer&&1<this.filterFeatures?.sites?.sitesInfo?.length}},{key:"isNormalMode",get:function(){let a=!0;const b=this._viewWidthBreakpoint;if("xsmall"===this._viewHeightBreakpoint||"xsmall"===b)a=!1;return a}},{key:"level",set:function(a){if(a){var b=null,
c=null;b=a?.split("--");1<b?.length&&"all"===b[0]?(c=b[1],b={id:a,facilityId:c,shortName:null,longName:null,levelNumber:null,verticalOrder:null}):(b=this.getLevel(a),c=b?.facilityId||null);this.level!==a||this.isNormalMode||this.levelsExpanded?(b&&this.hasFacilities&&this.hasLevels?(this.facility=c,this.hasMultipleSites&&(this.site=this.getFacility(c)?.siteId||null),this.setFloors(b)):this._isOverridden("level")&&(this.site=this.facility=null,this.hasMultipleSites&&(this.filterMenuType="site"),this.setFloors(null)),
this._callOverride("level",a)):1<this.getFacilityLevels(c)?.length&&(this.levelsExpanded=!0)}else this._callOverride("level",a),this.site=this.facility=null,this.setFloors(null)}},{key:"longNames",set:function(a){this._callOverride("longNames",a)}},{key:"minimized",set:function(a){this._callOverride("minimized",a)}},{key:"pinnedLevels",set:function(a){this._callOverride("pinnedLevels",a)}},{key:"site",set:function(a){this._callOverride("site",a)}},{key:"state",get:function(){return this.view&&this.filterFeatures&&
this.hasFacilities&&this.hasLevels?"ready":this.view&&!this.filterFeatures?"loading":"disabled"}}]);return D}(T.GoToMixin(k.HandleOwner));l.__decorate([m.property({value:!1})],k.prototype,"enabled",null);l.__decorate([m.property({value:void 0})],k.prototype,"facility",null);l.__decorate([m.property({value:null})],k.prototype,"filterFeatures",null);l.__decorate([m.property({value:null})],k.prototype,"filterLayers",null);l.__decorate([m.property()],k.prototype,"filterMenuOpen",void 0);l.__decorate([m.property()],
k.prototype,"filterMenuType",void 0);l.__decorate([m.property()],k.prototype,"filterMode",void 0);l.__decorate([m.property()],k.prototype,"hasFacilities",null);l.__decorate([m.property()],k.prototype,"hasLevels",null);l.__decorate([m.property()],k.prototype,"hasMultipleSites",null);l.__decorate([m.property({readOnly:!0})],k.prototype,"isNormalMode",null);l.__decorate([m.property({value:void 0})],k.prototype,"level",null);l.__decorate([m.property({value:!1})],k.prototype,"longNames",null);l.__decorate([m.property()],
k.prototype,"levelsExpanded",void 0);l.__decorate([m.property({value:!1})],k.prototype,"minimized",null);l.__decorate([m.property({value:!1})],k.prototype,"pinnedLevels",null);l.__decorate([m.property()],k.prototype,"searchTerm",void 0);l.__decorate([m.property({value:void 0})],k.prototype,"site",null);l.__decorate([m.property({readOnly:!0})],k.prototype,"state",null);l.__decorate([m.property()],k.prototype,"view",void 0);l.__decorate([m.property()],k.prototype,"_viewHeightBreakpoint",void 0);l.__decorate([m.property()],
k.prototype,"_viewWidthBreakpoint",void 0);l.__decorate([m.property()],k.prototype,"updateWebDocument",null);return k=l.__decorate([Q.subclass("esri/widgets/FloorFilter/FloorFilterViewModel")],k)});