// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../request ../../core/Error ../../core/maybe ../../core/promiseUtils ../../core/urlUtils ../../portal/Portal ../../portal/PortalQueryParams ../../support/featureFlags".split(" "),function(f,r,t,n,k,u,p,v,w,x){function y(a,b){return l.apply(this,arguments)}function l(){l=r._asyncToGenerator(function*(a,b){try{return{data:(yield q(a,b)).data,baseUrl:p.removeFile(a),styleUrl:a}}catch(c){return u.throwIfAbortError(c),null}});return l.apply(this,
arguments)}function z(a,b,c){b=k.isSome(b.portal)?b.portal:v.getDefault();let d;const e=`${b.url} - ${b.user&&b.user.username} - ${a}`;m[e]||(m[e]=A(a,b,c).then(g=>{d=g;return g.fetchData()}).then(g=>({data:g,baseUrl:d.itemUrl??"",styleName:a})));return m[e]}function A(a,b,c){return b.load(c).then(()=>{const d=new w({disableExtraQuery:!0,query:`owner:${"esri_en"} AND type:${"Style"} AND typekeywords:"${a}"`});return b.queryItems(d,c)}).then(({results:d})=>{let e=null;const g=a.toLowerCase();if(d&&
Array.isArray(d))for(const h of d)if(h.typeKeywords?.some(B=>B.toLowerCase()===g)&&"Style"===h.type&&"esri_en"===h.owner){e=h;break}if(!e)throw new n("symbolstyleutils:style-not-found",`The style '${a}' could not be found`,{styleName:a});return e.load(c)})}function q(a,b){b={responseType:"json",query:{f:"json"},...b};return t(p.normalize(a),b)}const m={};f.Style2DUrlTemplate="https://cdn.arcgis.com/sharing/rest/content/items/220936cc6ed342c9937abd8f180e7d1e/resources/styles/cim/{SymbolName}.json?f\x3djson";
f.fetchStyle=function(a,b,c){return a&&k.isSome(a.styleUrl)?y(a.styleUrl,c):a&&k.isSome(a.styleName)?z(a.styleName,b,c):Promise.reject(new n("symbolstyleutils:style-url-and-name-missing","Either styleUrl or styleName is required to resolve a style"))};f.makeCIMSymbolRef=function(a){return null===a||"CIMSymbolReference"===a.type?a:{type:"CIMSymbolReference",symbol:a}};f.requestJSON=q;f.symbolUrlFromStyleItem=function(a,b){if("cimRef"===b)return a.cimRef;if(a.formatInfos&&!x.enableWebStyleForceWOSR())for(const c of a.formatInfos)if("gltf"===
c.type)return c.href;return a.webRef};Object.defineProperties(f,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});