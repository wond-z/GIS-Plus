// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../core/maybe ../../../chunks/vec3f64 ../../../support/elevationInfoUtils ./SnappingAlgorithm ./snappingUtils ./candidates/LineSnappingCandidate ../support/viewUtils ../../support/geometry3dUtils ../../support/geometry2dUtils".split(" "),function(u,y,z,n,m,p,l,A,q,B,C){p=function(v){function r(){return v.apply(this,arguments)||this}y._inheritsLoose(r,v);var t=r.prototype;t.snapNewVertex=function(g,a){var b=a.editGeometryOperations.data.components[0],
c=b.edges.length;const f=[];if(1>c)return f;const h=q.anyMapPointToScreenPoint(g,a.coordinateHelper,m.absoluteHeightElevationInfo,this.view),{view:e}=this;c=b=b.edges[c-1];do{if(this.edgeExceedsShortLineThreshold(c,a)){const d=l.editEdgeToSnappingEdge(c,e,a);this._processCandidateProposal(d.left,d.right,g,h,a,f)}c=c.leftVertex.leftEdge}while(c&&c!==b);return f};t.snapExistingVertex=function(g,a){const b=[],c=z.unwrap(a.vertexHandle);var f=c.component;if(2>f.edges.length)return b;const {view:h}=this;
var {coordinateHelper:e}=a;e=q.anyMapPointToScreenPoint(g,e,m.absoluteHeightElevationInfo,h);var d=c.leftEdge,k=c.rightEdge;d&&k&&this.edgeExceedsShortLineThreshold(d,a)&&this.edgeExceedsShortLineThreshold(k,a)&&this._processCandidateProposal(l.convertPointElevation(d.leftVertex.pos,h,a),l.convertPointElevation(k.rightVertex.pos,h,a),g,e,a,b);d=f=f.edges[0];do d!==c.leftEdge&&d!==c.rightEdge&&this.edgeExceedsShortLineThreshold(d,a)&&(k=l.editEdgeToSnappingEdge(d,h,a),this._processCandidateProposal(k.left,
k.right,g,e,a,b)),d=d.rightVertex.rightEdge;while(d&&d!==f);return b};t._processCandidateProposal=function(g,a,b,c,f,h){const {coordinateHelper:e,pointer:d}=f;e.toXYZ(g,w);e.toXYZ(a,x);b=e.toXYZ(b,D);b=B.projectPointToLineLike(b,E);b=e.fromXYZ(b);l.squaredScreenDistance(c,q.anyMapPointToScreenPoint(b,e,m.absoluteHeightElevationInfo,this.view))<this.squaredProximityThreshold(d)&&h.push(new A.LineSnappingCandidate({coordinateHelper:e,lineStart:g,lineEnd:a,targetPoint:b,elevationInfo:e.hasZ()?m.absoluteHeightElevationInfo:
null}))};return r}(p.SnappingAlgorithm);const w=n.create(),x=n.create(),E={start:w,end:x,type:C.LineType.LINE},D=n.create();u.LineSnapper=p;Object.defineProperties(u,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});