// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/HandleOwner ../../../../core/handleUtils ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/accessorSupport/decorators/property ../../../../core/arrayUtils ../../../../core/accessorSupport/ensureType ../../../../core/accessorSupport/decorators/subclass ../../../3d/webgl-engine/lib/edgeRendering/EdgeWorkerHandle ./sceneLayerSource/SceneLayerSnappingSourceWorkerHandle".split(" "),
function(c,f,g,t,p,h,u,l,y,z,v,w,x){c.I3SSnappingSource=function(q){function m(a){a=q.call(this,a)||this;a.availability=1;a._abortController=new AbortController;return a}f._inheritsLoose(m,q);var k=m.prototype;k.destroy=function(){this._tracker=h.removeMaybe(this._tracker);this._abortController=h.abortMaybe(this._abortController)};k.initialize=function(){var a=this;const {view:d}=this,e=d.resourceController;this._edgeWorker=new w.EdgeWorkerHandle(b=>e.schedule(b));this._workerHandle=new x.SceneLayerSnappingSourceWorkerHandle({renderCoordsHelper:this.view.renderCoordsHelper,
schedule:b=>e.schedule(b),fetchEdgeLocations:function(){var b=f._asyncToGenerator(function*(n,r){if(h.isNone(a._tracker))throw Error("tracker-not-initialized");return a._tracker.fetchEdgeLocations(n,a._edgeWorker,r)});return function(n,r){return b.apply(this,arguments)}}()});this.updatingHandles.addPromise(this._setupLayerView());this.handles.add([p.destroyHandle(this._workerHandle),p.destroyHandle(this._edgeWorker)])};k.fetchCandidates=function(){var a=f._asyncToGenerator(function*(d,e){return this._workerHandle.fetchCandidates(d,
e)});return function(d,e){return a.apply(this,arguments)}}();k.refresh=function(){};k._setupLayerView=function(){var a=f._asyncToGenerator(function*(){if(!this.destroyed){var d=h.applySome(this._abortController,b=>b.signal),e=yield this.getLayerView();h.isNone(e)||u.isAborted(d)||(this._tracker=e.trackSnappingSources({add:(b,n)=>{this.updatingHandles.addPromise(this._workerHandle.add({id:b,bounds:n},d))},remove:b=>{this.updatingHandles.addPromise(this._workerHandle.remove({id:b},d))}}))}});return function(){return a.apply(this,
arguments)}}();f._createClass(m,[{key:"updating",get:function(){return this.updatingHandles.updating}}]);return m}(t.HandleOwner);g.__decorate([l.property({constructOnly:!0})],c.I3SSnappingSource.prototype,"getLayerView",void 0);g.__decorate([l.property({constructOnly:!0})],c.I3SSnappingSource.prototype,"view",void 0);g.__decorate([l.property({readOnly:!0})],c.I3SSnappingSource.prototype,"updating",null);g.__decorate([l.property({readOnly:!0})],c.I3SSnappingSource.prototype,"availability",void 0);
c.I3SSnappingSource=g.__decorate([v.subclass("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],c.I3SSnappingSource);Object.defineProperties(c,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});