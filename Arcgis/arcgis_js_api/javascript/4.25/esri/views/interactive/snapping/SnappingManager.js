// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Evented ../../../core/HandleOwner ../../../core/lang ../../../core/maybe ../../../core/promiseUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../geometry/projection ../../../support/elevationInfoUtils ./SnappingDomain ./snappingFactory ./SnappingOptions ./snappingUtils ./candidates/IntersectionSnappingCandidate ../support/viewUtils".split(" "),
function(m,v,t,G,H,I,p,J,w,u,O,K,C,x,z,L,M,D,A,N){function E({coordinateHelper:q,elevationInfo:y}){return q.hasZ()?x.absoluteHeightElevationInfo:y}m.SnappingManager=function(q){function y(a){a=q.call(this,a)||this;a.options=new M;a.snappingEnginesFactory=L.defaultSnappingEnginesFactory;a._engines=[];a._currentMainCandidate=null;a._currentOtherActiveCandidates=[];a._currentSnappedType=r.MAIN;return a}v._inheritsLoose(y,q);var g=y.prototype;g.initialize=function(){this.handles.add([w.watch(()=>{const {effectiveFeatureEnabled:a,
effectiveSelfEnabled:b,touchSensitivityMultiplier:c,distance:e}=this.options;return{effectiveFeatureEnabled:a,effectiveSelfEnabled:b,touchSensitivityMultiplier:c,distance:e}},()=>{this.doneSnapping();this.emit("changed")},w.sync),w.watch(()=>this.options,a=>{for(const b of this._engines)b.options=a},w.sync),w.watch(()=>({viewReady:this.view.ready,viewSpatialReference:this.view.spatialReference,snappingEnginesFactory:this.snappingEnginesFactory}),({viewReady:a,snappingEnginesFactory:b})=>this._recreateEngines(a,
b),w.syncAndInitial)])};g.destroy=function(){this._destroyEngines()};g._recreateEngines=function(a,b){this._destroyEngines();if(a){var {view:c,options:e}=this;this._engines=b(c,e)}};g._destroyEngines=function(){for(const a of this._engines)a.destroy();this._engines=[]};g.snap=function(){var a=v._asyncToGenerator(function*(b){return p.isSome(b.scenePoint)?this._snapMultiPoint(b):this._snapSinglePoint(b)});return function(b){return a.apply(this,arguments)}}();g.update=function(a){const {point:b,context:c}=
a;this._removeVisualization();var e=this._currentMainCandidate;if(p.isNone(e))return b;a=this._selectUpdateInput(a);if(p.isNone(a))return b;var {coordinateHelper:{spatialReference:d}}=c,f=C.project(this._convertPointElevation(a,c),d);if(p.isNone(f))return b;({view:a}=this);const {coordinateHelper:h,elevationInfo:k,visualizer:n}=c;d=[];f=h.pointToVector(f);const l=e.constraint.closestTo(f);if(!this._arePointsWithinScreenThreshold(f,l,c))return this._resetSnappingState(),b;e.targetPoint=l;d.push(...e.hints);
for(const B of this._currentOtherActiveCandidates)B.targetPoint=l,d.push(...B.hints);p.isSome(n)&&this.handles.add(n.draw(d,{coordinateHelper:h,elevationInfo:E(c),view:a,selfSnappingZ:c.selfSnappingZ}),"visualization-handle");e=h.vectorToDehydratedPoint(l);return this._convertPointElevation(e,c,x.absoluteHeightElevationInfo,k)};g.doneSnapping=function(){this._removeVisualization();this._resetSnappingState()};g._selectUpdateInput=function({point:a,scenePoint:b}){switch(this._currentSnappedType){case r.MAIN:return a;
case r.SCENE:return b}};g._resetSnappingState=function(){this._currentMainCandidate=null;this._currentOtherActiveCandidates=[];this._currentSnappedType=r.MAIN};g._removeVisualization=function(){this.handles.remove("visualization-handle")};g._snapSinglePoint=function(){var a=v._asyncToGenerator(function*({point:b,context:c,signal:e}){var {coordinateHelper:d}=c;const {view:f}=this;b=this._convertPointElevation(b,c);d=d.pointToVector(b);b=yield this._fetchCandidates(d,z.SnappingDomain.ALL,c,e);return this._createSnapResult(d,
r.MAIN,b,f,c,e)});return function(b){return a.apply(this,arguments)}}();g._snapMultiPoint=function(){var a=v._asyncToGenerator(function*({point:b,scenePoint:c,context:e,signal:d}){const {view:f}=this;var {coordinateHelper:h}=e,{spatialReference:k}=h;yield C.initializeProjection(c.spatialReference,k);c=C.project(this._convertPointElevation(c,e),k);c=h.pointToVector(c);k=yield this._fetchCandidates(c,z.SnappingDomain.FEATURE,e,d);if(0<k.length)return h=yield this._fetchCandidates(c,z.SnappingDomain.SELF,
e,d),this._createSnapResult(c,r.SCENE,[...k,...h],f,e,d);b=this._convertPointElevation(b,e);h=h.pointToVector(b);b=yield this._fetchCandidates(h,z.SnappingDomain.SELF,e,d);return this._createSnapResult(h,r.MAIN,b,f,e,d)});return function(b){return a.apply(this,arguments)}}();g._fetchCandidates=function(){var a=v._asyncToGenerator(function*(b,c,e,d){return(yield Promise.all(this._engines.map(f=>f.fetchCandidates(b,c,e,d)))).flat()});return function(b,c,e,d){return a.apply(this,arguments)}}();g._createSnapResult=
function(a,b,c,e,d,f){return{get valid(){return!J.isAborted(f)},apply:()=>{const {elevationInfo:h,coordinateHelper:k}=d,{snappedPoint:n,hints:l}=this._processCandidates(a,b,c,d);this._removeVisualization();p.isSome(d.visualizer)&&this.handles.add(d.visualizer.draw(l,{coordinateHelper:k,elevationInfo:E(d),view:e,selfSnappingZ:d.selfSnappingZ}),"visualization-handle");return this._convertPointElevation(n,d,x.absoluteHeightElevationInfo,h)}}};g._processCandidates=function(a,b,c,e){var {coordinateHelper:d}=
e;if(1>c.length)return this.doneSnapping(),{snappedPoint:d.vectorToDehydratedPoint(a),hints:[]};this._currentSnappedType!==b&&this._resetSnappingState();D.sortCandidatesInPlace(a,c,d);d=this._currentMainCandidate;if(p.isSome(d)){const f=this._findOldConstraintInNewCandidates(d,c);if(0<=f)if(c[f]instanceof A.IntersectionSnappingCandidate){if(this._arePointsWithinScreenThreshold(a,d.targetPoint,e))return this._updateSnappingCandidate(d,b,c,e)}else return this._intersectWithOtherCandidates(f,c,a,b,e)}return this._intersectWithOtherCandidates(0,
c,a,b,e)};g._findOldConstraintInNewCandidates=function(a,b){return a instanceof A.IntersectionSnappingCandidate?0<=this._findOldCandidateIndex(b,a.first)&&0<=this._findOldCandidateIndex(b,a.second)?0:-1:this._findOldCandidateIndex(b,a)};g._intersectWithOtherCandidates=function(a,b,c,e,d){const {coordinateHelper:f}=d,h=b[a],k=[];for(let n=0;n<b.length;++n){if(n===a)continue;const l=b[n];for(const B of h.constraint.intersect(l.constraint)){const F=f.fromXYZ(B.closestTo(h.targetPoint),h.targetPoint[2]);
k.push([new A.IntersectionSnappingCandidate(f,F,h,l,l.elevationInfo),this._squaredScreenDistance(c,F,f)])}}return 0<k.length&&(k.sort((n,l)=>n[1]-l[1]),k[0][1]<this._squaredPointProximityThreshold(d.pointer))?this._updateSnappingCandidate(k[0][0],e,b,d):this._updateSnappingCandidate(h,e,b,d)};g._updateSnappingCandidate=function(a,b,c,e){this.doneSnapping();this._currentMainCandidate=a;this._currentSnappedType=b;b=this._currentMainCandidate.targetPoint;const d=[];d.push(...a.hints);for(const f of c){if(a instanceof
A.IntersectionSnappingCandidate){if(f.constraint.equals(a.first.constraint)||f.constraint.equals(a.second.constraint))continue}else if(f.constraint.equals(a.constraint))continue;f.constraint.check(b)&&(f.targetPoint=b,this._currentOtherActiveCandidates.push(f),d.push(...f.hints))}return{snappedPoint:e.coordinateHelper.vectorToDehydratedPoint(b),hints:d}};g._squaredPointProximityThreshold=function(a){return"touch"===a?this._squaredTouchProximityThreshold:this._squaredMouseProximityTreshold};g._arePointsWithinScreenThreshold=
function(a,b,c){return this._squaredScreenDistance(a,b,c.coordinateHelper)<this._squaredPointProximityThreshold(c.pointer)};g._squaredScreenDistance=function(a,b,c){return D.squaredScreenDistance(this._toScreen(a,c),this._toScreen(b,c))};g._toScreen=function(a,b){return N.anyMapPointToScreenPoint(a,b,x.absoluteHeightElevationInfo,this.view)};g._findOldCandidateIndex=function(a,b){let c=-1;for(let e=0;e<a.length;++e)if(b.constraint.equals(a[e].constraint)){c=e;break}return c};g._convertPointElevation=
function(a,b,c=b.elevationInfo,e=x.absoluteHeightElevationInfo){const {view:d}=this;if(!(p.isSome(a)&&b.coordinateHelper.hasZ()&&p.isSome(d)&&"3d"===d.type))return a;a=I.clone(a);a.z=x.getConvertedElevation(d,a,c,e);return a};v._createClass(y,[{key:"updating",get:function(){return this._engines.some(a=>a.updating)}},{key:"_squaredMouseProximityTreshold",get:function(){return this.options.distance*this.options.distance}},{key:"_squaredTouchProximityThreshold",get:function(){const {distance:a,touchSensitivityMultiplier:b}=
this.options,c=a*b;return c*c}},{key:"test",get:function(){return{visualizationsActive:this.handles.has("visualization-handle"),engines:this._engines}}}]);return y}(G.EventedMixin(H.HandleOwner));t.__decorate([u.property({constructOnly:!0})],m.SnappingManager.prototype,"view",void 0);t.__decorate([u.property()],m.SnappingManager.prototype,"options",void 0);t.__decorate([u.property({readOnly:!0})],m.SnappingManager.prototype,"updating",null);t.__decorate([u.property()],m.SnappingManager.prototype,
"snappingEnginesFactory",void 0);t.__decorate([u.property()],m.SnappingManager.prototype,"_engines",void 0);t.__decorate([u.property()],m.SnappingManager.prototype,"_squaredMouseProximityTreshold",null);t.__decorate([u.property()],m.SnappingManager.prototype,"_squaredTouchProximityThreshold",null);m.SnappingManager=t.__decorate([K.subclass("esri.views.interactive.snapping.SnappingManager")],m.SnappingManager);var r;(function(q){q[q.MAIN=0]="MAIN";q[q.SCENE=1]="SCENE"})(r||(r={}));Object.defineProperties(m,
{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});