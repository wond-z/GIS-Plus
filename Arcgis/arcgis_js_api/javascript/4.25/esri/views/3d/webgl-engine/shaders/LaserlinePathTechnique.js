// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../lib/Program ../lib/VertexAttribute ../../../../chunks/LaserlinePath.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),function(l,e,m,n,b,p,c,q,g,f){b=function(d){function a(){return d.apply(this,arguments)||this}m._inheritsLoose(a,d);var h=a.prototype;h.initializeProgram=function(r){return new p.Program(r.rctx,a.shader.get().build(this.configuration),
k)};h.initializePipeline=function(){return f.makePipelineState({blending:f.simpleBlendingParams(g.BlendFactor.ONE,g.BlendFactor.ONE_MINUS_SRC_ALPHA),colorWrite:f.defaultColorWriteParams})};return a}(b.ShaderTechnique);b.shader=new n.ReloadableShaderModule(q.LaserlinePath,()=>new Promise((d,a)=>l(["./LaserlinePath.glsl"],d,a)));const k=new Map([[c.VertexAttribute.START,0],[c.VertexAttribute.END,1],[c.VertexAttribute.UP,2],[c.VertexAttribute.EXTRUDE,3]]);e.LaserlinePathTechnique=b;e.attributeLocations=
k;Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});