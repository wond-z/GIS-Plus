// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/MapUtils ../../../../core/maybe ../../../../core/uid ../../../../core/accessorSupport/decorators/property ../../../../core/arrayUtils ../../../../core/accessorSupport/ensureType ../../../../core/accessorSupport/decorators/subclass ./GeometryRecord ./ModelDirtyTypes ./Util".split(" "),function(y,v,p,z,w,C,A,H,I,D,B,d,x){let E=function(q,n){this.geometryRecord=q;this.renderGeometry=
n},F=function(q,n,e){this.operation=q;this.geometryRecord=n;this.states=e};p=function(q){function n(a){a=q.call(this,a)||this;a._residentGeomRecords=new Map;a._dirtyGeomRecords=new Map;a.dirty=!1;return a}y._inheritsLoose(n,q);var e=n.prototype;e.commit=function(a){this.dirty=!1;this._dirtyGeomRecords.forEach((b,c)=>this.commitLayer(c,a))};e.commitLayer=function(a,b){const c=this._dirtyGeomRecords.get(a);c&&(c.forEach((f,g)=>{const h=this._ensureGeomRecord(a,g);f.forEach(({geometryRecord:k,operation:l,
states:m},t)=>{let u=!1;if(l===d.DirtyOperation.UPDATE){var r=h.get(t);if(r){r=r.renderGeometry;if(m&d.DirtyState.TRANSFORMATION){const G=this.model.getObject(g);this.model.updateRenderGeometryTransformation(G,k,r)&&(u=!0)}u||b.updates.push({renderGeometry:r,updateType:m})}else x.assert(!1,"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid update")}if(l===d.DirtyOperation.REMOVE||u)(m=h.get(t))?(b.removes.push(m.renderGeometry),h.delete(t),m.geometryRecord.disposed&&B.GeometryRecord.pool.release(m.geometryRecord)):
l===d.DirtyOperation.REMOVE&&x.assert(!1,"ModelDirtySet.getAddRemoveListFilteredByLayers: invalid remove");if(l===d.DirtyOperation.ADD||u)l=this.model.getObject(g),w.isSome(l)&&(l=this.model.getRenderGeometry(l,k),k=new E(k,l),b.adds.push(l),h.set(t,k))});0===h.size&&this._residentGeomRecords.get(a).delete(g)}),0===this._residentGeomRecords.get(a).size&&this._residentGeomRecords.delete(a),this._dirtyGeomRecords.delete(a))};e.getResidentRenderGeometries=function(a,b){(a=this._residentGeomRecords.get(a))&&
a.forEach(c=>c.forEach(f=>b.push(f.renderGeometry)))};e._objectStateChanged=function(a,b){for(const c of b.geometryRecords)this._updateOrCreateDirtyRecord(b,c,null,d.DirtyOperation.UPDATE,a)};e.visibilityChanged=function(a){this._objectStateChanged(d.DirtyState.VISIBILITIES,a)};e.highlightChanged=function(a){this._objectStateChanged(d.DirtyState.HIGHLIGHTS,a)};e.occlusionChanged=function(a){this._objectStateChanged(d.DirtyState.OCCLUDEES,a)};e.vertexAttrsUpdated=function(a){this._updateOrCreateDirtyRecord(a.object,
a.record,null,d.DirtyOperation.UPDATE,d.DirtyState.VERTEXATTRS)};e.layerAdded=function(a){a.objects.forAll(b=>this._layerObjectAdded(a,b))};e.layerRemoved=function(a){a.objects.forAll(b=>this._layerObjectRemoved(a,b))};e.layerObjectAdded=function(a){this._layerObjectAdded(a.layer,a.object)};e._layerObjectAdded=function(a,b){a=a.id;for(const c of b.geometryRecords)this._objectGeometryAdded(b,c,a)};e.layerObjectRemoved=function(a){this._layerObjectRemoved(a.layer,a.object)};e.layerObjectsAdded=function(a){for(const b of a.objects)this._layerObjectAdded(a.layer,
b)};e.layerObjectsRemoved=function(a){for(const b of a.objects)this._layerObjectRemoved(a.layer,b)};e._layerObjectRemoved=function(a,b){a=a.id;for(const c of b.geometryRecords)this._objectGeometryRemoved(b,c,a)};e.shaderTransformationChanged=function(a){(a=this._residentGeomRecords.get(a.id))&&a.forEach((b,c)=>{(c=this.model.getObject(c))&&c.hasVolativeTransformation()&&b.forEach(f=>{f.renderGeometry.shaderTransformationChanged()})})};e.objectTransformation=function(a){const b=this._getParentLayerId(a);
this._ensureGeomRecord(b,a.id).forEach(c=>{this._updateOrCreateDirtyRecord(a,c.geometryRecord,b,d.DirtyOperation.UPDATE,d.DirtyState.TRANSFORMATION)})};e.objectGeometryAdded=function(a){this._objectGeometryAdded(a.object,a.record)};e._objectGeometryAdded=function(a,b,c=null){this._updateOrCreateDirtyRecord(a,b,c,d.DirtyOperation.ADD)};e.objectGeometryRemoved=function(a){this._objectGeometryRemoved(a.object,a.record)};e._objectGeometryRemoved=function(a,b,c=null){this._updateOrCreateDirtyRecord(a,
b,c,d.DirtyOperation.REMOVE)};e._updateOrCreateDirtyRecord=function(a,b,c,f,g=d.DirtyState.NONE){c=w.unwrapOr(c,this._getParentLayerId(a));const h=b.id;a=this._ensureDirtyRecord(c,a.id);(c=a.get(h))?(b=c.operation,b===d.DirtyOperation.REMOVE&&f===d.DirtyOperation.ADD&&c.states!==d.DirtyState.NONE?c.operation=d.DirtyOperation.UPDATE:b===d.DirtyOperation.REMOVE&&f===d.DirtyOperation.ADD||b===d.DirtyOperation.ADD&&f===d.DirtyOperation.REMOVE?(a.delete(h),c.geometryRecord.disposed&&B.GeometryRecord.pool.release(c.geometryRecord)):
(b!==d.DirtyOperation.UPDATE||f!==d.DirtyOperation.REMOVE&&f!==d.DirtyOperation.UPDATE?x.assert((b===d.DirtyOperation.REMOVE||b===d.DirtyOperation.ADD)&&f===d.DirtyOperation.UPDATE,"ModelDirtySet.objectGeometryAdded: inconsistent state"):c.operation=f,c.states|=g)):a.set(h,new F(f,b,g));this.dirty=this._hasDirtyGeometryRecords};e._ensureGeomRecord=function(a,b){let c=this._residentGeomRecords.get(a);c||(c=new Map,this._residentGeomRecords.set(a,c));a=c.get(b);a||(a=new Map,c.set(b,a));return a};e._ensureDirtyRecord=
function(a,b){let c=this._dirtyGeomRecords.get(a);c||(c=new Map,this._dirtyGeomRecords.set(a,c));a=c.get(b);a||(a=new Map,c.set(b,a));return a};e._getParentLayerId=function(a){return w.isSome(a.parentLayer)?a.parentLayer.id:C.NullUID};e.formatDebugInfo=function(){const a=["ADD","UPD",void 0,"REM"];let b="";this._dirtyGeomRecords.forEach((c,f)=>{c.forEach((g,h)=>{0<b.length&&(b+="\n");b+=f+"."+h;const k=[];g.forEach(l=>{const m=l.operation;k[m]||(k[m]=[]);k[m].push(l.geometryRecord.geometry.id)});
for(g=0;g<k.length;g++)if(k[g])for(b+=" "+a[g-1]+": ",h=0;h<k[g].length;h++)b+=k[g][h]+", "})});return b};y._createClass(n,[{key:"_hasDirtyGeometryRecords",get:function(){return z.someMap(this._dirtyGeomRecords,a=>z.someMap(a,b=>b&&0<b.size))}},{key:"test",get:function(){const a=this;return{get residentLayerCount(){return a._residentGeomRecords.size},get residentObjectCount(){return Array.from(a._residentGeomRecords.values()).reduce((b,c)=>b+c.size,0)}}}}]);return n}(p);v.__decorate([A.property({constructOnly:!0})],
p.prototype,"model",void 0);v.__decorate([A.property()],p.prototype,"dirty",void 0);return p=v.__decorate([D.subclass("esri.views.3d.webgl-engine.lib.ModelDirtySet")],p)});