// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../core/mathUtils ../../../../../chunks/vec3f64 ../../../../../geometry/support/aaBoundingBox ../../materials/internal/MaterialUtil".split(" "),function(G,N,O,F,J,P){function Q(g,h,a){let d=0,e=Infinity;for(let c=0;3>c;++c){var b=g[c];if(h[c]<b){if(1E-6>=a[c])return!1;d=Math.max(d,(b-h[c])/a[c])}else-1E-6>=a[c]&&(e=Math.min(e,(b-h[c])/a[c]));if(d>e)return!1;b=g[c+3];if(h[c]>b){if(-1E-6<=a[c])return!1;d=Math.max(d,(b-h[c])/
a[c])}else 1E-6<=a[c]&&(e=Math.min(e,(b-h[c])/a[c]));if(d>e)return!1}return!0}function R(g,h,a,d,e,b){let c=d;for(;a<c;){var f=g[a];h[6*f+e+3]<=b?++a:(--c,g[a]=g[c],g[c]=f)}f=a;for(c=d;f<c;)d=g[c-1],h[6*d+e]>=b?--c:(g[c-1]=g[f],g[f]=d,++f);return{next:a,mid:f}}function S(g,h,a,d){if(d<=a)return J.fromValues(NaN,NaN,NaN,NaN,NaN,NaN);var e=6*g[a];for(var b=0;3>b;++b)C[b]=h[e+0+b],D[b]=h[e+3+b];for(a+=1;a<d;++a)for(e=6*g[a],b=0;3>b;++b)C[b]=Math.min(C[b],h[e+0+b]),D[b]=Math.max(D[b],h[e+3+b]);return J.fromValues(C[0],
C[1],C[2],D[0],D[1],D[2])}function T(g){var h=g[3]-g[0];const a=g[4]-g[1],d=g[5]-g[2];h=h>a?h>d?0:a>d?1:2:a>d?1:d>h?2:0;return{axis:h,midValue:(g[h]+g[h+3])/2}}function U(g,h,a,d,e){a-=h;const b=new Float32Array(6*a);for(let f=0;f<a;++f){var c=3*(f+h);const x=g[c+0]*e,y=g[c+1]*e;c=g[c+2]*e;for(let l=0;3>l;++l){const n=d[x+l],r=d[y+l],k=d[c+l];b[6*f+l]=Math.min(n,r,k);b[6*f+3+l]=Math.max(n,r,k)}}return b}function V(g,h,a,d){const e=d-a;var b=0;for(var c=a;c<d;++c)for(var f=0;3>f;++f)b=Math.max(h[3*
c+f],b);d=65535>=b?new Uint16Array(3*e):new Uint32Array(3*e);for(b=0;b<e;++b)for(c=3*(g[b]+a),f=0;3>f;++f)d[3*b+f]=h[c+f];return d}let K=function(g,h,a,d,e){this.aabb=g;this.axis=h;this.d=a;this.midStartIndex=d;this.rightStartIndex=e},M=function(){function g(a,d,e,b){this.globalTriangleVertexIndices=a;this.firstTriangleIndex=d;this.positionAttribute=b;this._rayDirection=F.create();this.bspNodeTree=[];this.vertexPositionBuffer=b.data;this.vertexPositionStride=b.stride;const c=e-d,f=65535>=c?new Uint16Array(c):
new Uint32Array(c);this.indices=f;for(let n=0;n<c;++n)f[n]=n;const x=U(a,d,e,b.data,b.stride),y=O.clamp(Math.log2(c/40),2,10),l=(n,r,k)=>{var m=S(f,x,n,r);const q=r-n;if(40>=q)return n=new K(m,void 0,0,n,r),this.bspNodeTree.push(n),n;const {axis:p,midValue:u}=T(m),v=R(f,x,n,r,p,u),B=(z,A)=>{if(!(k>y)){var t=A-z;if(!(40>t||t>=.8*q))return l(z,A,k+1)}};m=new K(m,p,u,v.next,v.mid);this.bspNodeTree.push(m);m.leftNode=B(n,v.next);m.rightNode=B(v.mid,r);return m};l(0,c,0);this.triangleVertexIndices=V(f,
a,d,e)}var h=g.prototype;h.intersectRayTriangleRange=function(a,d){if(!(a>=d)){var e=this.triangleVertexIndices,b=this.positionAttribute.data,c=this.positionAttribute.stride,f=this._rayOrigin,x=f[0],y=f[1];f=f[2];var l=this._rayDirection,n=l[0],r=l[1];l=l[2];for(let H=a,I=3*a;H<d;++H){var k=e[I++]*c,m=b[k++],q=b[k++],p=b[k];k=e[I++]*c;var u=b[k++],v=b[k++],B=b[k];k=e[I++]*c;var z=b[k++],A=b[k++];u-=m;v-=q;B-=p;z-=m;A-=q;k=b[k]-p;var t=r*k-A*l,E=l*z-k*n;const L=n*A-z*r;var w=u*t+v*E+B*L;if(!(Math.abs(w)<=
Number.EPSILON)){m=x-m;q=y-q;p=f-p;t=m*t+q*E+p*L;if(0<w){if(0>t||t>w)continue}else if(0<t||t<w)continue;E=q*B-v*p;p=p*u-B*m;q=m*v-u*q;m=n*E+r*p+l*q;if(0<w){if(0>m||t+m>w)continue}else if(0<m||t+m<w)continue;p=(z*E+A*p+k*q)/w;0<=p&&(w=this.indices[H]+this.firstTriangleIndex,u=P.computeNormal(u,v,B,z,A,k,W),this._callback(p,u,w,!1))}}g.numFacesTested+=d-a}};h.intersectRay=function(a,d){g.numFacesTested=0;var e=F.fromValues(a.r0[0],a.r0[1],a.r0[2]),b=F.fromValues(a.r1[0],a.r1[1],a.r1[2]);a=b[0]-e[0];
const c=b[1]-e[1];b=b[2]-e[2];1E-6>a*a+c*c+b*b||(this._rayOrigin=e,e=this._rayDirection,e[0]=a,e[1]=c,e[2]=b,e=this.triangleVertexIndices.length/3,this._callback=d,this.intersectRayBSP(this.bspNodeTree[0],0,e))};h.intersectRayBSP=function(a,d,e){const b=this._rayOrigin,c=this._rayDirection;if(Q(a.aabb,b,c)){var f=a.axis,x=a.d;if(b[f]<x||0>c[f]){const y=a.midStartIndex;if(d<y){const l=a.leftNode;void 0!==l?this.intersectRayBSP(l,d,y):this.intersectRayTriangleRange(d,y)}}this.intersectRayTriangleRange(a.midStartIndex,
a.rightStartIndex);if(b[f]>x||0<c[f])d=a.rightStartIndex,d<e&&(a=a.rightNode,void 0!==a?this.intersectRayBSP(a,d,e):this.intersectRayTriangleRange(d,e))}};N._createClass(g,[{key:"estimatedMemoryUsage",get:function(){return this.triangleVertexIndices.byteLength+this.indices.byteLength}}]);return g}();M.numFacesTested=0;const W=F.create(),C=[Infinity,Infinity,Infinity],D=[-Infinity,-Infinity,-Infinity];G.ComponentIntersectionData=M;G.componentMinimalSizeForIntersectionData=200;Object.defineProperties(G,
{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});