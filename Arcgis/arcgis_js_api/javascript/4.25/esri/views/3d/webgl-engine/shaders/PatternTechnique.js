// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../core/shaderLibrary/ShaderOutput ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/basicInterfaces ../lib/OrderIndependentTransparency ../lib/Program ../lib/StencilUtils ../lib/TransparencyPassType ../lib/VertexAttribute ../materials/DefaultTechniqueConfiguration ../materials/PatternStyle ../../../../chunks/Pattern.glsl ../../../webgl/context-util ../../../webgl/renderState".split(" "),
function(z,m,w,c,n,a,p,d,x,l,A,u,q,r,B,C,D,E,t){p=function(g){function f(){return g.apply(this,arguments)||this}w._inheritsLoose(f,g);var b=f.prototype;b.initializeConfiguration=function(e,k){k.hasWebGL2Context=e.rctx.type===E.ContextType.WEBGL2};b.initializeProgram=function(e){return new A.Program(e.rctx,f.shader.get().build(this.configuration),y)};b._setPipelineState=function(e,k){const h=this.configuration,v=e===q.TransparencyPassType.NONE,F=e===q.TransparencyPassType.FrontFace;return t.makePipelineState({blending:h.output===
n.ShaderOutput.Color||h.output===n.ShaderOutput.Alpha?v?l.blendingDefault:l.oitBlending(e):null,culling:t.cullingParams(h.cullFace),depthTest:{func:l.oitDepthTest(e)},depthWrite:v?h.writeDepth&&t.defaultDepthWriteParams:l.oitDepthWrite(e),colorWrite:t.defaultColorWriteParams,stencilWrite:h.hasOccludees?u.stencilWriteMaskOn:null,stencilTest:h.hasOccludees?k?u.stencilToolMaskBaseParams:u.stencilBaseAllZerosParams:null,polygonOffset:v||F?h.polygonOffset&&G:l.getOITPolygonOffset(h.enableOffset)})};b.initializePipeline=
function(){this._occludeePipelineState=this._setPipelineState(this.configuration.transparencyPassType,!0);return this._setPipelineState(this.configuration.transparencyPassType,!1)};b.getPipelineState=function(e,k){return k?this._occludeePipelineState:g.prototype.getPipelineState.call(this,e,k)};return f}(p.ShaderTechnique);p.shader=new a.ReloadableShaderModule(D.Pattern,()=>new Promise((g,f)=>z(["./Pattern.glsl"],g,f)));const G={factor:1,units:1};a=function(g){function f(){var b=g.apply(this,arguments)||
this;b.output=n.ShaderOutput.Color;b.cullFace=x.CullFaceOptions.None;b.transparencyPassType=q.TransparencyPassType.NONE;b.hasSlicePlane=!1;b.hasVertexColors=!1;b.polygonOffset=!1;b.writeDepth=!0;b.hasOccludees=!1;b.enableOffset=!0;b.hasMultipassTerrain=!1;b.cullAboveGround=!1;return b}w._inheritsLoose(f,g);return f}(B.DefaultTechniqueConfiguration);c.__decorate([d.parameter({count:n.ShaderOutput.COUNT})],a.prototype,"output",void 0);c.__decorate([d.parameter({count:x.CullFaceOptions.COUNT})],a.prototype,
"cullFace",void 0);c.__decorate([d.parameter({count:C.Style.COUNT})],a.prototype,"style",void 0);c.__decorate([d.parameter({count:q.TransparencyPassType.COUNT})],a.prototype,"transparencyPassType",void 0);c.__decorate([d.parameter()],a.prototype,"hasSlicePlane",void 0);c.__decorate([d.parameter()],a.prototype,"hasVertexColors",void 0);c.__decorate([d.parameter()],a.prototype,"polygonOffset",void 0);c.__decorate([d.parameter()],a.prototype,"writeDepth",void 0);c.__decorate([d.parameter()],a.prototype,
"hasOccludees",void 0);c.__decorate([d.parameter()],a.prototype,"patternSpacing",void 0);c.__decorate([d.parameter()],a.prototype,"lineWidth",void 0);c.__decorate([d.parameter()],a.prototype,"enableOffset",void 0);c.__decorate([d.parameter()],a.prototype,"draped",void 0);c.__decorate([d.parameter()],a.prototype,"hasMultipassTerrain",void 0);c.__decorate([d.parameter()],a.prototype,"cullAboveGround",void 0);const y=new Map([[r.VertexAttribute.POSITION,0],[r.VertexAttribute.COLOR,3],[r.VertexAttribute.UVMAPSPACE,
4],[r.VertexAttribute.BOUNDINGRECT,5]]);m.PatternTechnique=p;m.PatternTechniqueConfiguration=a;m.vertexAttributeLocations=y;Object.defineProperties(m,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});