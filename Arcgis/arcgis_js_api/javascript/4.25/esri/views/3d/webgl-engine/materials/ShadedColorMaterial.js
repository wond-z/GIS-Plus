// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../chunks/vec4f64 ../../../../geometry/support/aaBoundingBox ../../../../geometry/support/buffer/BufferView ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutput ../lib/basicInterfaces ../lib/GLMaterial ../lib/Material ../lib/RenderSlot ../lib/Util ../lib/VertexAttribute ./internal/bufferWriterUtils ./internal/MaterialUtil ../shaders/ShadedColorMaterialTechnique".split(" "),
function(q,r,l,t,x,y,H,I,p,J,K,z,m,L,e,A,B,u){let Q=function(f){function d(b){b=f.call(this,b,new C)||this;b.supportsEdges=!0;b._configuration=new u.ShadedColorMaterialTechniqueConfiguration;b._vertexAttributeLocations=u.vertexAttributeLocations;return b}r._inheritsLoose(d,f);var a=d.prototype;a.getConfiguration=function(b,c){this._configuration.output=b;this._configuration.cullFace=this.parameters.cullFace;this._configuration.hasSlicePlane=this.parameters.hasSlicePlane;this._configuration.transparent=
this.parameters.transparent;this._configuration.writeDepth=this.parameters.writeDepth;this._configuration.screenSizeEnabled=this.parameters.screenSizeEnabled;this._configuration.shadingEnabled=this.parameters.shadingEnabled;this._configuration.transparencyPassType=c.transparencyPassType;this._configuration.hasMultipassTerrain=c.multipassTerrain.enabled;this._configuration.cullAboveGround=c.multipassTerrain.cullAboveGround;return this._configuration};a.intersect=function(b,c,n,k,D,E,F){if(this.parameters.screenSizeEnabled){const v=
b.vertexAttributes.get(e.VertexAttribute.OFFSET);B.intersectTriangleGeometry(b,c,k,D,E,{applyToVertex:(g,w,M,h)=>{h=l.set(G,v.data[3*h],v.data[3*h+1],v.data[3*h+2]);g=l.set(N,g,w,M);l.scale(h,h,this.parameters.screenSizeScale*k.camera.computeRenderPixelSizeAt(h));l.add(g,g,h);return[g[0],g[1],g[2]]},applyToAabb:g=>{const w=y.center(g,G);return y.scale(g,this.parameters.screenSizeScale*k.camera.computeRenderPixelSizeAt(w))}},F)}else B.intersectTriangleGeometry(b,c,k,D,E,void 0,F)};a.requiresSlot=function(b,
c){return c===p.ShaderOutput.Highlight?b===m.RenderSlot.OPAQUE_MATERIAL:c===p.ShaderOutput.Color||c===p.ShaderOutput.Alpha||c===p.ShaderOutput.ObjectAndLayerIdColor?(c=m.RenderSlot.OPAQUE_MATERIAL,this.parameters.transparent&&(c=this.parameters.writeDepth?m.RenderSlot.TRANSPARENT_MATERIAL:m.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL),b===c||b===m.RenderSlot.DRAPED_MATERIAL):!1};a.createGLMaterial=function(b){return new O(b)};a.createBufferWriter=function(){return new P(this.parameters.screenSizeEnabled)};
return d}(z.Material),O=function(f){function d(){return f.apply(this,arguments)||this}r._inheritsLoose(d,f);d.prototype.beginSlot=function(a){return this.ensureTechnique(u.ShadedColorMaterialTechnique,a)};return d}(K),C=function(f){function d(){var a=f.apply(this,arguments)||this;a.color=x.fromValues(1,1,1,1);a.shadingTint=x.fromValues(0,0,0,.25);a.shadingDirection=l.normalize(t.create(),[.5,-.5,-.5]);a.screenSizeScale=14;a.transparent=!1;a.writeDepth=!0;a.hasSlicePlane=!1;a.cullFace=J.CullFaceOptions.None;
a.screenSizeEnabled=!1;a.shadingEnabled=!0;return a}r._inheritsLoose(d,f);return d}(z.MaterialParameters),P=function(){function f(a){this.screenSizeEnabled=a;a=I.newLayout().vec3f(e.VertexAttribute.POSITION).vec3f(e.VertexAttribute.NORMAL);this.screenSizeEnabled&&a.vec3f(e.VertexAttribute.OFFSET);this.vertexBufferLayout=a}var d=f.prototype;d.allocate=function(a){return this.vertexBufferLayout.createBuffer(a)};d.elementCount=function(a){return a.indices.get(e.VertexAttribute.POSITION).length};d.write=
function(a,b,c,n,k){A.writeDefaultAttributes(c,this.vertexBufferLayout,a,b,n,k);if(this.screenSizeEnabled)if(c.vertexAttributes.has(e.VertexAttribute.OFFSET))if(a=c.vertexAttributes.get(e.VertexAttribute.OFFSET),c=c.indices.get(e.VertexAttribute.OFFSET),L.assert(3===a.size),n=n.getField(e.VertexAttribute.OFFSET,H.BufferViewVec3f))A.writePosition(c,a.data,b,n,k);else throw Error("unable to acquire view for "+e.VertexAttribute.OFFSET);else throw Error(`${e.VertexAttribute.OFFSET} vertex attribute required for screenSizeEnabled ShadedColorMaterial`);
};return f}();const G=t.create(),N=t.create();q.ShadedColorMaterial=Q;q.ShadedColorMaterialParameters=C;Object.defineProperties(q,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});