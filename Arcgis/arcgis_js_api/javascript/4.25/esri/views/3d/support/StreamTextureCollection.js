// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../core/maybe ../../../core/promiseUtils ../../../core/urlUtils ./TextureCollection ../webgl-engine/lib/basicInterfaces ../webgl-engine/lib/Texture".split(" "),function(r,m,v,n,w,p,x,y){p=function(t){function q(d,a,c,b){a=t.call(this,a,b)||this;a._streamDataRequester=d;a._parameters=c;return a}m._inheritsLoose(q,t);var u=q.prototype;u.fromUrl=function(){var d=m._asyncToGenerator(function*(a,c,b){var l=this;n.throwIfAborted(b);const z=
v.isSome(b)&&b.signal,g=this.makeUid(a,c);let e=this._textureRequests.get(g);if(!e){b=new AbortController;const k=this._streamDataRequester.request(a,"image",{uid:g,signal:b.signal});e={referenceCount:0,texture:null,textureAsync:null,abortController:b};this._textureRequests.set(g,e);e.textureAsync=k.then(function(){var h=m._asyncToGenerator(function*(f){f=l._createTexture(a,f,c);e.texture=f;e.abortController=null;l._stage.add(f);yield l._stage.load(f);return{uid:g,texture:f,release:()=>l._release(g)}});
return function(f){return h.apply(this,arguments)}}(),h=>{e.abortController=null;throw h;})}e.referenceCount++;return(new Promise((k,h)=>{n.onAbort(z,()=>{h(n.createAbortError())});e.textureAsync.then(k,h)})).catch(k=>{this._release(g);throw k;})});return function(a,c,b){return d.apply(this,arguments)}}();u._createTexture=function(d,a,c){const b={...this._parameters,powerOfTwoResizeMode:x.PowerOfTwoResizeMode.PAD};if(w.isSVG(d)){if(c||0===a.width&&0===a.height)d=a.width?a.height/a.width:1,c=c||64,
1<d?(a.width=Math.round(c/d),a.height=c):(a.width=c,a.height=Math.round(c*d));this._stage.renderView&&this._stage.renderView.renderingContext.driverTest.svgAlwaysPremultipliesAlpha&&(b.preMultiplyAlpha=!1)}b.width=a.width;b.height=a.height;return new y.Texture(a,b)};return q}(p.TextureCollection);r.StreamTextureCollection=p;Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});