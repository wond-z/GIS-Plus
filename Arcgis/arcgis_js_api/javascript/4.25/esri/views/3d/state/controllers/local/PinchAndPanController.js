// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/mathUtils ../../../../../core/maybe ../../../../../core/screenUtils ../../../../../core/Logger ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/Error ../../../../../core/has ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/vec2 ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../../../../geometry/support/axisAngle ../../../../../geometry/support/plane ../../../camera/constraintUtils ../../../camera/constraintUtils/ConstraintTypes ../../../camera/constraintUtils/InteractionType ../../../camera/constraintUtils/TiltMode ../../../input/util ../InteractiveController ../momentum/PanPlanarMomentumController ../momentum/RotationMomentumController ../momentum/ZoomPlanarMomentumController ../../utils/navigationUtils ../../../webgl-engine/lib/Camera ../../../../navigation/PanPlanarMomentumEstimator ../../../../navigation/RotationMomentumEstimator ../../../../navigation/ZoomMomentumEstimator".split(" "),
function(q,v,A,B,C,p,R,S,T,U,V,D,E,e,k,F,m,n,G,r,H,w,I,J,K,L,h,M,N,O,P){const x=k.fromValues(0,0,1);var Q=16/180*Math.PI;q.PinchAndPanController=function(y){function t(){var a=y.apply(this,arguments)||this;a._rotationValueSmooth=new w.ExponentialFalloff(.05);a._scalingValueSmooth=new w.ExponentialFalloff(.05);a._planeHorizontal=m.create();a._planeVertical=m.create();a._rotationMomentumEstimator=new O.RotationMomentumEstimator;a._panMomentumEstimator=new N.PanPlanarMomentumEstimator(300,12,.9);a._zoomMomentumEstimator=
new P.ZoomMomentumEstimator;a._beginCenter=k.create();a._tmpPoints=[];a._beginCenterScreen=p.createScreenPointArray();a._tmpCentroid3d=k.create();a._tmpCentroid2d=p.createScreenPointArray();a._tmp2d=p.createScreenPointArray();a._constraintOptions={selection:G.ConstraintTypes.ALL,interactionType:r.InteractionType.NONE,interactionFactor:0,interactionStartCamera:new M.Camera,interactionDirection:null,tiltMode:H.TiltMode.TUMBLE};return a}v._inheritsLoose(t,y);var u=t.prototype;u.begin=function(a){if(this.active){var f=
this.view.navigation.momentumEnabled;this._zoomMomentumEstimator.enabled=f;this._rotationMomentumEstimator.enabled=f;this._panMomentumEstimator.enabled=f;this._beginRadius=a.radius;this._pointerCount=a.pointers.size;this._beginAngle=a.angle;this._rotationValueSmooth.reset();this._scalingValueSmooth.reset();p.screenPointObjectToArray(a.center,this._beginCenterScreen);m.fromNormalAndOffset(x,0,this._planeHorizontal);var c=k.create();f=this._intersectionHelper.intersectScreenFreePointFallback(this._beginCenterScreen,
c);var b=k.create();e.negate(b,this.startCamera.viewForward);var d=k.create();e.copy(d,x);var g=e.dot(b,d);this._panMode=B.asinClamped(0>g?-g:g)>=Q?h.NavigationMode.Horizontal:h.NavigationMode.Vertical;m.setOffsetFromPoint(this._planeHorizontal,this._planeHorizontal,c);this.startCamera.aboveGround||m.negate(this._planeHorizontal,this._planeHorizontal);if(this._panMode===h.NavigationMode.Vertical){e.scale(d,d,g);e.subtract(this._planeVertical,b,d);e.normalize(this._planeVertical,this._planeVertical);
m.setOffsetFromPoint(this._planeVertical,this._planeVertical,c);b=k.create();d=k.create();g=k.create();e.subtract(b,c,this.currentCamera.eye);c=e.length(b);e.normalize(b,b);var l=5*Math.max(Math.abs(this.view.camera.position.z),50);const z=this.view._stage.renderView.getMinimalDepthForArea(this.view.voxelWasm,this._beginCenterScreen[0],this._beginCenterScreen[1],this.view.state.camera,80);l=C.isSome(z)?Math.min(z,l):l;l=f?Math.min(l,c):l;e.copy(g,e.add(d,this.currentCamera.eye,e.scale(d,b,l)));this._planeVertical[3]=
-e.dot(this._planeVertical,g);this._computePlanePoints(a.pointers,this._planeVertical,this.startCamera,this._tmpPoints)}else this._computePlanePoints(a.pointers,this._planeHorizontal,this.startCamera,this._tmpPoints);h.centroid(this._tmpPoints,this._beginCenter);this._constraintOptions.interactionStartCamera.copyFrom(this.startCamera)}};u.update=function(a){if(this.active){this.currentCamera.copyFrom(this.startCamera);var f=1<a.pointers.size,c=this._panMode===h.NavigationMode.Horizontal?this._planeHorizontal:
this._planeVertical,b=this._beginCenter;if(f){var d=this._beginRadius/a.radius;this._scalingValueSmooth.gain=.001875*Math.min(Math.max(a.radius,40),120);this._scalingValueSmooth.update(d);h.applyZoomToPoint(this.currentCamera,b,this._scalingValueSmooth.value,this.view.state.constraints.minimumPoiDistance);this._zoomMomentumEstimator.add(this._scalingValueSmooth.value,.001*a.timestamp);this._constraintOptions.interactionType=r.InteractionType.ZOOM;this._constraintOptions.interactionFactor=n.pixelDistanceToInteractionFactor(Math.abs(a.radius-
this._beginRadius));n.applyAll(this.view,this.currentCamera,this._constraintOptions)}this._computePlanePoints(a.pointers,c,this.currentCamera,this._tmpPoints);h.centroid(this._tmpPoints,this._tmpCentroid3d);p.screenPointObjectToArray(a.center,this._tmpCentroid2d);h.applyPanPlanar(this.currentCamera,b,this._tmpCentroid3d);this._panMomentumEstimator.add(this._tmpCentroid2d,this._tmpCentroid3d,.001*a.timestamp);this._constraintOptions.interactionType=r.InteractionType.PAN;this._constraintOptions.interactionFactor=
n.pixelDistanceToInteractionFactor(E.distance(this._beginCenterScreen,this._tmpCentroid2d));n.applyAll(this.view,this.currentCamera,this._constraintOptions);f&&(f=this._planeHorizontal,c=this._rotationValueSmooth.value,d=h.normalizeRotationDelta(a.angle-c),this._rotationValueSmooth.gain=.00125*Math.min(Math.max(a.radius,40),120),this._rotationValueSmooth.update(c+d),c=this._rotationValueSmooth.value-this._beginAngle,this._rotationMomentumEstimator.add(c,.001*a.timestamp),h.applyRotation(this.currentCamera,
b,F.wrapAxisAngle(f,c)),this._constraintOptions.interactionType=r.InteractionType.TUMBLE,this._constraintOptions.interactionFactor=n.pixelDistanceToInteractionFactor(Math.abs(a.radius*c)),n.applyAll(this.view,this.currentCamera,this._constraintOptions));this.commitCamera()}};u.end=function(a){a.pointers.size===this._pointerCount&&this.update(a);this.finishController();return(a=this._zoomMomentumEstimator.evaluateMomentum())?new L.ZoomPlanarMomentumController({view:this.view,momentum:a,zoomCenter:this._beginCenter}):
(a=this._rotationMomentumEstimator.evaluateMomentum())?new K.RotationMomentumController({view:this.view,momentum:a,center:this._beginCenter,axis:m.normal(this._planeHorizontal)}):(a=this._panMomentumEstimator.evaluateMomentum())?new J.PanPlanarMomentumController({view:this.view,momentum:a}):null};u._computePlanePoints=function(a,f,c,b){b.length=a.size;const d=this._tmp2d;let g=0;a.forEach(l=>{d[0]=l.x;d[1]=l.y;void 0===b[g]&&(b[g]=k.create());h.intersectPlaneFromScreenPointAtEye(f,c,d,b[g]);g+=1});
return b};v._createClass(t,[{key:"_intersectionHelper",get:function(){return this.view.sceneIntersectionHelper}}]);return t}(I.InteractiveController);q.PinchAndPanController=A.__decorate([D.subclass("esri.views.3d.state.controllers.local.PinchAndPanController")],q.PinchAndPanController);Object.defineProperties(q,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});