// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/Cyclical ../../../../../core/mathUtils ../../../../../core/maybe ../../../../../core/screenUtils ../../../../../core/Logger ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/Error ../../../../../core/has ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/vec2 ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../../../../geometry/projectionEllipsoid ../../../../../geometry/support/axisAngle ../../../../../geometry/support/plane ../../../../../chunks/sphere ../../../camera/constraintUtils ../../../camera/constraintUtils/ConstraintTypes ../../../camera/constraintUtils/InteractionType ../../../camera/constraintUtils/TiltMode ../../../input/util ../InteractiveController ../momentum/PanPlanarMomentumController ../momentum/PanSphericalMomentumController ../momentum/RotationMomentumController ../momentum/ZoomPlanarMomentumController ../momentum/ZoomSphericalMomentumController ../../utils/navigationUtils ../../../webgl-engine/lib/Camera ../../../../navigation/PanPlanarMomentumEstimator ../../../../navigation/PanSphericalMomentumEstimator ../../../../navigation/RotationMomentumEstimator ../../../../navigation/ZoomMomentumEstimator".split(" "),
function(p,u,B,C,D,v,g,V,W,X,Y,Z,E,t,e,k,F,w,q,G,f,H,m,I,x,J,K,L,M,N,O,d,P,Q,R,S,T){p.PinchAndPanController=function(y){function r(){var a=y.apply(this,arguments)||this;a._smoothRotation=new x.ExponentialFalloff(.05);a._rotationAxis=k.create();a._panningPlane=q.create();a._smoothScaling=new x.ExponentialFalloff(.05);a._zoomCenterScreen=g.createScreenPointArray();a._zoomMomentumEstimator=new T.ZoomMomentumEstimator;a._rotationMomentumEstimator=new S.RotationMomentumEstimator;a._panSphericalMomentumEstimator=
new R.PanSphericalMomentumEstimator;a._panPlanarMomentumEstimator=new Q.PanPlanarMomentumEstimator;a._adjustedSphere=G.create();a._tmp3d=k.create();a._tmpScreenPointArray=g.createScreenPointArray();a._beginScreenPoint=g.createScreenPointArray();a._beginScenePoint=k.create();a._screenPickPoint=g.createScreenPointArray();a._mode=d.NavigationMode.Horizontal;a._tmpInteractionDirection=k.create();a._constraintOptions={selection:H.ConstraintTypes.ALL,interactionType:m.InteractionType.NONE,interactionFactor:0,
interactionStartCamera:new P.Camera,interactionDirection:null,tiltMode:I.TiltMode.TUMBLE};return a}u._inheritsLoose(r,y);var h=r.prototype;h.begin=function(a){if(this.active){var b=this.view.navigation.momentumEnabled;this._zoomMomentumEstimator.enabled=b;this._rotationMomentumEstimator.enabled=b;this._panPlanarMomentumEstimator.enabled=b;this._panSphericalMomentumEstimator.enabled=b;this._beginHeading=-C.cyclicalPI.normalize(D.deg2rad(this.view.camera.heading));this._beginRadius=a.radius;this._pointerCount=
a.pointers.size;this._beginAngle=a.angle;this._smoothRotation.reset();g.screenPointObjectToArray(a.center,this._screenPickPoint);t.copy(this._beginScreenPoint,this._screenPickPoint);b=F.getReferenceEllipsoid(this.view.spatialReference);var c=d.pickPointAndInitSphere(this._intersectionHelper,this.startCamera,this._screenPickPoint,b,d.SpherePickPointFallback.Silhouette);v.isNone(c.scenePickPoint)||(this._scenePickPoint=c.scenePickPoint,this._sphere=c.sphere,e.copy(this._beginScenePoint,this._scenePickPoint),
this._mode=d.decideNavigationMode(this.startCamera,this._screenPickPoint,c.hasGeometryIntersection,b),this._mode===d.NavigationMode.Vertical&&this._preparePlanarPanMode(a),this._constraintOptions.interactionStartCamera.copyFrom(this.startCamera))}};h.update=function(a){if(this.active){this.currentCamera.copyFrom(this.startCamera);var b=1<a.pointers.size;this._mode===d.NavigationMode.Horizontal?(b&&this._zoomSpherical(a),this._panningSpherical(a),b&&this._rotateSpherical(a)):(b&&this._zoomPlanar(a),
this._panningPlanar(a),b&&this._rotatePlanar(a));this.commitCamera()}};h.end=function(a){a.pointers.size===this._pointerCount&&this.update(a);this.finishController();if(a=this._zoomMomentumEstimator.evaluateMomentum())return this._mode===d.NavigationMode.Horizontal?new O.ZoomSphericalMomentumController({view:this.view,momentum:a,screenCenter:this._zoomCenterScreen,sceneCenter:this._beginScenePoint,radius:this._sphere[3]}):new N.ZoomPlanarMomentumController({view:this.view,momentum:a,zoomCenter:this._beginScenePoint});
if(a=this._rotationMomentumEstimator.evaluateMomentum())return new M.RotationMomentumController({view:this.view,momentum:a,center:this._sphere,axis:this._rotationAxis});if(this._mode===d.NavigationMode.Horizontal){if(a=this._panSphericalMomentumEstimator.evaluateMomentum())return new L.PanSphericalMomentumController({view:this.view,momentum:a})}else if(a=this._panPlanarMomentumEstimator.evaluateMomentum())return new K.PanPlanarMomentumController({view:this.view,momentum:a});return null};h._preparePlanarPanMode=
function(a){var b=e.negate(this._tmp3d,this.startCamera.viewForward);q.fromPositionAndNormal(this._scenePickPoint,b,this._panningPlane);var c=g.createScreenPointArray(this._screenPickPoint[0],0);b=k.create();var n=e.length(this.startCamera.eye);this._adjustedSphere[3]=n<this._sphere[3]?n-100:this._sphere[3];d.sphereOrPlanePointFromScreenPoint(this._adjustedSphere,this.startCamera,c,b);c=g.createRenderScreenPointArray3();this.startCamera.projectToRenderScreen(b,c);this._screenPickPoint[1]=Math.min(this._screenPickPoint[1],
.9*c[1]);(b=this._intersectionHelper.intersectScreen(this._screenPickPoint,this._scenePickPoint))&&q.fromPositionAndNormal(this._scenePickPoint,q.normal(this._panningPlane),this._panningPlane);c=k.create();n=k.create();const z=k.create();e.subtract(c,this._scenePickPoint,this.currentCamera.eye);const U=e.length(c);e.normalize(c,c);var l=5*Math.max(Math.abs(this.view.camera.position.z),50);const A=this.view._stage.renderView.getMinimalDepthForArea(null,this._screenPickPoint[0],this._screenPickPoint[1],
this.view.state.camera,80);l=v.isSome(A)?Math.min(A,l):l;l=b?Math.min(l,U):l;e.copy(z,e.add(n,this.currentCamera.eye,e.scale(n,c,l)));this._panningPlane[3]=-e.dot(this._panningPlane,z);this.startCamera.center=e.add(n,this.startCamera.eye,e.scale(n,this.startCamera.viewForward,l));a=g.screenPointObjectToArray(a.center,this._tmpScreenPointArray);d.intersectPlaneFromScreenPointAtEye(this._panningPlane,this.startCamera,a,this._beginScenePoint)};h._zoomSpherical=function(a){const b=this._beginRadius/a.radius;
this._smoothScaling.gain=.001875*Math.min(Math.max(a.radius,40),120);this._smoothScaling.update(b);d.applyZoomOnSphere(this._sphere,this.currentCamera,this._smoothScaling.value);g.screenPointObjectToArray(a.center,this._zoomCenterScreen);this._zoomMomentumEstimator.add(this._smoothScaling.value,.001*a.timestamp);this._constraintOptions.interactionType=m.InteractionType.ZOOM;this._constraintOptions.interactionFactor=f.pixelDistanceToInteractionFactor(a.radius-this._beginRadius);f.applyAll(this.view,
this.currentCamera,this._constraintOptions)};h._panningSpherical=function(a){const b=g.screenPointObjectToArray(a.center,this._tmpScreenPointArray);d.sphereOrPlanePointFromScreenPoint(this._sphere,this.currentCamera,b,this._tmp3d);d.preserveHeadingThreshold(this._beginScenePoint,e.dot(this.currentCamera.up,this._beginScenePoint),this._sphere[3],this._beginHeading,this.view.camera.tilt,this.startCamera)?(d.applyPanSphericalPreserveHeading(this._sphere,this.currentCamera,this._beginScenePoint,this._tmp3d,
this._beginHeading,this.view.camera.tilt,!1),this._panSphericalMomentumEstimator.addMomentumPreserveHeading(b,this._tmp3d,.001*a.timestamp,this.startCamera,this._sphere,this._beginHeading,this.view.camera.tilt)):(d.applyPanSphericalDirectRotation(this._sphere,this.currentCamera,this._beginScenePoint,this._tmp3d,this.view.camera.tilt,!1),this._panSphericalMomentumEstimator.addMomentumDirectRotation(b,this._tmp3d,.001*a.timestamp,this.startCamera,this._sphere[3],this.view.camera.tilt));this._constraintOptions.interactionType=
m.InteractionType.PAN;this._constraintOptions.interactionFactor=f.pixelDistanceToInteractionFactor(t.distance(this._screenPickPoint,b));f.applyAll(this.view,this.currentCamera,this._constraintOptions)};h._rotateSpherical=function(a){e.normalize(this._rotationAxis,this._scenePickPoint);this.currentCamera.aboveGround||e.negate(this._rotationAxis,this._rotationAxis);var b=this._smoothRotation.value,c=d.normalizeRotationDelta(a.angle-b);b+=c;this._smoothRotation.gain=.00125*Math.min(Math.max(a.radius,
40),120);this._smoothRotation.update(b);c=this._smoothRotation.value-this._beginAngle;this._rotationMomentumEstimator.add(c,.001*a.timestamp);d.applyRotation(this.currentCamera,this._sphere,w.wrapAxisAngle(this._rotationAxis,c));this._constraintOptions.interactionType=m.InteractionType.TUMBLE;this._constraintOptions.interactionFactor=f.pixelDistanceToInteractionFactor(a.radius*b);f.applyAll(this.view,this.currentCamera,this._constraintOptions)};h._panningPlanar=function(a){const b=g.screenPointObjectToArray(a.center,
this._tmpScreenPointArray);d.intersectPlaneFromScreenPointAtEye(this._panningPlane,this.currentCamera,b,this._tmp3d)&&(d.applyPanPlanar(this.currentCamera,this._beginScenePoint,this._tmp3d),this._panPlanarMomentumEstimator.add(b,this._tmp3d,.001*a.timestamp),this._constraintOptions.interactionType=m.InteractionType.PAN,this._constraintOptions.interactionFactor=f.pixelDistanceToInteractionFactor(t.distance(this._beginScreenPoint,b)),this._constraintOptions.interactionDirection=this.view.renderCoordsHelper.worldUpAtPosition(this.currentCamera.eye,
this._tmpInteractionDirection),f.applyAll(this.view,this.currentCamera,this._constraintOptions),this._constraintOptions.interactionDirection=null)};h._zoomPlanar=function(a){const b=this._beginRadius/a.radius;this._smoothScaling.gain=.001875*Math.min(Math.max(a.radius,40),120);this._smoothScaling.update(b);this._zoomMomentumEstimator.add(this._smoothScaling.value,.001*a.timestamp);d.applyZoomToPoint(this.currentCamera,this._beginScenePoint,this._smoothScaling.value,this.view.state.constraints.minimumPoiDistance);
this._constraintOptions.interactionType=m.InteractionType.ZOOM;this._constraintOptions.interactionFactor=f.pixelDistanceToInteractionFactor(a.radius-this._beginRadius);f.applyAll(this.view,this.currentCamera,this._constraintOptions)};h._rotatePlanar=function(a){e.copy(this._rotationAxis,this._beginScenePoint);this.currentCamera.aboveGround||e.negate(this._rotationAxis,this._rotationAxis);var b=this._smoothRotation.value;let c=a.angle-b;c=d.normalizeRotationDelta(c);this._smoothRotation.gain=.00125*
Math.min(Math.max(a.radius,40),120);this._smoothRotation.update(b+c);b=this._smoothRotation.value-this._beginAngle;this._rotationMomentumEstimator.add(b,.001*a.timestamp);d.applyRotation(this.currentCamera,this._sphere,w.wrapAxisAngle(this._rotationAxis,b));this._constraintOptions.interactionType=m.InteractionType.TUMBLE;this._constraintOptions.interactionFactor=f.pixelDistanceToInteractionFactor(a.radius*b);f.applyAll(this.view,this.currentCamera,this._constraintOptions)};u._createClass(r,[{key:"_intersectionHelper",
get:function(){return this.view.sceneIntersectionHelper}}]);return r}(J.InteractiveController);p.PinchAndPanController=B.__decorate([E.subclass("esri.views.3d.state.controllers.global.PinchAndPanController")],p.PinchAndPanController);Object.defineProperties(p,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});