// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/mathUtils ../../../../../core/maybe ../../../../../core/screenUtils ../../../../../core/Logger ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/Error ../../../../../core/has ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/vec2 ../../../../../chunks/vec2f64 ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../../../../geometry/projectionEllipsoid ../../../../../geometry/support/axisAngle ../../../../../chunks/sphere ../../../camera/constraintUtils ../../../camera/constraintUtils/ConstraintTypes ../../../camera/constraintUtils/InteractionType ../../../camera/constraintUtils/surfaceCollision ../../../camera/constraintUtils/TiltMode ../InteractiveController ../../utils/navigationUtils ../../../support/geometryUtils/ray ../../../webgl-engine/lib/verticalOffsetUtils".split(" "),
function(k,q,x,y,n,z,L,M,N,O,P,A,r,t,c,g,B,u,C,v,D,E,F,G,H,e,I,J){k.ZoomController=function(w){function l(){var a=w.apply(this,arguments)||this;a._pickPoint=g.create();a._tmpP0=t.create();a._panAxisAngle=u.create();a._tmpRayDir=g.create();a._tmpRayDirPick=g.create();a._targetOnSphere=g.create();a._tmpRay={origin:g.create(),direction:g.create()};a.dragBeginPoint=z.createScreenPointArray();a._normalizedAnchorPoint=t.create();a._constraintOptions={selection:D.ConstraintTypes.ALL_EXCEPT_COLLISION,interactionType:E.InteractionType.ZOOM,
interactionFactor:0,interactionStartCamera:null,interactionDirection:null,tiltMode:G.TiltMode.TUMBLE};a._sphere=C.create();a._hasPickPoint=!1;return a}q._inheritsLoose(l,w);var p=l.prototype;p.begin=function(a){if(this.active){r.copy(this.dragBeginPoint,a);e.normalizeCoordinate(this.startCamera,a,this._normalizedAnchorPoint);var b=B.getReferenceEllipsoid(this.view.spatialReference),d=e.pickPointAndInitSphere(this._intersectionHelper,this.startCamera,a,b,e.SpherePickPointFallback.Ellipsoid,0===this.view.map.ground.opacity?
K:{});this._navMode=e.decideNavigationMode(this.startCamera,a,d.hasGeometryIntersection,b);if(this._navMode===e.NavigationMode.Horizontal)this._hasPickPoint=!!d.scenePickPoint,this._pickPoint=n.unwrapOr(d.scenePickPoint,this._pickPoint),this._sphere=d.sphere;else{I.fromScreenAtEye(this.startCamera,a,this._tmpRay);c.normalize(this._tmpRay.direction,this._tmpRay.direction);let f,h;n.isSome(d.scenePickPoint)&&(c.subtract(this._tmpRayDirPick,this.startCamera.eye,d.scenePickPoint),h=c.length(this._tmpRayDirPick));
this.view.camera.position.hasZ&&(f=Math.abs(this.view.camera.position.z));b=y.clamp(e.PIVOT_DISTANCE_MODIFIER*f,e.DISTANCE_CLAMP_VALUES[0],e.DISTANCE_CLAMP_VALUES[1]);a=this.view._stage.renderView.getMinimalDepthForArea(null,a[0],a[1],this.view.state.camera,e.SCREEN_PIXEL_AREA);b=n.isSome(a)?Math.min(b,a):b;b=d.scenePickPoint?Math.min(b,h):b;this._hasPickPoint=!0;c.scale(this._tmpRay.direction,this._tmpRay.direction,b);c.add(this._pickPoint,this._tmpRay.origin,this._tmpRay.direction)}this._constraintOptions.interactionStartCamera=
this.startCamera}};p.update=function(a){if(this.active){this.currentCamera.eye=this.startCamera.eye;this.currentCamera.center=this.startCamera.center;this.currentCamera.up=this.startCamera.up;if(this._navMode===e.NavigationMode.Horizontal){c.subtract(this._tmpRayDir,this.currentCamera.center,this.currentCamera.eye);var b=c.length(this._tmpRayDir);e.normalizeCoordinate(this.currentCamera,a,this._tmpP0);var d=12*(this._normalizedAnchorPoint[1]-this._tmpP0[1]),f=b*2**d;const h=this.view.state.constraints.minimumPoiDistance;
0>d&&f<h&&(f=h);if(1E-6>Math.abs(b-f))return;this._hasPickPoint&&f<b&&(d=1-(1-f/b)*(1-this._sphere[3]/c.length(this.currentCamera.center)),this.currentCamera.center=c.scale(m,this.currentCamera.center,d));c.scale(this._tmpRayDir,this._tmpRayDir,-f/b);this.currentCamera.eye=c.add(m,this.currentCamera.center,this._tmpRayDir);this._constraintOptions.interactionFactor=v.pixelDistanceToInteractionFactor(r.distance(this.dragBeginPoint,a));v.applyAll(this.view,this.currentCamera,this._constraintOptions);
this._hasPickPoint&&(e.sphereOrPlanePointFromScreenPoint(this._sphere,this.currentCamera,this.dragBeginPoint,this._targetOnSphere),u.fromPoints(this._pickPoint,this._targetOnSphere,this._panAxisAngle),e.applyRotation(this.currentCamera,this._sphere,this._panAxisAngle))}else{b=c.length(this._tmpRay.direction);e.normalizeCoordinate(this.currentCamera,a,this._tmpP0);a=12*(this._normalizedAnchorPoint[1]-this._tmpP0[1]);f=b*2**a;d=this.view.state.constraints.minimumPoiDistance;0>a&&f<d&&(f=d);if(1E-6>
Math.abs(b-f))return;c.scale(this._tmpRayDir,this._tmpRay.direction,1-f/b);this.currentCamera.eye=c.add(m,this.currentCamera.eye,this._tmpRayDir);this.currentCamera.center=c.add(m,this.currentCamera.center,this._tmpRayDir)}F.applySurfaceCollisionConstraint(this.view,this.currentCamera);this.commitCamera()}};p.end=function(){this.active&&this.finishController()};q._createClass(l,[{key:"_intersectionHelper",get:function(){return this.view.sceneIntersectionHelper}}]);return l}(H.InteractiveController);
k.ZoomController=x.__decorate([A.subclass("esri.views.3d.state.controllers.global.ZoomController")],k.ZoomController);const m=g.create(),K={exclude:new Set([J.TERRAIN_ID])};Object.defineProperties(k,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});