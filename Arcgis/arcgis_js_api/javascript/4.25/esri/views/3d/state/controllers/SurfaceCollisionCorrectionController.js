// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Handles ../../../../core/maybe ../../../../core/accessorSupport/decorators/property ../../../../core/arrayUtils ../../../../core/accessorSupport/ensureType ../../../../core/accessorSupport/decorators/subclass ../../camera/intersectionUtils ../../camera/constraintUtils/surfaceCollision ./CameraController".split(" "),function(b,f,g,l,m,n,r,t,p,q,h,e){b.SurfaceCollisionCorrectionController=function(k){function d(a){a=
k.call(this,a)||this;a._handles=new l;return a}f._inheritsLoose(d,k);var c=d.prototype;c.onControllerStart=function(){this.state=e.State.Running;this._handles.add(this.view.basemapTerrain.on("elevation-change",a=>this._handleElevationChangeEvent(a)));this._applyCorrection()};c.onControllerEnd=function(){this._handles.removeAll()};c.stepController=function(){};c._handleElevationChangeEvent=function(a){m.isSome(a.spatialReference)&&!q.eyeWithinExtent(this.view,this.desiredCamera,a.extent,a.spatialReference)||
this._applyCorrection()};c._applyCorrection=function(){this.view.state.updateCamera(a=>{a.copyViewFrom(this.desiredCamera);h.applySurfaceCollisionConstraint(this.view,a,h.Mode.EYE_AND_CENTER)||this.constraintEnabled||(this.state=e.State.Stopped)})};f._createClass(d,[{key:"desiredCamera",set:function(a){this._set("desiredCamera",a.clone())}},{key:"canStop",get:function(){return!0}},{key:"constraintEnabled",get:function(){return this.view.state.constraints.collision.enabled}}]);return d}(e.CameraController);
g.__decorate([n.property({constructOnly:!0})],b.SurfaceCollisionCorrectionController.prototype,"desiredCamera",null);b.SurfaceCollisionCorrectionController=g.__decorate([p.subclass("esri.views.3d.state.controllers.SurfaceCollisionCorrectionController")],b.SurfaceCollisionCorrectionController);Object.defineProperties(b,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});