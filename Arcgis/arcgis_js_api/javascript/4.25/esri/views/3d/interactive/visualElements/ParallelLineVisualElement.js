// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/Handles ../../../../core/maybe ../../../../core/reactiveUtils ../../../../core/screenUtils ../../../../chunks/vec2 ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../chunks/vec4 ../../../../chunks/vec4f32 ./Object3DVisualElement ../../webgl-engine/lib/GeometryUtil ../../webgl-engine/lib/Material ../../webgl-engine/lib/VertexAttribute ../../webgl-engine/materials/RibbonLineMaterial".split(" "),function(x,y,E,
r,F,p,c,f,g,z,G,w,A,H,I,J){w=function(B){function t(a){var b=B.call(this,a)||this;b._handles=new E;b._location=g.create();b._direction=g.fromValues(1,0,0);b._width=1;b._offset=1;b._length=18;b._color=G.fromValues(1,0,1,1);b._renderOccluded=H.RenderOccludedFlag.OccludeAndTransparent;b.applyProps(a);return b}y._inheritsLoose(t,B);var e=t.prototype;e.setDirectionFromPoints=function(a,b){f.normalize(this._direction,f.subtract(this._direction,b,a));this._updateGeometry()};e.createExternalResources=function(){const a=
new J.RibbonLineMaterial(this.materialParameters);this._handles.add(F.watch(()=>this.view.state.camera,()=>{this._updateGeometry()}));this._externalResources={material:a}};e.destroyExternalResources=function(){this._handles.removeAll();this._externalResources=null};e.createGeometries=function(a){const b=A.createPolylineGeometry([g.create(),g.create()]),k=A.createPolylineGeometry([g.create(),g.create()]),h=r.unwrap(this._externalResources).material;a.addGeometry(b,h);a.addGeometry(k,h);this._updateVertices(a)};
e.forEachExternalMaterial=function(a){r.isSome(this._externalResources)&&a(this._externalResources.material)};e._updateMaterial=function(){r.isNone(this._externalResources)||this._externalResources.material.setParameters(this.materialParameters)};e._updateGeometry=function(){const a=this.object;r.isNone(a)||this._updateVertices(a)};e._updateVertices=function(a){const b=this.view.state.camera;b.projectToScreen(this.location,u);f.add(d,this.location,this.direction);b.projectToScreen(d,l);c.normalize(l,
c.subtract(l,l,u));this._updateVertexAttributes(b,a,0,u,l,1);this._updateVertexAttributes(b,a,1,u,l,-1)};e._updateVertexAttributes=function(a,b,k,h,m,q){k=b.geometryRecords[k];const n=k.geometry.getMutableAttribute(I.VertexAttribute.POSITION).data;q=c.scale(C,c.set(C,m[1]*q,m[0]*-q),this.offset+this.width/2);h=c.add(v,c.add(v,c.add(v,h,c.scale(v,m,this.length/2)),q),q);m=c.add(D,h,c.scale(D,m,-this.length));a.unprojectFromScreen(h,d);n[0]=d[0];n[1]=d[1];n[2]=d[2];a.unprojectFromScreen(m,d);n[3]=d[0];
n[4]=d[1];n[5]=d[2];b.geometryVertexAttrsUpdated(k)};y._createClass(t,[{key:"location",get:function(){return this._location},set:function(a){f.exactEquals(this._location,a)||(f.copy(this._location,a),this._updateGeometry())}},{key:"direction",get:function(){return this._direction},set:function(a){f.exactEquals(this._direction,a)||(f.copy(this._direction,a),this._updateGeometry())}},{key:"width",get:function(){return this._width},set:function(a){a!==this._width&&(this._width=a,this._updateMaterial())}},
{key:"offset",get:function(){return this._offset},set:function(a){a!==this._offset&&(this._offset=a,this._updateGeometry())}},{key:"length",get:function(){return this._length},set:function(a){a!==this._length&&(this._length=a,this._updateGeometry())}},{key:"color",get:function(){return this._color},set:function(a){z.exactEquals(a,this._color)||(z.copy(this._color,a),this._updateMaterial())}},{key:"renderOccluded",get:function(){return this._renderOccluded},set:function(a){a!==this._renderOccluded&&
(this._renderOccluded=a,this._updateMaterial())}},{key:"materialParameters",get:function(){return{width:this._width,color:this._color,renderOccluded:this._renderOccluded}}}]);return t}(w.Object3DVisualElement);const d=g.create(),u=p.createScreenPointArray(),l=p.createScreenPointArray(),C=p.createScreenPointArray(),v=p.createScreenPointArray(),D=p.createScreenPointArray();x.ParallelLineVisualElement=w;Object.defineProperties(x,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});