// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/has ../../../../core/mathUtils ../../../../core/maybe ./enums ../../webgl-engine/core/material/RenderTexture ../../webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl ../../webgl-engine/core/shaderLibrary/util/AlphaCutoff ../../webgl-engine/core/shaderLibrary/util/EllipsoidMode ../../webgl-engine/lib/basicInterfaces ../../webgl-engine/lib/Texture ../../../webgl/enums".split(" "),function(q,F,x,n,d,v,z,A,G,m,r,y){function B(a){return a.sort((b,
c)=>b.encoding-c.encoding)}function w(a,b,c){if(n.isNone(a)||c===d.TextureUsage.None)return null;for(let f=0;f<a.length;f++){const e=a[f];if(n.isSome(e)&&0!==(e.usage&c))return a=b[f],n.isSome(a)?a.id:null}return null}function H(a){switch(a){case d.TextureEncoding.KTX2:return r.Texture.KTX2_ENCODING;case d.TextureEncoding.Basis:return r.Texture.BASIS_ENCODING;case d.TextureEncoding.DDS_S3TC:return r.Texture.DDS_ENCODING;case d.TextureEncoding.PNG:return"image/png";case d.TextureEncoding.JPG:return"image/jpeg";
case d.TextureEncoding.KTX_ETC2:return"image/ktx";default:return""}}const I={ktx2:d.TextureEncoding.KTX2,basis:d.TextureEncoding.Basis,dds:d.TextureEncoding.DDS_S3TC,png:d.TextureEncoding.PNG,jpg:d.TextureEncoding.JPG,"ktx-etc2":d.TextureEncoding.KTX_ETC2},C={[r.Texture.KTX2_ENCODING]:d.TextureEncoding.Basis,[r.Texture.BASIS_ENCODING]:d.TextureEncoding.Basis,[r.Texture.DDS_ENCODING]:d.TextureEncoding.DDS_S3TC,"image/png":d.TextureEncoding.PNG,"image/jpg":d.TextureEncoding.JPG,"image/jpeg":d.TextureEncoding.JPG,
"image/ktx":d.TextureEncoding.KTX_ETC2},D=()=>({alphaMode:"opaque",alphaCutoff:A.defaultMaskAlphaCutoff,doubleSided:!0,cullFace:m.CullFaceOptions.None,normalTextureId:-1,emissiveTextureId:-1,occlusionTextureId:-1,emissiveFactor:[0,0,0],metallicRoughness:{baseColorFactor:[.8,.8,.8,1],baseColorTextureId:-1,metallicRoughnessTextureId:-1,metallicFactor:0,roughnessFactor:.6},wrapTextures:!1,hasParametersFromSource:!0}),J={s:y.TextureWrapMode.CLAMP_TO_EDGE,t:y.TextureWrapMode.CLAMP_TO_EDGE},K={s:y.TextureWrapMode.REPEAT,
t:y.TextureWrapMode.REPEAT};q.configureMaterial=function(a,b,c,f,e,h){const g=h.rendererTextureUsage;var k=b.metallicRoughness.baseColorFactor,l=x.clamp(b.metallicRoughness.baseColorFactor[3],0,1);a.baseColor=[k[0],k[1],k[2],l];a.hasParametersFromSource=!!b.hasParametersFromSource;a.usePBR=h.usePBR;a.mrrFactors=[b.metallicRoughness.metallicFactor,b.metallicRoughness.roughnessFactor,b.hasParametersFromSource?.2:.5];a.emissiveFactor=b.emissiveFactor;a.isIntegratedMesh=h.isIntegratedMesh;a.textureAlphaCutoff=
"mask"===b.alphaMode?b.alphaCutoff:A.defaultMaskAlphaCutoff;a.alphaDiscardMode="opaque"===b.alphaMode?m.AlphaDiscardMode.Opaque:"mask"===b.alphaMode?m.AlphaDiscardMode.Mask:m.AlphaDiscardMode.MaskBlend;k=[];l=w(f,c,(d.TextureUsage.Color|d.TextureUsage.AlphaMask)&g);n.isSome(l)&&(a.baseColorTexture=new v.RenderTexture(e,l),k.push(a.baseColorTexture.loadPromise));l=w(f,c,d.TextureUsage.MetallicRoughness&g);n.isSome(l)&&(a.metallicRoughnessTexture=new v.RenderTexture(e,l),k.push(a.metallicRoughnessTexture.loadPromise));
l=w(f,c,d.TextureUsage.Emissive&g);n.isSome(l)&&(a.emissionTexture=new v.RenderTexture(e,l),k.push(a.emissionTexture.loadPromise));l=w(f,c,d.TextureUsage.Occlusion&g);n.isSome(l)&&(a.occlusionTexture=new v.RenderTexture(e,l),k.push(a.occlusionTexture.loadPromise));c=w(f,c,d.TextureUsage.Normal&g);n.isSome(c)&&(a.normalTexture=new v.RenderTexture(e,c),k.push(a.normalTexture.loadPromise));a.commonMaterialParameters.hasSlicePlane=h.slicePlaneEnabled;a.commonMaterialParameters.doubleSided=b.doubleSided;
a.commonMaterialParameters.cullFace=b.cullFace;a.ellipsoidMode=G.getEllipsoidMode(h.viewSpatialReference);return Promise.all(k)};q.createTexture=function(a,b,c,f){if(n.isNone(a)||null==a.data)return null;const e=a.data;var h=!(e instanceof HTMLImageElement)||x.isPowerOfTwo(e.width)&&x.isPowerOfTwo(e.height),g=f.renderingContext.parameters.maxMaxAnisotropy;f=c&&!f.capabilities.shaderTextureLOD?1:g;h=h&&!a.downsampled&&1<f;c=c||!b.wrapTextures?J:K;g=H(a.encoding);return new r.Texture(e,{mipmap:h,maxAnisotropy:f,
encoding:g,wrap:c,components:a.usage&d.TextureUsage.Color?"opaque"===b.alphaMode?3:4:3,noUnpackFlip:!0})};q.defaultMaterial=D;q.getMaterialAndTextures=function(a,b){const c=new Map,f=(p,u)=>{if(n.isNone(p))return-1;if(c.has(p.id))return p=c.get(p.id),p.usage|=u,p.id;const t=c.size;c.set(p.id,{id:t,usage:u});return t};var e=b.pbrMetallicRoughness;const h=e&&e.baseColorFactor,g=b.emissiveFactor,k=null==b.normalTexture&&null==b.emissiveTexture&&null==b.occlusionTexture&&(e?null==e.metallicRoughnessTexture&&
1===e.roughnessFactor&&(1===e.metallicFactor||0===e.metallicFactor):!0),l=k?z.PBRSchematicMRRValues[0]:e?e.metallicFactor:1,L=k?z.PBRSchematicMRRValues[1]:e?e.roughnessFactor:1;e={baseColorFactor:h?[h[0],h[1],h[2],h[3]]:[1,1,1,1],baseColorTextureId:f(e&&e.baseColorTexture,"mask"===b.alphaMode?d.TextureUsage.Color|d.TextureUsage.AlphaMask:d.TextureUsage.Color),metallicRoughnessTextureId:f(e&&e.metallicRoughnessTexture,d.TextureUsage.MetallicRoughness),metallicFactor:l,roughnessFactor:L};b={alphaMode:b.alphaMode,
alphaCutoff:b.alphaCutoff,doubleSided:b.doubleSided,cullFace:"none"===b.cullFace?m.CullFaceOptions.None:"back"===b.cullFace?m.CullFaceOptions.Back:"front"===b.cullFace?m.CullFaceOptions.Front:void 0,normalTextureId:f(b.normalTexture,d.TextureUsage.Normal),emissiveTextureId:f(b.emissiveTexture,d.TextureUsage.Emissive),occlusionTextureId:f(b.occlusionTexture,d.TextureUsage.Occlusion),emissiveFactor:g?[g[0],g[1],g[2]]:[0,0,0],metallicRoughness:e,wrapTextures:!1,hasParametersFromSource:k};const E=[];
c.forEach(({usage:p},u)=>{var t=n.isSome(a)&&a[u]&&a[u].formats;t=t?B(t.map(({name:M,format:N})=>({name:M,encoding:I[N]}))):[];E.push({id:u,usage:p,encodings:t})});return{material:b,textures:E}};q.getMaterialAndTexturesFromShared=function(a){var b=a&&a.materialDefinitions?Object.keys(a.materialDefinitions)[0]:null,c=a&&a.textureDefinitions?Object.keys(a.textureDefinitions)[0]:null;b=b&&a.materialDefinitions[b];c=c&&a.textureDefinitions[c];a=D();if(null!=b){b=b.params;b.diffuse&&(a.metallicRoughness.baseColorFactor=
[b.diffuse[0],b.diffuse[1],b.diffuse[2],1]);null!=b.doubleSided&&(a.doubleSided=b.doubleSided,a.cullFace=b.doubleSided?m.CullFaceOptions.None:m.CullFaceOptions.Back);if("none"===b.cullFace||"front"===b.cullFace||"back"===b.cullFace)a.cullFace="none"===b.cullFace?m.CullFaceOptions.None:"back"===b.cullFace?m.CullFaceOptions.Back:m.CullFaceOptions.Front;b.transparency&&(a.metallicRoughness.baseColorFactor[3]=x.clamp(1-b.transparency,0,1));if(b.useVertexColorAlpha||1>a.metallicRoughness.baseColorFactor[3])a.alphaMode=
"blend"}b=[];if(null!=c){!c.wrap||"repeat"!==c.wrap[0]&&"repeat"!==c.wrap[1]||(a.wrapTextures=!0);let f=d.TextureUsage.Color;"rgba"===c.channels&&(a.alphaMode="blend",f|=d.TextureUsage.AlphaMask);const e=c.images[c.images.length-1],h=g=>g&&g.split("/").pop();c=Array.isArray(c.encoding)?B(c.encoding.map((g,k)=>({name:h(e.href[k]),encoding:C[g]||0}))):[{name:h(e.href),encoding:C[c.encoding]||0}];b.push({id:0,usage:f,encodings:c});a.metallicRoughness.baseColorTextureId=0}return{material:a,textures:b}};
q.getSupportedEncodings=function(a){const b=!!a.compressedTextureS3TC;a=!!a.compressedTextureETC;const c=F("disable-feature:i3s-basis")?0:d.TextureEncoding.Basis|d.TextureEncoding.KTX2,f=c|d.TextureEncoding.DDS_S3TC;return d.TextureEncoding.JPG|d.TextureEncoding.PNG|(b?f:0)|(a?c:0)};q.selectEncoding=function(a,b){return a.find(c=>0!==(c.encoding&b))};Object.defineProperties(q,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});