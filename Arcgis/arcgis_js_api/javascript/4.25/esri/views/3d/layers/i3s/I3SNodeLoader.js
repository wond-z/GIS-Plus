// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/asyncUtils ../../../../core/has ../../../../core/lang ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/urlUtils ./enums ./I3SBinaryReader ./I3SMaterialUtil".split(" "),function(C,q,D,E,v,y,z,w,A,x){return function(){function r(b,a,d,c,e,f){this._streamDataController=a;this._logger=d;this._defaultGeometrySchema=c;this._requiredAttributes=e;this._options=f;this._logLayer=b;this._layerUrl=b.parsedUrl.path;this._geometryDefinitions=
b.geometryDefinitions;if(b.materialDefinitions){const g=b.textureSetDefinitions;this._materialAndTextures=b.materialDefinitions.map(h=>x.getMaterialAndTextures(g,h))}}var k=r.prototype;k._load=function(b,a,d){return this._streamDataController.request(b,a,d)};k._loadAttribute=function(b,a,d){return this._load(`${this._layerUrl}/nodes/${b.resources.attributes}/attributes/${a.key}/0`,"binary",d).then(c=>A.readBinaryAttribute(a,c))};k.loadAttributes=function(b,a,d){return y.eachAlways(a.map(c=>this._loadAttribute(b,
c.attributeStorageInfo,d))).then(c=>{const e={};for(let f=0;f<a.length;++f){const g=c[f].value;if(g)e[a[f].name]=g;else{if(y.isAbortError(c[f].error))throw c[f].error;this._logger.error("#loadAttributes",this._logLayer,`Failed to load attributeData for '${a[f].name}' on node '${b.id}'`,c[f].error)}}return e})};k.loadNodeData=function(){var b=C._asyncToGenerator(function*(a,d){var c=null!=this._requiredAttributes&&a.resources.attributes?q.result(this.loadAttributes(a,this._requiredAttributes,d)):null;
var e=this._geometryDefinitions;var f={bufferDefinition:null,bufferIndex:0};if(!(null==e||0>a.resources.geometryDefinition)&&(e=0<=a.resources.geometryDefinition?e[a.resources.geometryDefinition].geometryBuffers:null,null!=e))for(var g=0;g<e.length;g++){var h=e[g];if(null!=h.compressedAttributes){if("draco"===h.compressedAttributes.encoding&&!D("disable-feature:i3s-draco")){f.bufferIndex=g;f.bufferDefinition=h;break}}else f.bufferIndex=g,f.bufferDefinition=e[g]}const {bufferDefinition:p,bufferIndex:u}=
f;g=(h=!!a.resources.geometry)?q.result(this._loadGeometry(a.resources.geometry,u,d)):null;e=a.resources.hasSharedResource?yield this._loadShared(a,d):null;var l=(f=this._materialAndTextures&&0<=a.resources.materialDefinition?this._materialAndTextures[a.resources.materialDefinition]:null!=e?x.getMaterialAndTexturesFromShared(e):null)&&f.material;f=f&&f.textures;const F=`${a.id}`,B=!h&&this._options.loadFeatureData;h=B?yield this._loadFeatureData(F,d):null;if(B)a:{for(m of h.featureData)if(l=m.geometries,
null!=l)for(var n of l){var m={featureIds:[m.id],featureDataPosition:m.position,geometries:[n]};break a}m=null}else m={featureIds:[],geometries:[{type:"ArrayBufferView",params:{material:l}}],featureDataPosition:[0,0,0]};if(n=v.isNone(m)){n=[];for(var t of h.featureData)null!=t.position&&n.push({featureIds:[t.id],featureDataPosition:t.position,geometries:null})}t=n;n=null!=f&&0<f.length?q.result(this.loadTextures(a,f,d)):null;d=a=null;g&&(a=q.assertResult(yield g),(d=this._defaultGeometrySchema)&&
e&&e.materialDefinitions&&(g=Object.keys(e.materialDefinitions)[0],!e.materialDefinitions[g].params.vertexRegions&&d.vertexAttributes.region&&(d=E.clone(d),delete d.vertexAttributes.region)),d=A.createGeometryDescriptor(p,d));e=n?q.assertResult(yield n):null;c=(c=c?q.assertResult(yield c):{})?{attributeData:c,loadedAttributes:this._requiredAttributes}:null;if(v.isSome(m))return{geometryData:m,attributeDataInfo:c,geometryBuffer:a,geometryDescriptor:d,requiredTextures:f,textureData:e};if(v.isSome(t))return{pointData:t,
attributeDataInfo:c,geometryBuffer:a,geometryDescriptor:d,requiredTextures:f,textureData:e};throw Error();});return function(a,d){return b.apply(this,arguments)}}();r._addAbsoluteHrefTexture=function(b,a){b=b.textureDefinitions;if(null!=b)for(const d of Object.keys(b))for(const c of b[d].images)Array.isArray(c.href)?c.hrefConcat=c.href.map(e=>z.makeAbsolute(e,a)):c.hrefConcat=z.makeAbsolute(c.href,a)};r._fixTextureEncodings=function(b){b=b.textureDefinitions;if(null!=b)for(const d in b){const c=b[d];
if(Array.isArray(c.encoding))for(var a=0;a<c.encoding.length;a++){const e=c.encoding[a];"data:"===e.substring(0,5)&&(c.encoding[a]=e.substring(5))}else a=c.encoding,"data:"===a.substring(0,5)&&(c.encoding=a.substring(5))}};k._loadShared=function(b,a){const d=`${this._layerUrl}/nodes/${b.resources.geometry}/shared`;return this._load(d,"json",a).then(c=>{r._fixTextureEncodings(c);r._addAbsoluteHrefTexture(c,d);return c})};k._loadTexture=function(b,a,d,c,e,f){let g=!1;return e===w.TextureEncoding.DDS_S3TC||
e===w.TextureEncoding.KTX2||e===w.TextureEncoding.Basis?this._load(b,"binary",f).then(h=>({id:a,usage:d,data:h,encoding:e,downsampled:g})):this._load(b,"image",f).then(h=>{var p=h;if(c&&4096<=h.width*h.height){p=Math.ceil(h.width/2);const u=Math.ceil(h.height/2),l=document.createElement("canvas");l.width=p;l.height=u;l.getContext("2d").drawImage(h,0,0,p,u);p=l;g=!0}return{id:a,usage:d,data:p,encoding:e,downsampled:g}})};k.loadTextures=function(b,a,d){const c=this._options.uncompressedTextureDownsamplingEnabled,
e=this._options.textureUsageMask;return Promise.all(a.map(f=>{if(0===(f.usage&e))return null;const g=x.selectEncoding(f.encodings,this._options.textureEncodings);return null==g?(this._logger.error("#loadTextures",this._logLayer,`No known encoding for texture found on node ${b.id}`),Promise.reject()):this._loadTexture(`${this._layerUrl}/nodes/${b.resources.texture||b.id}/textures/${g.name}`,f.id,f.usage,c,g.encoding,d)}))};k._loadFeatureData=function(b,a){return this._load(`${this._layerUrl}/nodes/${b}/features/0`,
"json",a)};k._loadGeometry=function(b,a,d){return this._load(`${this._layerUrl}/nodes/${b}/geometries/${a}`,"binary",d)};return r}()});