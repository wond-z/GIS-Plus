// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/handleUtils ../../../core/promiseUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../geometry/support/heightModelInfoUtils".split(" "),function(k,l,g,p,q,r,m,u,v,t,n){k.LayerView3D=c=>{c=function(d){function h(){var a=d.apply(this,arguments)||this;
a.slicePlaneEnabled=!1;a.supportsHeightUnitConversion=!1;return a}l._inheritsLoose(h,d);var e=h.prototype;e.postscript=function(a){d.prototype.postscript.call(this,a);n.supportsHeightModelInfo(this.layer)&&this.addResolvingPromise(this._validateHeightModelInfo())};e._validateHeightModelInfo=function(){var a=l._asyncToGenerator(function*(){const b=new AbortController;var f=b.signal;this.handles.add(p.makeHandle(()=>b.abort()));yield r.whenOnce(()=>this.view.defaultsFromMap?.heightModelInfoReady,f);
q.throwIfAborted(f);if(f=n.rejectLayerError(this.layer,this.view.heightModelInfo,this.supportsHeightUnitConversion))throw f;});return function(){return a.apply(this,arguments)}}();e.canResume=function(){const a=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;return d.prototype.canResume.call(this)&&(!a||!a.minScale||!a.maxScale||a.minScale>=a.maxScale)};e.getSuspendInfo=function(){const a=d.prototype.getSuspendInfo.call(this),b=this.layer&&"effectiveScaleRange"in
this.layer?this.layer.effectiveScaleRange:null;b&&b.minScale&&b.maxScale&&b.minScale<b.maxScale&&(a.outsideScaleRange=!0);return a};return h}(c);g.__decorate([m.property()],c.prototype,"view",void 0);g.__decorate([m.property()],c.prototype,"slicePlaneEnabled",void 0);return c=g.__decorate([t.subclass("esri.views.3d.layers.LayerView3D")],c)};Object.defineProperties(k,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});