// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/maybe ../../../../core/screenUtils ../../../../core/accessorSupport/decorators/property ../../../../core/arrayUtils ../../../../core/accessorSupport/ensureType ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/support/ray ../../../../geometry/support/vectorStacks ../../../../layers/graphics/dehydratedFeatures ./LineOfSightIntersectionResult ../../layers/i3s/Intersector ../../support/geometryUtils/ray ../../terrain/Intersector ../../webgl-engine/lib/Intersector ../../webgl-engine/lib/IntersectorInterfaces ../../webgl-engine/lib/intersectorUtilsConversions".split(" "),
function(k,A,r,B,p,C,x,P,Q,D,g,h,m,E,F,t,G,H,I,J,n,K){k.LineOfSightRayIntersector=function(y){function u(b){b=y.call(this,b)||this;b._terrainIntersectionOptionsLayerUids=new Set(["terrain"]);return b}A._inheritsLoose(u,y);var q=u.prototype;q.initialize=function(){this.intersector=J.newIntersector(this.view.state.viewingMode);this.intersector.options.hud=!1;this.intersector.options.store=n.StoreResults.MIN};q.getScreenPointIntersection=function(b){b=C.screenPointObjectToArray(b,E.sv2d.get());b=H.fromScreen(this.view.state.camera,
b,v);return this._getRayIntersection(b)};q._getRayIntersection=function(b,d){if(p.isNone(b)||p.isNone(this.view.sceneIntersectionHelper))return null;this.intersector.options.store=n.StoreResults.MIN;this.view.sceneIntersectionHelper.intersectToolIntersectorRay(b,this.intersector,d);var a=this.intersector.results.min;d=h.create();if(!a.getIntersectionPoint(d))return null;const e=this.view.renderCoordsHelper.fromRenderCoords(d,this.view.spatialReference),f=h.clone(a.normal);if(G.isI3sIntersectorResult(a))return new t.LineOfSightIntersectionResult({type:n.IntersectorType.OBJECT,
id:`${a.target.layerUid}/${a.target.nodeIndex}/${a.target.componentIndex}`,mapPoint:e,renderPoint:d,normal:f,ray:m.copy(b),graphic:null});if(I.isTerrainIntersectorResult(a))return new t.LineOfSightIntersectionResult({type:n.IntersectorType.TERRAIN,id:a.target.lij.slice(),mapPoint:e,renderPoint:d,normal:f,ray:m.copy(b),graphic:null});a=K.toGraphic(a,this.view);if(p.isSome(a)){const l=a.layer;var c=a.sourceLayer;if(c)switch(c.type){case "scene":c=F.getObjectId(a,c.objectIdField);break;default:c=a.uid}else c=
a.uid;return new t.LineOfSightIntersectionResult({type:n.IntersectorType.OBJECT,id:`${l.uid}/${c}`,mapPoint:e,renderPoint:d,normal:f,ray:m.copy(b),graphic:a})}return null};q.updateFromGroundIntersection=function(b,d,a){var e=L;const f=M,c=N,l=O;g.copy(f,b);this.view.renderCoordsHelper.worldUpAtPosition(f,c);g.normalize(c,c);const w=this.view.basemapTerrain.visibleElevationBounds,z=0<=d?1:-1;g.scale(l,c,z*((w?Math.abs(w.max-w.min):100)+Math.abs(d)));g.add(e,f,l);m.fromPoints(e,f,v);e=this._getRayIntersection(v,
{include:this._terrainIntersectionOptionsLayerUids});if(p.isSome(e))return g.scale(l,c,z*d),g.add(a,e.renderPoint,l),h.clone(e.normal);g.copy(a,b);return null};return u}(B);r.__decorate([x.property()],k.LineOfSightRayIntersector.prototype,"view",void 0);r.__decorate([x.property()],k.LineOfSightRayIntersector.prototype,"intersector",void 0);k.LineOfSightRayIntersector=r.__decorate([D.subclass("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],k.LineOfSightRayIntersector);const L=h.create(),
M=h.create(),N=h.create(),O=h.create(),v=m.create();Object.defineProperties(k,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});