// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/has ../../../core/Handles ../../../core/mathUtils ../../../core/maybe ../../../core/reactiveUtils ../../../core/time ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/projectionEllipsoid ../../../geometry/support/spatialReferenceUtils ./AtmosphereType ./ChapmanAtmosphere ./CloudsComposition ./CloudsCompositionParameters ./CloudsData ./CloudsGenerator ./CloudsPresets ./Fog ./PanoramicAtmosphere ./Precipitation ./SimpleAtmosphere ./SimpleHaze ./Stars ./weather ./weatherUtils ../webgl-engine/core/shaderLibrary/ShaderOutput ../webgl-engine/lib/RenderSlot ../webgl-engine/lib/Update".split(" "),
function(e,x,g,J,Z,K,n,b,h,L,l,aa,ba,M,q,y,z,A,k,B,N,C,D,O,P,E,Q,R,S,F,T,U,G,V,u,W){var r;const X=[u.RenderSlot.POSTPROCESSING_ENVIRONMENT_OPAQUE,u.RenderSlot.POSTPROCESSING_ENVIRONMENT_TRANSPARENT];e.EnvironmentRenderer=r=function(t){function p(a){a=t.call(this,a)||this;a._handles=new K;a._context=null;a._atmosphere=null;a._oldWeatherParameters=new v;a._newWeatherParameters=new v;a._fadedWeatherParameters=new v;a._weatherParameters=a._newWeatherParameters;return a}x._inheritsLoose(p,t);var d=p.prototype;
d.initialize=function(){this.view._stage.addRenderPlugin(X,this)};d.destroy=function(){null!=this.view?._stage&&this.view._stage.removeRenderPlugin(this);this._handles=b.destroyMaybe(this._handles);this._set("view",null)};d.updateAnimation=function(a){return b.isSome(this._precipitation)?this._precipitation.update(a):!1};d.initializeRenderContext=function(a=null){this._context=a;a=()=>this._setNeedsRender();this._handles.add([h.when(()=>this.view?.basemapTerrain,()=>this._updateBasemapTerrain(),h.syncAndInitial),
h.watch(()=>({viewingMode:this.view.viewingMode,atmosphereEnabled:this.view.environment.atmosphereEnabled,atmosphereQuality:this.view.environment.atmosphere.quality}),()=>this._updateAtmosphere(),h.syncAndInitial),h.watch(()=>this._stars,a),h.watch(()=>this._precipitation,a),h.watch(()=>this._clouds,()=>this._updateWeather(),h.initial),h.watch(()=>this._fog,()=>this._updateFogHaze(),h.initial),h.watch(()=>this._simpleHaze,()=>this._updateFogHaze(),h.initial),h.watch(()=>this._weatherUpdateParameters,
()=>{this._updateWeather();this._updateFogHaze()},h.syncAndInitial)])};d.uninitializeRenderContext=function(){this._context=null;this._atmosphere=b.destroyMaybe(this._atmosphere);this._set("_stars",b.destroyMaybe(this._stars));this._set("_precipitation",b.destroyMaybe(this._precipitation));this._set("_clouds",b.destroyMaybe(this._clouds));this._set("_cloudsComposition",b.destroyMaybe(this._cloudsComposition));this._set("_fog",b.destroyMaybe(this._fog));this._set("_simpleHaze",b.destroyMaybe(this._simpleHaze))};
d.prepareRender=function(a){a.bindParameters.cloudsFade.data=D.isReadyCloudsData(this._clouds)?this._clouds:null;"local"!==this.view.viewingMode&&(G.updateWeatherFading(a.bindParameters.cloudsFade,a.bindParameters.camera,this.view.state.mode,r.test.time||a.time,this.view.qualitySettings.weatherFadeDuration),this._updateWeatherFading(a.bindParameters),a.bindParameters.cloudsFade.renderingStage===D.CloudsRenderingStages.FINISHED&&b.isSome(this._clouds)&&0===this._clouds.coverage&&!1===this._clouds.running&&
this._clouds.destroyFrameBufferCube())};d.render=function(a){if(a.output===V.ShaderOutput.Color)switch(a.bindParameters.slot){case u.RenderSlot.POSTPROCESSING_ENVIRONMENT_OPAQUE:b.isSome(this._stars)&&this._stars.render(a);b.isSome(this._atmosphere)&&(this._atmosphere.render(a),b.isSome(this._cloudsComposition)&&b.isSome(a.bindParameters.cloudsFade.data)&&(this.weatherVisible&&b.isSome(this._clouds)&&this._clouds.updateWeatherTile(),this._cloudsComposition.render(a)),G.weatherfadingNeedsRender(a.bindParameters.cloudsFade)&&
b.isSome(this._context)&&this._context.requestRender());break;case u.RenderSlot.POSTPROCESSING_ENVIRONMENT_TRANSPARENT:if(b.isSome(this._atmosphere)&&(this._atmosphere.renderHaze(a,this._weatherParameters.haze.amount),0<this._weatherParameters.haze.amount&&this._selectAtmosphereType()!==k.AtmosphereType.Realistic&&b.isSome(this._simpleHaze)&&this._simpleHaze.render(a,this._weatherParameters.haze),0<this._weatherParameters.fog.amount&&b.isSome(this._fog)&&this._fog.render(a,this._weatherParameters.fog),
b.isSome(this._precipitation))){const c=this.view.environment.weather;"rainy"!==c.type&&"snowy"!==c.type||this._precipitation.render(a,c.precipitation,c.type)}}};d.updateLightSources=function(a,c,f,w){if(b.isSome(this._context)){const m=this._context.renderContext;m.bindParameters.oldLighting.copyFrom(m.bindParameters.lighting);m.bindParameters.newLighting.noonFactor=c;m.bindParameters.newLighting.globalFactor=f;m.bindParameters.newLighting.set(a);w===W.Update.Faded||m.bindParameters.weatherFading?
m.bindParameters.fadeLighting(0):m.bindParameters.fadeLighting(1);this._context.requestRender()}};d._updateWeatherFading=function(a){if(a.weatherFading){var c=a.cloudsFade;c.fadeIn.stage===C.FadeInStages.FADE_IN?(a.fadeLighting(c.fadeIn.factor),this._fadeWeather(c.fadeIn.factor)):c.fadeInOut.stage===C.FadeInOutStages.FADE_IN?(a.fadeLighting(c.fadeInOut.factor),this._fadeWeather(c.fadeInOut.factor)):c.crossFade.enabled?(a.fadeLighting(c.crossFade.factor),this._fadeWeather(c.crossFade.factor)):(a.fadeLighting(0),
this._fadeWeather(0))}};d._fadeWeather=function(a){const {_newWeatherParameters:c,_oldWeatherParameters:f}=this;1<=a?this._weatherParameters=c:(this._fadedWeatherParameters.lerp(f,c,a),this._weatherParameters=this._fadedWeatherParameters)};d._updateWeather=function(){const a=this._weatherUpdateParameters;b.isNone(a)||b.isNone(this._clouds)||(this._clouds.applyPreset(P.cloudPresets[a.type],a.weatherAdjustment),this._setNeedsRender())};d._setNeedsRender=function(){b.isSome(this._context)&&this._context.requestRender()};
d._updateFogHaze=function(){const a=this._weatherUpdateParameters;if(!(b.isNone(this._fog)||b.isNone(this._simpleHaze)||b.isNone(a)||b.isNone(this._context))){var c=this._context.renderContext.bindParameters;this._oldWeatherParameters.copyFrom(this._weatherParameters);switch(a.type){case "foggy":this._newWeatherParameters.fog.strength=n.lerp(3E-5,.005,a.weatherAdjustment**3);q.copy(this._newWeatherParameters.fog.color,H);this._newWeatherParameters.fog.amount=1;this._newWeatherParameters.haze.strength=
0;this._newWeatherParameters.haze.amount=this._selectAtmosphereType()===k.AtmosphereType.Realistic?1:0;this._setNeedsRender();break;case "rainy":this._newWeatherParameters.fog.strength=n.lerp(4E-6,2E-4,a.effect**3);q.copy(this._newWeatherParameters.fog.color,Y);this._newWeatherParameters.fog.amount=1;this._newWeatherParameters.haze.strength=0;this._newWeatherParameters.haze.amount=0;this._setNeedsRender();break;case "snowy":this._newWeatherParameters.fog.strength=n.lerp(4E-6,2E-4,a.effect**3);q.copy(this._newWeatherParameters.fog.color,
H);this._newWeatherParameters.fog.amount=1;this._newWeatherParameters.haze.strength=0;this._newWeatherParameters.haze.amount=this._selectAtmosphereType()===k.AtmosphereType.Realistic?1:0;this._setNeedsRender();break;default:this._newWeatherParameters.fog.strength=0,this._newWeatherParameters.fog.amount=0,this._newWeatherParameters.haze.strength=4E-6,this._newWeatherParameters.haze.amount=1,this._setNeedsRender()}c.weatherFading?this._fadeWeather(0):this._fadeWeather(1)}};d._updateAtmosphere=function(){var a=
this._selectAtmosphereType();this.atmosphereType!==a&&((a=this._getAtmosphereClass(),a)?b.isSome(this._context)&&(b.destroyMaybe(this._atmosphere),this._atmosphere=new a(this.view),this._atmosphere.initializeRenderContext(this._context),this._setNeedsRender(),this._updateBasemapTerrain()):(b.isSome(this._atmosphere)&&(this._atmosphere.destroy(),this._atmosphere=null,this._setNeedsRender()),this._updateBasemapTerrain()))};d._getAtmosphereClass=function(){switch(this._selectAtmosphereType()){case k.AtmosphereType.None:return null;
case k.AtmosphereType.Realistic:return B.ChapmanAtmosphere;case k.AtmosphereType.Panoramic:return Q.PanoramicAtmosphere;case k.AtmosphereType.Simple:return S}};d._selectAtmosphereType=function(){const a=this.view.get("environment.atmosphereEnabled"),c=this.view.get("environment.atmosphere.quality"),f=this.view.viewingMode;return!a||null==c||A.isMoon(this.view.spatialReference)?k.AtmosphereType.None:"local"===f?k.AtmosphereType.Panoramic:"high"===c&&b.isSome(this._context)&&B.ChapmanAtmosphere.isSupported(this._context)&&
A.isEarth(this.view.spatialReference)?k.AtmosphereType.Realistic:k.AtmosphereType.Simple};d._updateBasemapTerrain=function(){this.view.basemapTerrain&&(this.view.basemapTerrain.velvetOverground=b.isSome(this._atmosphere)&&this.atmosphereType===k.AtmosphereType.Simple)};x._createClass(p,[{key:"atmosphereType",get:function(){return b.isSome(this._atmosphere)?this._atmosphere.type:k.AtmosphereType.None}},{key:"canRender",get:function(){return!!this.view.basemapTerrain?.renderer.canRender||"global"!==
this.view.viewingMode}},{key:"needsLinearDepth",get:function(){return b.isSome(this._atmosphere)&&this._atmosphere.type===k.AtmosphereType.Realistic}},{key:"updating",get:function(){return b.isSome(this._stars)&&this._stars.updating||b.isSome(this._clouds)&&this._clouds.running}},{key:"weatherVisible",get:function(){return q.length(this.view.state.camera.eye)-z.getReferenceEllipsoid(this.view.spatialReference).radius<=U.weatherHeightLimit}},{key:"_stars",get:function(){const a=this.view,c=a.environment?.starsEnabled??
!1,f=this._get("_stars");return!c||b.isNone(this._context)?(b.destroyMaybe(f),null):b.isSome(f)?f:new T.Stars({view:a,requestRender:()=>this._setNeedsRender()})}},{key:"_precipitation",get:function(){const a=this._get("_precipitation");if(!this._precipitationEnabled||b.isNone(this._context))return b.destroyMaybe(a),null;const c=this.view,f=this._context;if(b.isSome(a)&&a.context===f)return a;b.destroyMaybe(a);return new R.Precipitation({context:f,view:c})}},{key:"_clouds",get:function(){const a=this._get("_clouds");
if(!this.weatherEnabled||b.isNone(this._context))return b.destroyMaybe(a),null;if(b.isSome(a))return a;const c=this.view,f=this._context;b.destroyMaybe(a);return new O.CloudsGenerator({context:f,view:c,requestRender:()=>this._setNeedsRender()})}},{key:"_cloudsComposition",get:function(){const a=this._get("_cloudsComposition");if(!this.weatherEnabled||b.isNone(this._context))return b.destroyMaybe(a),null;const c=this.view.state.viewingMode,f=this._context.renderContext.rctx,w=z.getReferenceEllipsoid(this.view.spatialReference).radius;
if(b.isSome(a)&&a.viewingMode===c&&a.planetRadius===w)return a;b.destroyMaybe(a);return new N.CloudsComposition({rctx:f,viewingMode:c,planetRadius:w,requestRender:()=>this._setNeedsRender()})}},{key:"_fog",get:function(){const a=this._get("_fog");return!this.weatherEnabled||b.isNone(this._context)?(b.destroyMaybe(a),null):b.isSome(a)?a:new E.Fog({context:this._context,view:this.view})}},{key:"_simpleHaze",get:function(){const a=this._get("_simpleHaze");return!this.weatherEnabled||b.isNone(this._context)?
(b.destroyMaybe(a),null):b.isSome(a)?a:new F.SimpleHaze({context:this._context,view:this.view})}},{key:"weatherEnabled",get:function(){return!!this.view?.environmentManager?.weatherEnabled}},{key:"_precipitationEnabled",get:function(){return this.weatherEnabled&&("rainy"===this.view.environment.weather.type||"snowy"===this.view.environment.weather.type)}},{key:"_weatherUpdateParameters",get:function(){const a=this.weatherEnabled?this.view.environment.weather:null;return b.isNone(a)?null:"rainy"===
a.type||"snowy"===a.type?{type:a.type,weatherAdjustment:a.cloudCover,effect:a.precipitation}:{type:a.type,weatherAdjustment:"foggy"===a.type?a.fogStrength:a.cloudCover}}},{key:"test",get:function(){return{atmosphere:this._atmosphere,clouds:this._clouds,selectAtmosphereType:()=>this._selectAtmosphereType(),stubGetAtmosphereClass:a=>{I=r.prototype._getAtmosphereClass;r.prototype._getAtmosphereClass=a},restoreGetAtmosphereClass:()=>{r.prototype._getAtmosphereClass=I}}}}]);return p}(J);e.EnvironmentRenderer.test=
{time:L.Milliseconds(0)};g.__decorate([l.property({constructOnly:!0})],e.EnvironmentRenderer.prototype,"view",void 0);g.__decorate([l.property({type:Boolean,readOnly:!0})],e.EnvironmentRenderer.prototype,"updating",null);g.__decorate([l.property({readOnly:!0})],e.EnvironmentRenderer.prototype,"weatherVisible",null);g.__decorate([l.property()],e.EnvironmentRenderer.prototype,"_context",void 0);g.__decorate([l.property({readOnly:!0})],e.EnvironmentRenderer.prototype,"_stars",null);g.__decorate([l.property({readOnly:!0})],
e.EnvironmentRenderer.prototype,"_precipitation",null);g.__decorate([l.property({readOnly:!0})],e.EnvironmentRenderer.prototype,"_clouds",null);g.__decorate([l.property({readOnly:!0})],e.EnvironmentRenderer.prototype,"_cloudsComposition",null);g.__decorate([l.property({readOnly:!0})],e.EnvironmentRenderer.prototype,"_fog",null);g.__decorate([l.property({readOnly:!0})],e.EnvironmentRenderer.prototype,"_simpleHaze",null);g.__decorate([l.property({readOnly:!0})],e.EnvironmentRenderer.prototype,"weatherEnabled",
null);g.__decorate([l.property({readOnly:!0})],e.EnvironmentRenderer.prototype,"_precipitationEnabled",null);g.__decorate([l.property({readOnly:!0})],e.EnvironmentRenderer.prototype,"_weatherUpdateParameters",null);e.EnvironmentRenderer=r=g.__decorate([M.subclass("esri.views.3d.environment.EnvironmentRenderer")],e.EnvironmentRenderer);let v=function(){function t(){this.fog=new E.FogParameters;this.haze=new F.HazeParameters}var p=t.prototype;p.copyFrom=function(d){this.fog.amount=d.fog.amount;this.haze.amount=
d.haze.amount;this.fog.strength=d.fog.strength;this.haze.strength=d.haze.strength;q.copy(this.fog.color,d.fog.color)};p.lerp=function(d,a,c){this.fog.amount=n.lerp(d.fog.amount,a.fog.amount,c);this.haze.amount=n.lerp(d.haze.amount,a.haze.amount,c);this.fog.strength=n.lerp(d.fog.strength,a.fog.strength,c);this.haze.strength=n.lerp(d.haze.strength,a.haze.strength,c);q.lerp(this.fog.color,d.fog.color,a.fog.color,c)};return t}();const Y=y.fromValues(.5,.5,.5),H=y.fromValues(1.5,1.5,1.5);let I;e.WeatherParameters=
v;Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});