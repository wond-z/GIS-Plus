// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/mathUtils ../../../core/maybe ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/projectionEllipsoid ./atmosphereUtils ../../../chunks/FogHaze.glsl ./FogTechnique ./SimpleHazeTechnique ./weather ../webgl-engine/lib/DefaultVertexBufferLayouts ../webgl-engine/lib/glUtil3D ../../webgl/enums".split(" "),
function(d,n,l,v,w,h,p,I,J,x,e,m,y,z,A,B,C,q,D,E,F){d.SimpleHaze=function(r){function f(a){var b=r.call(this,a)||this;b._passParameters=new A.FogHazePassParameters;b._vao=E.createQuadVAO(a.context.renderContext.rctx,D.Pos2Tex);a=y.getReferenceEllipsoid(a.view.spatialReference);b._planetRadius=a.radius;b._atmosphereRadius=a.radius+z.atmosphereHeight;return b}n._inheritsLoose(f,r);var k=f.prototype;k.destroy=function(){this._hazeTechniqueCached=h.releaseMaybe(this._hazeTechniqueCached);this._vao=h.disposeMaybe(this._vao)};
k.render=function(a,b){if(0!==this.view.basemapTerrain.baseOpacity&&(this._update(a,b),!(0>=this._passParameters.hazeAmount))){var c=this._hazeTechnique;if(c.compiled){var g=a.offscreenRenderingHelper;g.renderDepthDetached(()=>{this._passParameters.depthTexture=g.depthTexture;const G=a.rctx.bindTechnique(c,this._passParameters,a.bindParameters);this._renderSimpleHaze(G,a)})}else this.context.requestRender()}};k._renderSimpleHaze=function(a,b){h.isNone(this._vao)||(b=b.rctx,b.bindVAO(this._vao),a.assertCompatibleVertexAttributeLocations(this._vao),
b.drawArrays(F.PrimitiveType.TRIANGLE_STRIP,0,4))};k._update=function(a,b){var c=a.bindParameters.camera;e.normalize(t,c.eye);a=Math.max(0,e.dot(t,a.bindParameters.lighting.mainLight.direction));const g=H;e.scale(u,g,0);e.lerp(this._passParameters.hazeColor,u,g,a);c=e.length(c.eye);this._passParameters.atmosphereC=c*c-this._atmosphereRadius*this._atmosphereRadius;this._passParameters.hazeAmount=(1-w.smoothstep(.7*q.weatherHeightLimit,1*q.weatherHeightLimit,Math.abs(c-this._planetRadius)))*b.amount;
this._passParameters.fogStrength=b.strength};f.isSupported=function(a){return a.capabilities.depthTexture};n._createClass(f,[{key:"_shaderTechniqueRepository",get:function(){return this.context.shaderTechniqueRepository}},{key:"strength",get:function(){return this._passParameters.hazeStrength},set:function(a){this._passParameters.hazeStrength=a}},{key:"_hazeTechnique",get:function(){if(h.isNone(this._hazeTechniqueCached)){const a=new B.FogHazeTechniqueConfiguration;a.haze=!0;this._hazeTechniqueCached=
this._shaderTechniqueRepository.acquire(C.SimpleHazeTechnique,a)}return this._hazeTechniqueCached}}]);return f}(v);l.__decorate([p.property({constructOnly:!0})],d.SimpleHaze.prototype,"context",void 0);l.__decorate([p.property({constructOnly:!0})],d.SimpleHaze.prototype,"view",void 0);d.SimpleHaze=l.__decorate([x.subclass("esri.views.3d.environment.SimpleHaze")],d.SimpleHaze);const H=m.fromValues(.24,.44,.8),t=m.create(),u=m.create();d.HazeParameters=function(){this.amount=this.strength=0};Object.defineProperties(d,
{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});