// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/mathUtils ../../../core/maybe ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/projectionEllipsoid ./atmosphereUtils ../../../chunks/FogHaze.glsl ./FogTechnique ./weather ../webgl-engine/lib/DefaultVertexBufferLayouts ../webgl-engine/lib/glUtil3D ../../webgl/enums".split(" "),
function(d,n,l,w,x,h,p,G,H,y,e,m,z,A,B,q,r,C,D,E){d.Fog=function(t){function f(a){var b=t.call(this,a)||this;b._passParameters=new B.FogHazePassParameters;b._vao=D.createQuadVAO(a.context.renderContext.rctx,C.Pos2Tex);a=z.getReferenceEllipsoid(a.view.spatialReference);b._planetRadius=a.radius;b._atmosphereRadius=a.radius+A.atmosphereHeight;return b}n._inheritsLoose(f,t);var k=f.prototype;k.destroy=function(){this._thickFogTechniqueCached=h.releaseMaybe(this._thickFogTechniqueCached);this._vao=h.disposeMaybe(this._vao)};
k.render=function(a,b){this._update(a,b);if(!(0>=this._passParameters.fogAmount)){var c=this._thickFogTechnique;if(c.compiled){var g=a.offscreenRenderingHelper;g.renderDepthDetached(()=>{this._passParameters.depthTexture=g.depthTexture;const F=a.rctx.bindTechnique(c,this._passParameters,a.bindParameters);this._renderFog(F,a)})}else this.context.requestRender()}};k._renderFog=function(a,b){h.isNone(this._vao)||(b=b.rctx,b.bindVAO(this._vao),a.assertCompatibleVertexAttributeLocations(this._vao),b.drawArrays(E.PrimitiveType.TRIANGLE_STRIP,
0,4))};k._update=function(a,b){var c=a.bindParameters.camera;e.normalize(u,c.eye);a=Math.max(0,e.dot(u,a.bindParameters.lighting.mainLight.direction));const g=b.color;e.scale(v,g,.1);e.lerp(this._passParameters.fogColor,v,g,a);c=e.length(c.eye);this._passParameters.atmosphereC=c*c-this._atmosphereRadius*this._atmosphereRadius;this._passParameters.fogAmount=(1-x.smoothstep(.95*r.weatherHeightLimit,1*r.weatherHeightLimit,Math.abs(c-this._planetRadius)))*b.amount;this._passParameters.fogStrength=b.strength};
f.isSupported=function(a){return a.capabilities.depthTexture};n._createClass(f,[{key:"_shaderTechniqueRepository",get:function(){return this.context.shaderTechniqueRepository}},{key:"strength",get:function(){return this._passParameters.fogStrength},set:function(a){this._passParameters.fogStrength=a}},{key:"_thickFogTechnique",get:function(){if(h.isNone(this._thickFogTechniqueCached)){const a=new q.FogHazeTechniqueConfiguration;a.haze=!1;this._thickFogTechniqueCached=this._shaderTechniqueRepository.acquire(q.FogTechnique,
a)}return this._thickFogTechniqueCached}}]);return f}(w);l.__decorate([p.property({constructOnly:!0})],d.Fog.prototype,"context",void 0);l.__decorate([p.property({constructOnly:!0})],d.Fog.prototype,"view",void 0);d.Fog=l.__decorate([y.subclass("esri.views.3d.environment.Fog")],d.Fog);const u=m.create(),v=m.create();d.FogParameters=function(){this.color=m.create();this.amount=this.strength=0};Object.defineProperties(d,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});