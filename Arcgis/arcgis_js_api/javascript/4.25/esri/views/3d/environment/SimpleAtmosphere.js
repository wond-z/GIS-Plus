// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../core/mathUtils ../../../core/maybe ../../../core/reactiveUtils ../../../chunks/mat4 ../../../chunks/mat4f64 ../../../chunks/vec2 ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/projectionEllipsoid ../../../geometry/support/spatialReferenceUtils ./AtmosphereType ./atmosphereUtils ../../../chunks/SimpleAtmosphere.glsl ./SimpleAtmosphereTechnique ./SimpleAtmosphereTechniqueConfiguration ./resources/MarsAtmosphereTexture ./resources/SimpleAtmosphereTexture ../support/mathUtils ../support/buffer/glUtil ../support/buffer/InterleavedLayout ../webgl-engine/lib/DefaultVertexAttributeLocations ../webgl-engine/lib/glUtil3D ../webgl-engine/lib/Util ../webgl-engine/lib/VertexArrayObject ../webgl-engine/lib/VertexAttribute ../../webgl/BufferObject ../../webgl/enums ../../webgl/Texture ../../webgl/Util".split(" "),
function(w,x,m,y,G,H,I,h,r,J,K,L,z,M,A,q,N,O,t,P,Q,R,S,B,T,U,V,n,W,C){function D(k,l,a,b,c){const g=h.length(k),d=b*Math.sqrt(g*g-b*b)/g,f=c.v1,e=c.v2;h.scale(c.center,k,Math.sqrt(b*b-d*d)/g);h.cross(f,k,l);1>h.squaredLength(f)&&h.cross(f,k,a);h.scale(f,f,d/h.length(f));h.cross(e,f,k);h.scale(e,e,d/h.length(e));return d}const E=-z.innerAtmosphereDepth,X=t.makePiecewiseLinearFunction([[50,.1015625],[500,.21875],[5E3,.51171875],[5E4,.4140625]]);t=function(){function k(a){this.view=a;this.type=L.AtmosphereType.Simple;
this._passParameters=new M.SimpleAtmospherePassParameters;this._fadeVaoCount=0;this._texV1=1;this._isOnMars=K.isMars(a.spatialReference);a=J.getReferenceEllipsoid(a.spatialReference);this._planetRadius=a.radius;this._outerRimWidth=a.outerAtmosphereRimWidth;this._innerRimFactor=(this._planetRadius+E)/this._planetRadius;this._middleRimFactor=(this._planetRadius+0)/this._planetRadius;this._outerRimFactor=(this._planetRadius+this._outerRimWidth)/this._planetRadius;this._texV0=0/this._outerRimWidth;this._texVScale=
this._texV1-this._texV0}var l=k.prototype;l.destroy=function(){this._cameraChangeHandle=m.removeMaybe(this._cameraChangeHandle);this._passParameters.texture=m.disposeMaybe(this._passParameters.texture);this._fadeVao=m.disposeMaybe(this._fadeVao);this._vao=m.disposeMaybe(this._vao)};l.initializeRenderContext=function(){var a=w._asyncToGenerator(function*(b){this._shaderTechniqueRepository=b.shaderTechniqueRepository;const c=b.renderContext.rctx;this._cameraChangeHandle=y.watch(()=>this.view.state?.camera,
()=>b.requestRender(),y.syncAndInitial);this._vao=this._createRibbon(c);this._vaoCount=C.vertexCount(this._vao,"geometry");this._fadeVao=S.createQuadVAO(c);this._fadeVaoCount=C.vertexCount(this._fadeVao,"geometry");this._passParameters.texture=new W.Texture(c,{pixelFormat:n.PixelFormat.RGBA,dataType:n.PixelType.UNSIGNED_BYTE,wrapMode:n.TextureWrapMode.CLAMP_TO_EDGE,samplingMode:n.TextureSamplingMode.LINEAR,flipped:!0,width:1,height:512},this._isOnMars?N.marsAtmosphereTextureSimple:O.earthAtmosphereTextureSimple);
b.requestRender()});return function(b){return a.apply(this,arguments)}}();l.render=function(a){if(!m.isNone(this._vao)&&!m.isNone(this._passParameters.texture)){this._update(a.bindParameters.camera);var b=a.rctx;1>this._passParameters.undergroundFadeAlpha&&(b.bindTechnique(this._coneTechnique,this._passParameters,a.bindParameters),b.bindVAO(this._vao),b.drawArrays(n.PrimitiveType.TRIANGLES,0,this._vaoCount));0<this._passParameters.undergroundFadeAlpha&&(b.bindTechnique(this._undergroundTechnique,
this._passParameters,a.bindParameters),b.bindVAO(this._fadeVao),b.drawArrays(n.PrimitiveType.TRIANGLE_STRIP,0,this._fadeVaoCount))}};l.renderHaze=function(){};l._update=function(a){var b=r.create();const c=this._planetRadius;var g=h.length(a.eye);const d=g-c;this._passParameters.undergroundFadeAlpha=0>d?Math.min(-d/5E3,1):0;var f=c+E,e=c+Math.max(50,d);this._passParameters.innerScale=e*e/(Math.sqrt(e*e-c*c)*Math.sqrt(e*e-f*f)+c*f)-1;this._passParameters.altitudeFade=z.computeInnerAltitudeFade(d);
h.scale(b,a.eye,(c+50)/g);D(b,a.center,a.up,c,this._passParameters.silhouette);b=this._computeScreenRimWidth(a,b,a.up,this._passParameters.silhouette);g=X(d);f=this._texV0+.001953125*this._texVScale;e=this._texV0+b*g*this._texVScale;50<d&&(D(a.eye,a.center,a.up,c,this._passParameters.silhouette),a=this._computeScreenRimWidth(a,a.eye,a.up,this._passParameters.silhouette),a=x.clamp((a-1.5)/(b-1.5),0,1),f=this._texV0+.001953125*a*this._texVScale,e=this._texV0+x.lerp(this._texV1,b*g,a)*this._texVScale);
I.set(this._passParameters.texV,f,e)};l._createRibbon=function(a){const b=new Float32Array(1155),c=new Uint32Array(1920);b[0]=0;b[1]=0;b[2]=-1;for(var g=0;128>g;g++){var d=9*g+3;b[d+0]=g;b[d+1]=this._innerRimFactor;b[d+2]=-1;b[d+3]=g;b[d+4]=this._middleRimFactor;b[d+5]=0;b[d+6]=g;b[d+7]=this._outerRimFactor;b[d+8]=1;d=3*g+1;var f=127===g?1:d+3,e=15*g;c[e+0]=d;c[e+1]=d+1;c[e+2]=f+1;c[e+3]=f+1;c[e+4]=f;c[e+5]=d;c[e+6]=d+1;c[e+7]=d+2;c[e+8]=f+2;c[e+9]=f+2;c[e+10]=f+1;c[e+11]=d+1;c[e+12]=d;c[e+13]=f;
c[e+14]=0}g=F.createBuffer(c.length);d=g.position;for(f=0;f<c.length;++f)e=3*c[f],d.set(f,0,b[e]),d.set(f,1,b[e+1]),d.set(f,2,b[e+2]);return new T.VertexArrayObject(a,R.Default3D,{geometry:P.glLayout(F)},{geometry:V.BufferObject.createVertex(a,n.Usage.STATIC_DRAW,g.buffer)})};l._computeScreenRimWidth=function(a,b,c,g){h.add(p,g.center,g.v2);h.scale(u,p,this._outerRimFactor);G.lookAt(v,b,p,c);B.project(p,v,a.projectionMatrix,a.viewport);B.project(u,v,a.projectionMatrix,a.viewport);return h.distance(p,
u)/a.height};w._createClass(k,[{key:"_coneTechnique",get:function(){if(m.isNone(this._coneTechniqueCached)){const a=new q.SimpleAtmosphereTechniqueConfiguration;a.geometry=q.SimpleAtmosphereGeometry.Cone;this._coneTechniqueCached=this._shaderTechniqueRepository.acquire(A.SimpleAtmosphereTechnique,a)}return this._coneTechniqueCached}},{key:"_undergroundTechnique",get:function(){if(m.isNone(this._undergroundTechniqueCached)){const a=new q.SimpleAtmosphereTechniqueConfiguration;a.geometry=q.SimpleAtmosphereGeometry.Underground;
this._undergroundTechniqueCached=this._shaderTechniqueRepository.acquire(A.SimpleAtmosphereTechnique,a)}return this._undergroundTechniqueCached}}]);return k}();const v=H.create(),p=r.create(),u=r.create(),F=Q.newLayout().vec3f(U.VertexAttribute.POSITION);return t});