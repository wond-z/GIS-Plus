// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/Error ../../core/maybe ../../core/promiseUtils ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ../../renderers/support/clickToleranceUtils".split(" "),function(f,m,n,r,t,u,z,A,v,w){return d=>{d=function(p){function g(){return p.apply(this,arguments)||this}f._inheritsLoose(g,p);g.prototype.fetchPopupFeatures=function(){var y=
f._asyncToGenerator(function*(h,k){var x=this,{layer:c}=this;if(!h)throw new n("tilelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:c});if("tile"!==c.type)throw new n("tilelayerview:fetchPopupFeatures","Layer type should be 'tile'",{type:c.type});const q=this.get("view.scale");c=c.allSublayers.toArray().filter(a=>{const b=0===a.minScale||q<=a.minScale,e=0===a.maxScale||q>=a.maxScale;return a.popupTemplate&&a.popupEnabled&&a.visible&&b&&e});return t.eachAlways(c.map(function(){var a=
f._asyncToGenerator(function*(b){const e=b.createQuery();var l=r.isSome(k)?k.event:null;l=w.calculateTolerance({renderer:b.renderer,event:l});e.geometry=x.createFetchPopupFeaturesQueryGeometry(h,l);e.outFields=yield b.popupTemplate.getRequiredFields();return(yield b.queryFeatures(e)).features});return function(b){return a.apply(this,arguments)}}())).then(a=>[].concat(...a.map(b=>b.value).filter(Boolean)))});return function(h,k){return y.apply(this,arguments)}}();return g}(d);m.__decorate([u.property()],
d.prototype,"layer",void 0);return d=m.__decorate([v.subclass("esri.layers.mixins.TileLayerView")],d)}});