// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../core/mathUtils ../../chunks/vec2 ../../chunks/vec2f64 ../../chunks/vec3 ../../chunks/vec3f64 ./geometry2dUtils".split(" "),function(h,u,p,H,c,k,q){function z(a,{start:b,end:e,type:f}){a=c.sub(r,a,b);e=c.sub(t,e,b);a=c.dot(a,e)/c.dot(e,e);return c.scaleAndAdd(k.create(),b,e,f===q.LineType.RAY?Math.max(a,0):a)}function A({start:a,end:b,type:e},f){const d=c.sub(r,f,a);b=c.sub(t,b,a);if(e===q.LineType.RAY&&-1E-6>c.dot(b,d))return c.distance(a,f);a=c.cross(v,b,d);return c.len(a)/
c.len(b)}function B(a,b){const e=a.start,f=b.start;var d=b.end;const n=c.sub(r,a.end,e);d=c.sub(t,d,f);var m=c.sub(v,f,e),g=c.cross(C,n,d),l=c.dot(m,g);if(!u.floatEqualAbsolute(l,0,1E-6))return[];l=c.sqrLen(g);if(u.floatEqualAbsolute(l,0,1E-6))return[];m=c.cross(D,m,d);g=c.dot(m,g)/l;g=c.scaleAndAdd(E,e,n,g);return a.type===q.LineType.RAY&&(a=c.sub(x,g,e),-1E-6>c.dot(n,a))||b.type===q.LineType.RAY&&(b=c.sub(x,g,f),-1E-6>c.dot(d,b))?[]:[k.clone(g)]}function F({start:a,end:b,type:e},f){const d=c.sub(r,
f,a);a=c.sub(t,b,a);b=c.cross(v,a,d);if(1E-6>c.sqrLen(b)/c.sqrLen(a))switch(e){case q.LineType.LINE:return[k.clone(f)];case q.LineType.RAY:return-1E-6>c.dot(a,d)?[]:[k.clone(f)]}return[]}function G(a,b,e){return u.floatEqualAbsolute(a[2],e[2],1E-6)&&u.floatEqualAbsolute(c.squaredDistance(e,a),b*b,1E-6)?[k.clone(e)]:[]}function w(a,b,{start:e,end:f,type:d}){c.set(a.start,e[0],e[1],b);c.set(a.end,f[0],f[1],b);a.type=I[d];return a}h.VerticalPlaneType=void 0;(function(a){a[a.PLANE=0]="PLANE";a[a.HALF_PLANE=
1]="HALF_PLANE"})(h.VerticalPlaneType||(h.VerticalPlaneType={}));const I={[h.VerticalPlaneType.PLANE]:q.LineType.LINE,[h.VerticalPlaneType.HALF_PLANE]:q.LineType.RAY},r=k.create(),t=k.create(),v=k.create(),C=k.create(),D=k.create(),E=k.create(),x=k.create(),y={start:k.create(),end:k.create(),type:q.LineType.LINE},J={start:k.create(),end:k.create(),type:q.LineType.LINE};Object.defineProperty(h,"LineType",{enumerable:!0,get:()=>q.LineType});h.epsilon=1E-6;h.intersectCircleAndPoint=G;h.intersectLineAndPoint=
F;h.intersectLineLike=B;h.intersectLineLikeAndCircle=function({start:a,end:b,type:e},f,d){const n=[];if(u.floatEqualAbsolute(a[2],f[2],1E-6)&&u.floatEqualAbsolute(b[2],f[2],1E-6)){var m=p.subtract(r,b,a),g=p.subtract(t,a,f);b=p.squaredLength(m);var l=2*p.dot(m,g);d=p.squaredLength(g)-d*d;d=l*l-4*b*d;0===d?(d=-l/(2*b),(e===q.LineType.LINE||0<=d)&&n.push(p.scaleAndAdd(k.fromValues(0,0,f[2]),a,m,d))):0<d&&(d=Math.sqrt(d),g=(-l+d)/(2*b),(e===q.LineType.LINE||0<=g)&&n.push(p.scaleAndAdd(k.fromValues(0,
0,f[2]),a,m,g)),d=(-l-d)/(2*b),(e===q.LineType.LINE||0<=d)&&n.push(p.scaleAndAdd(k.fromValues(0,0,f[2]),a,m,d)))}else{b=c.sub(r,b,a);if(u.floatEqualAbsolute(b[2],0,1E-6))return n;l=c.scaleAndAdd(t,a,b,(f[2]-a[2])/b[2]);if(e===q.LineType.RAY&&(a=c.sub(v,l,a),-1E-6>c.dot(b,a)))return n;for(m of G(f,d,l))n.push(m)}return n};h.intersectVerticalPlane=function(a,b){a=w(y,0,a);b=w(J,0,b);b=B(a,b);a=[];for(const e of b)a.push(H.clone(e));return a};h.intersectVerticalPlaneAndCircle=function({start:a,end:b,
type:e},f,d){const n=[];b=p.subtract(r,b,a);var m=p.subtract(t,a,f),g=p.squaredLength(b);const l=2*p.dot(b,m);d=p.squaredLength(m)-d*d;d=l*l-4*g*d;0===d?(g=-l/(2*g),(e===h.VerticalPlaneType.PLANE||0<=g)&&n.push(p.scaleAndAdd(k.fromValues(0,0,f[2]),a,b,g))):0<d&&(d=Math.sqrt(d),m=(-l+d)/(2*g),(e===h.VerticalPlaneType.PLANE||0<=m)&&n.push(p.scaleAndAdd(k.fromValues(0,0,f[2]),a,b,m)),g=(-l-d)/(2*g),(e===h.VerticalPlaneType.PLANE||0<=g)&&n.push(p.scaleAndAdd(k.fromValues(0,0,f[2]),a,b,g)));return n};
h.intersectVerticalPlaneAndLineLike=function(a,b){const e=a.start,f=p.subtract(r,a.end,e);var d=c.set(t,-f[1],f[0],0);const n=b.start,m=c.sub(v,b.end,n);var g=c.dot(m,d),l=c.set(C,e[0],e[1],0);l=c.sub(D,l,n);d=c.dot(l,d);if(1E-6>Math.abs(g))return[];g=c.scaleAndAdd(E,n,m,d/g);return b.type===q.LineType.RAY&&(b=c.sub(x,g,n),-1E-6>c.dot(b,m))||a.type===h.VerticalPlaneType.HALF_PLANE&&(a=p.sub(x,g,e),-1E-6>p.dot(a,f))?[]:[k.clone(g)]};h.intersectVerticalPlaneAndPoint=function(a,b){return F(w(y,b[2],
a),b)};h.pointToLineLikeDistance=A;h.pointToVerticalPlaneDistance=function(a,b){return A(w(y,a[2],b),a)};h.projectPointToCircle=function(a,b,e){a=c.set(r,a[0],a[1],b[2]);a=c.subtract(t,a,b);e/=c.length(a);return c.scaleAndAdd(k.create(),b,a,e)};h.projectPointToLineLike=z;h.projectPointToVerticalPlane=function(a,b){return z(a,w(y,a[2],b))};Object.defineProperties(h,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});