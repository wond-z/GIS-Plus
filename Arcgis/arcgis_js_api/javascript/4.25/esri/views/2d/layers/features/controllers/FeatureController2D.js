// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/HandleOwner ../../../../../core/has ../../../../../core/maybe ../../../../../core/promiseUtils ../../../../../core/reactiveUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/arrayUtils ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/subclass ../../../../../layers/graphics/featureConversionUtils ../../../../../layers/graphics/data/QueryEngine ../../../../../layers/support/FieldsIndex ../FeatureStore2D ../sources/createSource ../support/AttributeStore ../support/BinStore ../support/ClusterStore ../support/ComputedAttributeStorage ../support/FeatureSetReaderJSON ../support/UpdateToken ../../../../support/QueueProcessor".split(" "),
function(h,m,k,u,g,l,v,q,M,N,B,C,y,D,E,F,G,H,I,J,K,z,L){function r(n){if(!l.isAbortError(n)&&"worker:port-closed"!==n.name)throw n;}function A(n){return"feature"===n.type&&"snapshot"===n.mode}k=function(n){function x(){var a=n.apply(this,arguments)||this;a._storage=new J.ComputedAttributeStorage;a._markedIdsBufId=a._storage.createBitset();a._lastCleanup=performance.now();a._cleanupNeeded=!1;a._invalidated=!1;a._tileToResolver=new Map;a._didEdit=!1;a._updateVersion=1;a.tileStore=null;a.config=null;
a.processor=null;a.remoteClient=null;a.service=null;return a}h._inheritsLoose(x,n);var d=x.prototype;d.initialize=function(){this._initStores();this._initSource();this._updateQueue=new L.QueueProcessor({concurrency:"geoevent"===this._source.type?1:4,process:(a,b)=>this._onTileMessage(a,{signal:b})});this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this)),v.when(()=>!this.updating,()=>this.onIdle())]);this._checkUpdating=setInterval(()=>this.notifyChange("updating"),300)};d._initSource=
function(){this._source=F.createSource(this.service,this.spatialReference,this.tileStore.tileScheme,(a,b)=>{this._invalidated=!0;return this._patchTile(a,b)},()=>50>this._updateQueue.length,this.featureStore);this._proxyEvents()};d._proxyEvents=function(){if("geoevent"===this._source.type){const a=this._source.events;this.handles.add([a.on("connectionStatus",b=>this.remoteClient.invoke("setProperty",{propertyName:"connectionStatus",value:b}).catch(r)),a.on("errorString",b=>this.remoteClient.invoke("setProperty",
{propertyName:"errorString",value:b}).catch(r)),a.on("data-received",b=>this.remoteClient.invoke("emitEvent",{name:"data-received",event:{attributes:b.attributes,centroid:b.centroid,geometry:b.geometry}}).catch(r)),a.on("updateRate",b=>this.remoteClient.invoke("emitEvent",{name:"update-rate",event:{...b}}).catch(r))])}};d._initAttributeStore=function(a){this.attributeStore||(this.attributeStore=new G({type:"remote",initialize:(b,c)=>l.ignoreAbortErrors(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.initialize",
b,{signal:c}).catch(r)),update:(b,c)=>l.ignoreAbortErrors(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.requestUpdate",b,{signal:c}).catch(r)),render:b=>l.ignoreAbortErrors(this.remoteClient.invoke("tileRenderer.featuresView.requestRender",void 0,{signal:b}).catch(r))},a,()=>this.notifyChange("updating")))};d._initStores=function(){this.featureStore=new E.FeatureStore2D({geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,
fieldsIndex:this.fieldsIndex,fields:this.service.fields},this._storage,"snapshot"===this.service.type?"snapshot":"on-demand")};d._initQueryEngine=function(a){const b=this;this.featureQueryEngine?.destroy();this.featureQueryEngine=new y.QueryEngine({definitionExpression:a.schema.source.definitionExpression,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,
featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds(c){return g.isNone(b.aggregateStore)?[]:b.aggregateStore.getFeatureDisplayIdsForAggregate(c).map(e=>b.getObjectId(e))}},timeInfo:this.service.timeInfo})};d._initAggregateQueryEngine=function(a,b){this.aggregateQueryEngine?.destroy();g.isNone(a)||(b=b.targets.aggregate.params.fields.slice(),this.aggregateQueryEngine=new y.QueryEngine({definitionExpression:null,fields:b,geometryType:a.geometryInfo.geometryType,objectIdField:a.objectIdField,
hasM:a.geometryInfo.hasM,hasZ:a.geometryInfo.hasZ,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!1,featureStore:a,aggregateAdapter:{getFeatureObjectIds(c){return[]}}}))};d.destroy=function(){this._updateQueue.destroy();this._source.destroy();this.featureQueryEngine?.destroy();this.aggregateQueryEngine?.destroy();this.attributeStore?.destroy();for(const a of this.tileStore.tiles)this._source.unsubscribe(a);clearInterval(this._checkUpdating)};d.isUpdating=function(){const a=this._source.updating,
b=!!this._updateQueue.length,c=!this.attributeStore||this.attributeStore.isUpdating(),e=a||b||c;u("esri-2d-log-updating")&&console.log(`Updating FeatureController2D: ${e}\n  -> updatingSource ${a}\n  -> updateQueue ${b}\n  -> updatingAttributeStore ${c}\n`);return e};d.enableEvent=function(a){this._source.enableEvent(a.name,a.value)};d.pause=function(){this._updateQueue.pause();this._updateQueue.clear()};d.resume=function(){this._updateQueue.resume()};d.pauseStream=function(){"geoevent"===this._source.type&&
this._source.pauseStream()};d.resumeStream=function(){"geoevent"===this._source.type&&this._source.resumeStream()};d._initAggregateStore=function(a){a=a.schema.targets?.aggregate?.type;if(g.applySome(this.config,b=>b.schema.targets?.aggregate?.type)!==a&&(g.isSome(this.aggregateStore)&&(this.handles.remove("valueRangesChanged"),this.aggregateStore.destroy(),this.aggregateStore=null),a)){switch(a){case "cluster":this.aggregateStore=new I.ClusterStore({geometryInfo:{geometryType:"esriGeometryPoint",
hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields},this.spatialReference,this._storage,this.service);this.handles.add(this.aggregateStore.events.on("valueRangesChanged",b=>{this.remoteClient.invoke("emitEvent",{name:"valueRangesChanged",event:{valueRanges:b.valueRanges}}).catch(r)}),"valueRangesChanged");break;case "bin":this.aggregateStore=new H.BinStore({geometryInfo:{geometryType:"esriGeometryPolygon",hasM:!1,hasZ:!1},spatialReference:this.spatialReference,
fieldsIndex:this.fieldsIndex,fields:this.service.fields},this.spatialReference,this._storage,this.service)}this.aggregateStore.onTileUpdate({added:this.tileStore.tiles,removed:[]})}};d.update=function(){var a=h._asyncToGenerator(function*(b,c){this._updateVersion++;this._initQueryEngine(c);this._initAttributeStore(c);this.pause();yield Promise.all([this._source.update(b,c.schema.source),this.featureStore.updateSchema(b,c.schema.targets.feature),this.attributeStore.update(b,c),this.attributeStore.updateFilters(b,
c,this)]);this._initAggregateStore(c);g.isSome(this.aggregateStore)&&(yield this.aggregateStore.updateSchema(b,c.schema.targets.aggregate));this._initAggregateQueryEngine(this.aggregateStore,c.schema);u("esri-2d-update-debug")&&b.describe();this._set("config",c)});return function(b,c){return a.apply(this,arguments)}}();d.applyUpdate=function(){var a=h._asyncToGenerator(function*(b){b.version=this._updateVersion;u("esri-2d-update-debug")&&console.debug(`Applying update ${b.version}`);b.mesh&&this.clearTiles();
this._updateQueue.resume();yield this._source.applyUpdate(b);this.notifyChange("updating");yield v.whenOnce(()=>!this.updating);g.isSome(this.aggregateStore)&&(yield l.after(10),yield v.whenOnce(()=>!this.updating))});return function(b){return a.apply(this,arguments)}}();d.onEdits=function(){var a=h._asyncToGenerator(function*({edits:b}){u("esri-2d-update-debug")&&console.debug("Applying Edit:",b);this._didEdit=!0;try{const c=b.removed.map(f=>f.objectId&&-1!==f.objectId?f.objectId:this._lookupObjectIdByGlobalId(f.globalId)),
e=b.addOrModified.map(({objectId:f})=>f);this.featureStore.invalidate();yield this._source.edit(e,c);this.clearTiles();this.notifyChange("updating");g.isSome(this.aggregateStore)&&this.aggregateStore.clear();yield this._source.resend();yield v.whenOnce(()=>!this.updating)}catch(c){}});return function(b){return a.apply(this,arguments)}}();d.refresh=function(){var a=h._asyncToGenerator(function*(b){if(!b.dataChanged)return b=z.UpdateToken.empty(),b.storage.filters=!0,this.applyUpdate(b);this.featureStore.invalidate();
this.clearTiles();this._source.refresh(this._updateVersion,b);this._cleanupNeeded=!0;this.notifyChange("updating");yield v.whenOnce(()=>!this.updating)});return function(b){return a.apply(this,arguments)}}();d.clearTiles=function(){for(const a of this.tileStore.tiles)this.processor.onTileClear(a)};d.onTileUpdate=function(a){if(g.isSome(this.aggregateStore))this.aggregateStore.onTileUpdate(a);for(const b of a.added)this._source.subscribe(b,this._updateVersion),this._level=b.level;for(const b of a.removed)this._source.unsubscribe(b),
this._cleanupNeeded=!0,this._tileToResolver.has(b.id)&&(this._tileToResolver.get(b.id).resolve(),this._tileToResolver.delete(b.id));this.notifyChange("updating")};d.onIdle=function(){var a=h._asyncToGenerator(function*(){this._invalidated&&(this._invalidated=!1,g.isSome(this.aggregateStore)||"heatmap"===this.processor.type)&&(yield this._repushCurrentLevelTiles());this._markAndSweep()});return function(){return a.apply(this,arguments)}}();d.querySummaryStatistics=function(){var a=h._asyncToGenerator(function*({query:b,
params:c}){return this.featureQueryEngine.executeQueryForSummaryStatistics(b,c)});return function(b){return a.apply(this,arguments)}}();d.queryAggregateSummaryStatistics=function(){var a=h._asyncToGenerator(function*({query:b,params:c}){return this.aggregateQueryEngine.executeQueryForSummaryStatistics(b,c)});return function(b){return a.apply(this,arguments)}}();d.queryUniqueValues=function(){var a=h._asyncToGenerator(function*({query:b,params:c}){return this.featureQueryEngine.executeQueryForUniqueValues(b,
c)});return function(b){return a.apply(this,arguments)}}();d.queryAggregateUniqueValues=function(){var a=h._asyncToGenerator(function*({query:b,params:c}){return this.aggregateQueryEngine.executeQueryForUniqueValues(b,c)});return function(b){return a.apply(this,arguments)}}();d.queryClassBreaks=function(){var a=h._asyncToGenerator(function*({query:b,params:c}){return this.featureQueryEngine.executeQueryForClassBreaks(b,c)});return function(b){return a.apply(this,arguments)}}();d.queryAggregateClassBreaks=
function(){var a=h._asyncToGenerator(function*({query:b,params:c}){return this.aggregateQueryEngine.executeQueryForClassBreaks(b,c)});return function(b){return a.apply(this,arguments)}}();d.queryHistogram=function(){var a=h._asyncToGenerator(function*({query:b,params:c}){return this.featureQueryEngine.executeQueryForHistogram(b,c)});return function(b){return a.apply(this,arguments)}}();d.queryAggregateHistogram=function(){var a=h._asyncToGenerator(function*({query:b,params:c}){return this.aggregateQueryEngine.executeQueryForHistogram(b,
c)});return function(b){return a.apply(this,arguments)}}();d.queryExtent=function(a){return this.featureQueryEngine.executeQueryForExtent(a)};d.queryAggregates=function(a){return this.aggregateQueryEngine.executeQuery(a)};d.queryAggregateCount=function(a){return this.aggregateQueryEngine.executeQueryForCount(a)};d.queryAggregateIds=function(a){return this.aggregateQueryEngine.executeQueryForIds(a)};d.queryFeatures=function(a){return this.featureQueryEngine.executeQuery(a)};d.queryVisibleFeatures=
function(){var a=h._asyncToGenerator(function*(b){b=yield this.featureQueryEngine.executeQuery(b);const c=b.objectIdFieldName;b.features=b.features.filter(e=>{e=this.getDisplayId(e.attributes[c]);return g.applySome(e,f=>this.attributeStore.isVisible(f))});return b});return function(b){return a.apply(this,arguments)}}();d.queryFeatureCount=function(a){return this.featureQueryEngine.executeQueryForCount(a)};d.queryLatestObservations=function(a){return this.featureQueryEngine.executeQueryForLatestObservations(a)};
d.queryObjectIds=function(a){return this.featureQueryEngine.executeQueryForIds(a)};d.queryStatistics=function(){var a=h._asyncToGenerator(function*(){return this.featureStore.storeStatistics});return function(){return a.apply(this,arguments)}}();d.getObjectId=function(a){return this.featureStore.lookupObjectId(a,this._storage)};d.getDisplayId=function(a){if(g.isSome(this.aggregateStore)){const b=this.aggregateStore.getDisplayId(a);return g.isNone(b)?(a=this.featureStore.lookupDisplayId(a),this.aggregateStore.getDisplayIdForReferenceId(a)):
b}return this.featureStore.lookupDisplayId(a)};d.getFeatures=function(a){const b=[],c=[];for(const e of a)a=g.isSome(this.aggregateStore)?this.getAggregate(e):null,g.isSome(a)?g.isSome(a.attributes.referenceId)?(a=this.getFeature(a.attributes.referenceId),g.isSome(a)&&b.push(a)):c.push(a):(a=this.getFeature(e),g.isSome(a)&&b.push(a));return{features:b,aggregates:c}};d.getFeature=function(a){a=this.featureStore.lookupFeatureByDisplayId(a,this._storage);if(g.isNone(a))return null;var b=a.readHydratedGeometry();
b=C.convertToGeometry(b,a.geometryType,a.hasZ,a.hasM);return{attributes:a.readAttributes(),geometry:b}};d.getAggregate=function(a){return g.isNone(this.aggregateStore)?null:this.aggregateStore.getAggregate(a)};d.getAggregates=function(){return g.isNone(this.aggregateStore)?[]:this.aggregateStore.getAggregates()};d.setHighlight=function(){var a=h._asyncToGenerator(function*(b){const c=g.filterNones(b.map(e=>this.getDisplayId(e)));return this.attributeStore.setHighlight(b,c)});return function(b){return a.apply(this,
arguments)}}();d._lookupObjectIdByGlobalId=function(a){const b=this.service.globalIdField;if(g.isNone(b))throw Error("Expected globalIdField to be defined");let c=null;this.featureStore.forEach(e=>{a===e.readAttribute(b)&&(c=e.getObjectId())});if(g.isNone(c))throw Error(`Expected to find a feature with globalId ${a}`);return c};d._repushCurrentLevelTiles=function(){var a=h._asyncToGenerator(function*(){var b=this,c=this.tileStore.tiles.filter(e=>e.level===this._level);c.map(function(){var e=h._asyncToGenerator(function*(f){return b._patchTile({type:"append",
id:f.key.id,clear:!0,addOrUpdate:null,end:!1})});return function(f){return e.apply(this,arguments)}}());c=c.map(function(){var e=h._asyncToGenerator(function*(f){return b._patchTile({type:"append",id:f.key.id,addOrUpdate:K.FeatureSetReaderJSON.fromOptimizedFeatures([],b.service),remove:[],end:!0,isRepush:!0,status:z.UpdateToken.empty()})});return function(f){return e.apply(this,arguments)}}());yield Promise.all(c)});return function(){return a.apply(this,arguments)}}();d._maybeForceCleanup=function(){5E3<
performance.now()-this._lastCleanup&&this._markAndSweep()};d._patchTile=function(a,b){a=this._updateQueue.push(a,b).then(()=>{this.notifyChange("updating")}).catch(c=>{this.notifyChange("updating")});this.notifyChange("updating");return a};d._onTileMessage=function(){var a=h._asyncToGenerator(function*(b,c){l.throwIfAborted(c);if(u("esri-2d-update-debug")){var e=g.applySome(b.addOrUpdate,p=>p.hasFeatures);console.debug(b.id,`FeatureController:onTileMessage: [clear:${b.clear}, end:${b.end}, features: ${e}]`)}if(e=
this.tileStore.get(b.id)){if(b.clear)return this.processor.onTileClear(e);var f=b.status;this._cleanupNeeded=!0;var t=[];for(const p of b.remove){const w=this.featureStore.lookupDisplayId(p);w&&t.push(w)}b.remove=t;try{if(g.isNone(b.addOrUpdate))this.processor.onTileMessage(e,{...b,addOrUpdate:null},g.isSome(this.aggregateStore),c).catch(l.throwIfNotAbortError);else{b.addOrUpdate.setArcadeSpatialReference(this.spatialReference);this.featureStore.hasInstance(b.addOrUpdate.instance)&&f.targets.feature||
(f.targets.feature=!0,this.featureStore.onTileData(e,b));f.storage.data&&f.storage.filters||(f.storage.data=!0,f.storage.filters=!0,this.attributeStore.onTileData(e,b),"geoevent"===this._source.type||this._didEdit?(yield this.attributeStore.sendUpdates(),l.throwIfAborted(c)):this.attributeStore.sendUpdates());if(g.isSome(this.aggregateStore)&&!f.targets.aggregate){f.targets.aggregate=!0;const p=A(this._source)&&this._source.loading,w=!A(this._source)||p||b.end;this.aggregateStore.onTileData(e,b,this._storage,
this.attributeStore,w);if(!w)return;f.mesh||(this.attributeStore.onTileData(e,b),yield this.attributeStore.sendUpdates())}if(!f.mesh){f.mesh=!0;const p=g.isSome(this.aggregateStore)&&"cluster"===this.aggregateStore.type;yield this.processor.onTileMessage(e,b,p,c);l.throwIfAborted(c)}this._maybeForceCleanup()}}catch(p){l.throwIfNotAbortError(p)}}});return function(b,c){return a.apply(this,arguments)}}();d._mark=function(a,b,c){const e=this._storage.getInstanceId(a);a&&(b.add((4294901760&e)>>>16),c.set(a))};
d._markAndSweep=function(){this._lastCleanup=performance.now();if(!("feature"===this._source.type&&"snapshot"===this._source.mode||"geoevent"!==this._source.type&&!this._cleanupNeeded)){this._cleanupNeeded=!1;var a=this._storage.getBitset(this._markedIdsBufId),b=new Set;a.clear();for(const e of this.tileStore.tiles)for(const f of this._source.readers(e.id)){const t=f.getCursor();for(;t.next();){var c=t.getDisplayId();c||(c=t.getObjectId(),c=this.featureStore.lookupDisplayId(c));this._mark(c,b,a)}}"symbol"===
this.processor.type&&this.processor.forEachBufferId(e=>{this._mark(e,b,a)});this._updateQueue.forEach(e=>{for(const f of e.remove)e=this.featureStore.lookupDisplayId(f),this._mark(e,b,a)});g.isSome(this.aggregateStore)&&(this.aggregateStore.sweepFeatures(a,this.featureStore),"sweepAggregates"in this.aggregateStore&&this.aggregateStore.sweepAggregates(this._storage,this.attributeStore,this._level));this.featureStore.sweepFeatures(a,this._storage,this.attributeStore);this.featureStore.sweepFeatureSets(b)}};
h._createClass(x,[{key:"fieldsIndex",get:function(){return new D(this.service.fields)}},{key:"spatialReference",get:function(){return this.tileStore.tileScheme.spatialReference}},{key:"updating",get:function(){return this.isUpdating()}}]);return x}(k.HandleOwner);m.__decorate([q.property({constructOnly:!0})],k.prototype,"tileStore",void 0);m.__decorate([q.property()],k.prototype,"config",void 0);m.__decorate([q.property({readOnly:!0})],k.prototype,"fieldsIndex",null);m.__decorate([q.property()],k.prototype,
"processor",void 0);m.__decorate([q.property({constructOnly:!0})],k.prototype,"remoteClient",void 0);m.__decorate([q.property({constructOnly:!0})],k.prototype,"service",void 0);m.__decorate([q.property()],k.prototype,"spatialReference",null);m.__decorate([q.property()],k.prototype,"updating",null);return k=m.__decorate([B.subclass("esri.views.2d.layers.features.controllers.FeatureController2D")],k)});