// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../kernel ../../../core/Collection ../../../core/maybe ../../../core/reactiveUtils ../../../core/urlUtils ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../geometry/Extent ../../../geometry/projection ../../../geometry/SpatialReference ../../../layers/support/kmlUtils ../../../rest/utils ../../../support/GraphicsCollection ../engine/Bitmap ../engine/BitmapContainer ./LayerView2D ./graphics/GraphicContainer ./graphics/GraphicsView2D ../../layers/LayerView ../../support/imageReprojection".split(" "),
function(n,p,H,I,t,J,w,u,m,R,K,C,x,D,q,L,y,M,N,O,z,A,P,Q){let E=function(){this.allSublayers=new Map;this.allPoints=[];this.allPolylines=[];this.allPolygons=[];this.allMapImages=[]};m=function(F){function B(){var a=F.apply(this,arguments)||this;a._bitmapIndex=new Map;a._mapImageContainer=new N.BitmapContainer;a._kmlVisualData=new E;a.allVisiblePoints=new y.GraphicsCollection;a.allVisiblePolylines=new y.GraphicsCollection;a.allVisiblePolygons=new y.GraphicsCollection;a.allVisibleMapImages=new I;return a}
n._inheritsLoose(B,F);var e=B.prototype;e.hitTest=function(){var a=n._asyncToGenerator(function*(b,d){const f=this.layer;return[this._pointsView?.hitTest(b),this._polylinesView?.hitTest(b),this._polygonsView?.hitTest(b)].flat().filter(Boolean).map(k=>{k.layer=f;k.sourceLayer=f;return{type:"graphic",graphic:k,layer:f,mapPoint:b}})});return function(b,d){return a.apply(this,arguments)}}();e.update=function(a){this._polygonsView&&this._polygonsView.processUpdate(a);this._polylinesView&&this._polylinesView.processUpdate(a);
this._pointsView&&this._pointsView.processUpdate(a)};e.attach=function(){this._fetchController=new AbortController;this.container.addChild(this._mapImageContainer);this._polygonsView=new A({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new z(this.view.featuresTilingScheme)});this.container.addChild(this._polygonsView.container);this._polylinesView=new A({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),
container:new z(this.view.featuresTilingScheme)});this.container.addChild(this._polylinesView.container);this._pointsView=new A({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new z(this.view.featuresTilingScheme)});this.container.addChild(this._pointsView.container);this.handles.add([this.allVisibleMapImages.on("change",a=>{a.added.forEach(b=>this._addMapImage(b));a.removed.forEach(b=>this._removeMapImage(b))}),J.watch(()=>this.layer.visibleSublayers,
a=>{for(const [,b]of this._kmlVisualData.allSublayers)b.visibility=0;for(const b of a)if(a=this._kmlVisualData.allSublayers.get(b.id))a.visibility=1;this._refreshCollections()})]);this.updatingHandles.addPromise(this._fetchService(this._fetchController.signal));this._imageReprojector=new Q.ImageReprojector};e.detach=function(){this._fetchController.abort();this._fetchController=null;this._mapImageContainer.removeAllChildren();this.container.removeAllChildren();this._bitmapIndex.clear();this._polygonsView&&
(this._polygonsView.destroy(),this._polygonsView=null);this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null);this._pointsView&&(this._pointsView.destroy(),this._pointsView=null);this._imageReprojector&&(this._imageReprojector.destroy(),this._imageReprojector=null)};e.moveStart=function(){};e.viewChange=function(){this._polygonsView.viewChange();this._polylinesView.viewChange();this._pointsView.viewChange()};e.moveEnd=function(){};e.isUpdating=function(){return this._pointsView.updating||
this._polygonsView.updating||this._polylinesView.updating};e._addMapImage=function(a){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(a.href,C.fromJSON(a.extent),this.view.spatialReference).then(b=>{const d=new M.Bitmap(b.bitmapData,{immutable:!1,requestRenderOnSourceChangedEnabled:!0});d.x=b.extent.xmin;d.y=b.extent.ymax;d.resolution=b.extent.width/b.bitmapData.width;d.rotation=a.rotation;this._mapImageContainer.addChild(d);
this._bitmapIndex.set(a,d)})};e._getViewDependentUrl=function(){var a=n._asyncToGenerator(function*(b,d){const {viewFormat:f,viewBoundScale:k,httpQuery:l}=b;if(t.isSome(f)){if(t.isNone(d))throw Error("Loading this network link requires a view state.");yield x.load();if(t.isSome(k)&&1!==k){var c=new C(d.extent);c.expand(k)}else c=d.extent;c=x.project(c,D.WGS84);var g=x.project(c,D.WebMercator);g=Math.max(g.width,g.height);const v={"[bboxWest]":c.xmin.toString(),"[bboxEast]":c.xmax.toString(),"[bboxSouth]":c.ymin.toString(),
"[bboxNorth]":c.ymax.toString(),"[lookatLon]":c.center.x.toString(),"[lookatLat]":c.center.y.toString(),"[lookatRange]":g.toString(),"[lookatTilt]":"0","[lookatHeading]":d.rotation.toString(),"[lookatTerrainLon]":c.center.x.toString(),"[lookatTerrainLat]":c.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":c.center.x.toString(),"[cameraLat]":c.center.y.toString(),"[cameraAlt]":g.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":(d.size[0]*d.pixelRatio).toString(),"[vertPixels]":(d.size[1]*
d.pixelRatio).toString(),"[terrainEnabled]":"0","[clientVersion]":H.version,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"};g=r=>{for(const h in r)for(const G in v)r[h]=r[h].replace(G,v[G])};d=w.queryToObject(f);g(d);c={};t.isSome(l)&&(c=w.queryToObject(l),g(c));b=L.parseUrl(b.href);b.query={...b.query,...d,...c};return`${b.path}?${w.objectToQuery(d)}`}return b.href});return function(b,d){return a.apply(this,arguments)}}();e._fetchService=function(){var a=n._asyncToGenerator(function*(b){const d=
new E;yield this._loadVisualData(this.layer.url,d,b);this._kmlVisualData=d;this._refreshCollections()});return function(b){return a.apply(this,arguments)}}();e._refreshCollections=function(){this.allVisiblePoints.removeAll();this.allVisiblePolylines.removeAll();this.allVisiblePolygons.removeAll();this.allVisibleMapImages.removeAll();this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(a=>this._isSublayerVisible(a.sublayerId)).map(({item:a})=>a));this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(a=>
this._isSublayerVisible(a.sublayerId)).map(({item:a})=>a));this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(a=>this._isSublayerVisible(a.sublayerId)).map(({item:a})=>a));this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(a=>this._isSublayerVisible(a.sublayerId)).map(({item:a})=>a))};e._isSublayerVisible=function(a){a=this._kmlVisualData.allSublayers.get(a);return a.visibility?-1===a.parentFolderId?!0:this._isSublayerVisible(a.parentFolderId):!1};e._loadVisualData=
function(a,b,d){var f=this;return this._fetchParsedKML(a,d).then(function(){var k=n._asyncToGenerator(function*(l){for(const c of l.sublayers){b.allSublayers.set(c.id,c);l=c.points?yield q.getGraphics(c.points):[];const g=c.polylines?yield q.getGraphics(c.polylines):[],v=c.polygons?yield q.getGraphics(c.polygons):[],r=c.mapImages||[];b.allPoints.push(...l.map(h=>({item:h,sublayerId:c.id})));b.allPolylines.push(...g.map(h=>({item:h,sublayerId:c.id})));b.allPolygons.push(...v.map(h=>({item:h,sublayerId:c.id})));
b.allMapImages.push(...r.map(h=>({item:h,sublayerId:c.id})));c.networkLink&&(l=yield f._getViewDependentUrl(c.networkLink,f.view.state),yield f._loadVisualData(l,b,d))}});return function(l){return k.apply(this,arguments)}}())};e._fetchParsedKML=function(a,b){return q.fetchService(a,this.layer.spatialReference,this.layer.refreshInterval,b).then(d=>q.parseKML(d.data))};e._removeMapImage=function(a){const b=this._bitmapIndex.get(a);b&&(this._mapImageContainer.removeChild(b),this._bitmapIndex.delete(a))};
return B}(O.LayerView2DMixin(P));p.__decorate([u.property()],m.prototype,"_pointsView",void 0);p.__decorate([u.property()],m.prototype,"_polylinesView",void 0);p.__decorate([u.property()],m.prototype,"_polygonsView",void 0);p.__decorate([u.property()],m.prototype,"updating",void 0);return m=p.__decorate([K.subclass("esri.views.2d.layers.KMLLayerView2D")],m)});