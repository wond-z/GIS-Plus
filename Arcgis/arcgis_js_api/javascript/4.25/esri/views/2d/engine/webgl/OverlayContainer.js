// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ../../../../core/screenUtils ../../../../chunks/mat3 ../../../../chunks/mat3f32 ../../../../chunks/vec2f32 ../../../../chunks/vec3f32 ../../../../geometry/support/normalizeUtils ../../../../geometry/support/spatialReferenceUtils ../../viewpointUtils ../brushes ./enums ./WGLContainer".split(" "),function(B,E,F,l,G,H,I,J,K,L,M,N,O){return function(x){function q(){var a=x.apply(this,arguments)||this;a._localOrigin=F.createScreenPoint(0,
0);a._viewStateId=-1;a._dvsMat3=G.create();a.requiresDedicatedFBO=!1;return a}B._inheritsLoose(q,x);var r=q.prototype;r.beforeRender=function(a){this._updateMatrices(a);this._updateOverlays(a,this.children);for(const c of this.children)c.beforeRender(a)};r.prepareRenderPasses=function(a){const c=a.registerRenderPass({name:"overlay",brushes:[M.brushes.overlay],target:()=>this.children,drawPhase:N.WGLDrawPhase.MAP});return[...x.prototype.prepareRenderPasses.call(this,a),c]};r._updateMatrices=function(a){var {state:c}=
a;const {id:f,size:t,pixelRatio:g,resolution:m,rotation:u,viewpoint:y,displayMat3:h}=c;if(this._viewStateId!==f){a=Math.PI/180*u;var b=g*t[0],e=g*t[1],{x:k,y:n}=y.targetGeometry;c=J.normalizeMapX(k,c.spatialReference);this._localOrigin.x=c;this._localOrigin.y=n;c=m*b;var p=m*e,d=l.identity(this._dvsMat3);l.multiply(d,d,h);l.translate(d,d,H.fromValues(b/2,e/2));l.scale(d,d,I.fromValues(b/c,-e/p,1));l.rotate(d,d,-a);this._viewStateId=f}};r._updateOverlays=function(a,c){const {state:f}=a,{rotation:t,
spatialReference:g,worldScreenWidth:m,size:u,viewpoint:y}=f;a=this._localOrigin;let h=0;if(g.isWrappable){var b=180/Math.PI*t,e=Math.round(u[0]*Math.abs(Math.cos(b))+u[1]*Math.abs(Math.sin(b)));const [n,p]=K.getInfo(g).valid;b=L.getWorldWidth(g);const {x:d,y:P}=y.targetGeometry,z=[0,0];f.toScreen(z,[d,P]);const v=[0,0];e=e>m?.5*m:.5*e;var k=Math.floor((d+.5*b)/b);const Q=n+k*b;k=p+k*b;const A=[z[0]+e,0];f.toMap(v,A);v[0]>k&&(h=b);A[0]=z[0]-e;f.toMap(v,A);v[0]<Q&&(h=-b);for(const w of c){c=w.elementView.bounds;
if(E.isNone(c))continue;const [C,,D]=c;C<n&&D>n?w.updateDrawCoords(a,b):D>p&&C<p?w.updateDrawCoords(a,-b):w.updateDrawCoords(a,h)}}else for(b of c)b.updateDrawCoords(a,h)};B._createClass(q,[{key:"dvsMat3",get:function(){return this._dvsMat3}}]);return q}(O)});