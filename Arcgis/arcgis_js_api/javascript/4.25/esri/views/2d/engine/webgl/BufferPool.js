// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/has","../../../../core/maybe","./cpuMapped/FreeList"],function(e,f,g,h,n){const l=g("esri-2d-log-allocations");g=function(){function b(a,c){this._array=a;this._pool=c}b.create=function(a,c){a=c.acquire(a);return new b(a,c)};var d=b.prototype;d.expand=function(a){a=this._pool.acquire(a);a.set(this._array);this._pool.release(this._array);this._array=a};d.destroy=function(){this._pool.release(this._array)};d.set=function(a,
c){this._array.set(a._array,c)};d.slice=function(){const a=this._pool.acquire(this._array.byteLength);a.set(this._array);return new b(a,this._pool)};f._createClass(b,[{key:"array",get:function(){return this._array}},{key:"length",get:function(){return this._array.length}}]);return b}();let k=function(){function b(){this._data=new ArrayBuffer(b.BYTE_LENGTH);this._freeList=new n.FreeList({start:0,end:this._data.byteLength})}var d=b.prototype;d.allocate=function(a){const c=this._freeList.firstFit(a);
return h.isNone(c)?null:new Uint32Array(this._data,c,a/Uint32Array.BYTES_PER_ELEMENT)};d.free=function(a){this._freeList.free(a.byteOffset,a.byteLength)};f._createClass(b,[{key:"buffer",get:function(){return this._data}}],[{key:"BYTE_LENGTH",get:function(){return 64E6}}]);return b}(),p=function(){function b(){this._bytesAllocated=0;this._pages=[];this._pagesByBuffer=new Map;this._addPage()}var d=b.prototype;d.destroy=function(){this._pages=[];this._pagesByBuffer=null};d.acquire=function(a){this._bytesAllocated+=
a;l&&console.log(`Allocating ${a}, (${this._bytesAllocated} / ${this._bytesTotal})`);if(a>k.BYTE_LENGTH)return new Uint32Array(a/Uint32Array.BYTES_PER_ELEMENT);for(const c of this._pages){const m=c.allocate(a);if(h.isSome(m))return m}return h.unwrapOrThrow(this._addPage().allocate(a),"Expected to allocate page")};d.release=function(a){this._bytesAllocated-=a.byteLength;l&&console.log(`Freeing ${a.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const c=this._pagesByBuffer.get(a.buffer);
c&&c.free(a)};d._addPage=function(){const a=new k;this._pages.push(a);this._pagesByBuffer.set(a.buffer,a);return a};f._createClass(b,[{key:"_bytesTotal",get:function(){return this._pages.length*k.BYTE_LENGTH}}]);return b}();e.BufferPool=p;e.TypedBuffer=g;Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});