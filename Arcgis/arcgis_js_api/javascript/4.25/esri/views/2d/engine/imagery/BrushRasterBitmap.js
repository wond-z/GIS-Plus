// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ./RasterBitmap ../webgl/VertexStream ../webgl/brushes/WGLBrush ../../../webgl/enums ../../../webgl/rasterUtils".split(" "),function(q,r,t,u,v,l,f){return function(p){function m(){var a=p.apply(this,arguments)||this;a._desc={lut:{vsPath:"raster/lut",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])},stretch:{vsPath:"raster/stretch",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",
1]])},hillshade:{vsPath:"raster/hillshade",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])}};a._rendererUniformInfos=new Map;return a}q._inheritsLoose(m,p);var k=m.prototype;k.dispose=function(){this._quad&&this._quad.dispose()};k.prepareState=function({context:a}){a.setBlendingEnabled(!0);a.setBlendFunctionSeparate(l.BlendFactor.ONE,l.BlendFactor.ONE_MINUS_SRC_ALPHA,l.BlendFactor.ONE,l.BlendFactor.ONE_MINUS_SRC_ALPHA);a.setColorMask(!0,!0,!0,!0);a.setStencilWriteMask(0);
a.setStencilTestEnabled(!0)};k.draw=function(a,b){if(t.hasSource(b)&&!b.suspended){var {timeline:c,context:d,painter:e}=a;c.begin(this.name);d.setStencilFunction(l.CompareFunction.EQUAL,b.stencilRef,255);var g=!d.capabilities.textureFloat?.textureFloatLinear;b.updateTexture(a);g=this._getShaderVariations(b,g);g=e.materialManager.getProgram(this._desc[b.symbolizerParameters.type],g);this._drawWithProgram(a,g,b);c.end(this.name)}};k._drawWithProgram=function({context:a,requestRender:b,allowDelayedRender:c},
d,e,g=1,w=[0,0],n=!1){this._quad||(this._quad=new u(a,[0,0,1,0,0,1,1,1]));if(c&&r.isSome(b)&&!d.isCompiled)b();else{var {symbolizerParameters:h,transformGrid:x,width:y,height:z,opacity:A}=e;b=h.type;a.useProgram(d);c=this._getShaderVariations(e);b=this._getUniformInfos(b,a,d,c);var {names:B,textures:C}=e.getTextures();f.setTextures(a,d,B,C);a=f.getBasicGridUniforms(g,w);n=f.getCommonUniforms(x,[y,z],[e.source.width,e.source.height],A,n);f.setUniforms(d,b,{u_coordScale:e.coordScale,u_dvsMat3:e.transforms.dvs,
...a,...n});if(h.colormap){const {colormap:D,colormapOffset:E}=h;e=f.getColormapUniforms(D,E);f.setUniforms(d,b,e)}"stretch"===h.type?(e=f.getStretchUniforms(h),f.setUniforms(d,b,e)):"hillshade"===h.type&&(e=f.getShadedReliefUniforms(h),f.setUniforms(d,b,e));this._quad.draw()}};k._getUniformInfos=function(a,b,c,d){a=0<d.length?a+"-"+d.join("-"):a;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);b=f.getUniformLocationInfos(b,c);this._rendererUniformInfos.set(a,b);return b};
k._getShaderVariations=function(a,b=!1){const c=[],{interpolation:d}=a,{type:e,colormap:g}=a.symbolizerParameters;"cubic"===d?c.push("bicubic"):"bilinear"===d&&"stretch"===e&&null!=g?(c.push("bilinear"),c.push("nnedge")):b&&"bilinear"===d&&c.push("bilinear");a.isRendereredSource?c.push("noop"):g&&c.push("applyColormap");a.transformGrid&&(c.push("applyProjection"),1===a.transformGrid.spacing[0]&&c.push("lookupProjection"));return c};return m}(v)});