// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../core/maybe ../BufferPool ./FreeList ../../../../webgl/BufferObject ../../../../webgl/enums".split(" "),function(m,p,f,q,r,k,n){let t=function(){function l(a,b,c,e){e=q.TypedBuffer.create(b*c*Uint32Array.BYTES_PER_ELEMENT,e);this.size=b;this.strideInt=c;this.bufferType=a;this.dirty={start:Infinity,end:0};this._gpu=null;this._cpu=e;this.clear()}var d=l.prototype;d.invalidate=function(){this._invalidateTriangleBuffer();f.applySome(this._gpu,
a=>a.dispose());this._gpu=null};d._invalidateTriangleBuffer=function(){f.applySome(this._gpuComputeTriangles,a=>a.dispose());this._gpuComputeTriangles=null};d.destroy=function(){f.applySome(this._gpu,a=>a.dispose());f.applySome(this._gpuComputeTriangles,a=>a.dispose());f.applySome(this._cpu,a=>a.destroy());f.applySome(this._cpu2,a=>a.destroy())};d.clear=function(){this.dirty.start=Infinity;this.dirty.end=0;this.freeList=new r.FreeList({start:0,end:this._cpu.length/this.strideInt});this.fillPointer=
0};d.ensure=function(a){if(!(this.maxAvailableSpace()>=a)&&a*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const b=this._cpu.length/this.strideInt;a=Math.round(1.25*(b+a));this._cpu.expand(a*this.strideInt*Uint32Array.BYTES_PER_ELEMENT);this.freeList.free(b,a-b)}};d.set=function(a,b){this._cpu.array[a]!==b&&(this._cpu.array[a]=b,this.dirty.start=Math.min(a,this.dirty.start),this.dirty.end=Math.max(a,this.dirty.end))};d.getGPUBuffer=function(a,b=!1){if(!this.bufferSize)return null;
if(b){if("index"!==this.bufferType)throw Error("Tired to get triangle buffer, but target is not an index buffer");f.isNone(this._gpuComputeTriangles)&&(this._gpuComputeTriangles=this._createComputeBuffer(a));return this._gpuComputeTriangles}f.isNone(this._gpu)&&(this._gpu=this._createBuffer(a));return this._gpu};d.getCPUBuffer=function(){this._cpu2||(this._cpu2=this._cpu.slice());this._cpu2.length!==this._cpu.length&&this._cpu2.expand(this._cpu.length*this._cpu.array.BYTES_PER_ELEMENT);this._cpu2.set(this._cpu);
return this._cpu2};d.maxAvailableSpace=function(){return this.freeList.maxAvailableSpace()};d.insert=function(a,b,c,e){const g=c*this.strideInt;if(!g)return 0;a=new Uint32Array(a,b*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,g);c=f.unwrapOrThrow(this.freeList.firstFit(c),"First fit region must be defined")*this.strideInt;b=c/this.strideInt-b;if(0!==e)for(let h=0;h<a.length;h++)a[h]+=e;this._cpu.array.set(a,c);this.dirty.start=Math.min(this.dirty.start,c);this.dirty.end=Math.max(this.dirty.end,c+
g);this.fillPointer=Math.max(this.fillPointer,c+g);return b};d.free=function(a,b,c){const e=a*this.strideInt,g=(a+b)*this.strideInt;if(!0===c)for(c=a;c!==a+b;c++)this._cpu.array[c*this.strideInt]=2147450879;this.dirty.start=Math.min(this.dirty.start,e);this.dirty.end=Math.max(this.dirty.end,g);this.freeList.free(a,b)};d.upload=function(){this.dirty.end&&(this._invalidateTriangleBuffer(),f.isNone(this._gpu)||this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=
Infinity,this.dirty.end=0)};d._createBuffer=function(a){const b=n.Usage.DYNAMIC_DRAW;return"index"===this.bufferType?k.BufferObject.createIndex(a,b,this._cpu.array):k.BufferObject.createVertex(a,b,this._cpu.array)};d._createComputeBuffer=function(a){const b=n.Usage.DYNAMIC_DRAW,c=new Uint32Array(this.fillPointer/3);for(let e=0;e<this.fillPointer;e+=3)c[e/3]=this._cpu.array[e];return k.BufferObject.createIndex(a,b,c)};p._createClass(l,[{key:"elementSize",get:function(){return this._cpu.length/this.strideInt}},
{key:"invalidated",get:function(){return this.bufferSize&&!this._gpu}},{key:"invalidatedComputeBuffer",get:function(){return this.bufferSize&&!this._gpuComputeTriangles}},{key:"bufferSize",get:function(){return this._cpu.length/this.strideInt}}]);return l}();m.Buffer=t;Object.defineProperties(m,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});