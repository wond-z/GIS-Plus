// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/promiseUtils ../../../../core/urlUtils ../../../../core/workers/workers ./GlyphMosaic ./GlyphSource ./SpriteMosaic ../../tiling/TileKey".split(" "),function(q,k,l,r,x,t,u,n,v){let y=function(){function p(b,a,e){this._layer=b;this._styleRepository=a;this.devicePixelRatio=e;this._connection=this._glyphMosaic=this._spriteMosaic=null}var f=p.prototype;f.destroy=function(){this._connection&&(this._connection.close(),this._connection=
null);this._layer=this._styleRepository=null;this._spriteMosaic&&(this._spriteMosaic=null);this._glyphMosaic&&(this._glyphMosaic=null)};f.start=function(){var b=k._asyncToGenerator(function*(a){this._spriteSourcePromise=this._layer.loadSpriteSource(this.devicePixelRatio,a);this._spriteSourcePromise.then(d=>{this._spriteMosaic=new n(1024,1024,250);this._spriteMosaic.setSpriteSource(d)});const e=new u(this._layer.currentStyleInfo.glyphsUrl?r.addQueryParameters(this._layer.currentStyleInfo.glyphsUrl,
{...this._layer.customParameters,token:this._layer.apiKey}):null);this._glyphMosaic=new t(1024,1024,e);this._broadcastPromise=x.open("WorkerTileHandler",{client:this,schedule:a.schedule,signal:a.signal}).then(d=>{this._connection=d;this._layer&&!this._connection.closed&&(d=d.broadcast("setStyle",this._layer.currentStyleInfo.style,a),Promise.all(d).catch(c=>l.throwIfNotAbortError(c)))})});return function(a){return b.apply(this,arguments)}}();f.updateStyle=function(){var b=k._asyncToGenerator(function*(a){yield this._broadcastPromise;
return this._broadcastPromise=Promise.all(this._connection.broadcast("updateStyle",a))});return function(a){return b.apply(this,arguments)}}();f.setSpriteSource=function(b){const a=new n(1024,1024,250);a.setSpriteSource(b);this._spriteMosaic=a;this._spriteSourcePromise=Promise.resolve(b);return a};f.setStyle=function(){var b=k._asyncToGenerator(function*(a,e){yield this._broadcastPromise;this._styleRepository=a;this._spriteSourcePromise=this._layer.loadSpriteSource(this.devicePixelRatio,null);this._spriteSourcePromise.then(d=>
{this._spriteMosaic=new n(1024,1024,250);this._spriteMosaic.setSpriteSource(d)});a=new u(this._layer.currentStyleInfo.glyphsUrl?r.addQueryParameters(this._layer.currentStyleInfo.glyphsUrl,{...this._layer.customParameters,token:this._layer.apiKey}):null);this._glyphMosaic=new t(1024,1024,a);return this._broadcastPromise=Promise.all(this._connection.broadcast("setStyle",e))});return function(a,e){return b.apply(this,arguments)}}();f.fetchTileData=function(b,a){return this._getRefKeys(b,a).then(e=>{const d=
this._layer.sourceNameToSource,c=[];for(const h in d)c.push(h);return this._getSourcesData(c,e,a)})};f.parseTileData=function(b,a){const e=b&&b.data;if(!e)return Promise.resolve(null);const {sourceName2DataAndRefKey:d,transferList:c}=e;return 0===Object.keys(d).length?Promise.resolve(null):this._broadcastPromise.then(()=>this._connection.invoke("createTileAndParse",{key:b.key.id,sourceName2DataAndRefKey:d,styleLayerUIDs:b.styleLayerUIDs},{...a,transferList:c}))};f.getSprites=function(){var b=k._asyncToGenerator(function*(a){yield this._spriteSourcePromise;
return this._spriteMosaic.getSpriteItems(a)});return function(a){return b.apply(this,arguments)}}();f.getGlyphs=function(b){return this._glyphMosaic.getGlyphItems(b.font,b.codePoints)};f._getTilePayload=function(){var b=k._asyncToGenerator(function*(a,e,d){a=v.pool.acquire(a.id);const c=this._layer.sourceNameToSource[e],{level:h,row:m,col:g}=a;v.pool.release(a);try{return{protobuff:yield c.requestTile(h,m,g,d),sourceName:e}}catch(w){if(l.isAbortError(w))throw w;return{protobuff:null,sourceName:e}}});
return function(a,e,d){return b.apply(this,arguments)}}();f._getRefKeys=function(b,a){const e=this._layer.sourceNameToSource,d=[];for(const c in e){const h=e[c].getRefKey(b,a);d.push(h)}return l.eachAlways(d)};f._getSourcesData=function(b,a,e){const d=[];for(let c=0;c<a.length;c++)if(null==a[c].value||null==b[c])d.push(null);else{const h=this._getTilePayload(a[c].value,b[c],e);d.push(h)}return l.eachAlways(d).then(c=>{const h={},m=[];for(let g=0;g<c.length;g++)c[g].value&&c[g].value&&c[g].value.protobuff&&
0<c[g].value.protobuff.byteLength&&(h[c[g].value.sourceName]={refKey:a[g].value.id,protobuff:c[g].value.protobuff},m.push(c[g].value.protobuff));return{sourceName2DataAndRefKey:h,transferList:m}})};k._createClass(p,[{key:"spriteMosaic",get:function(){return this._spriteSourcePromise.then(()=>this._spriteMosaic)}},{key:"glyphMosaic",get:function(){return this._glyphMosaic}}]);return p}();q.TileHandler=y;Object.defineProperties(q,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});