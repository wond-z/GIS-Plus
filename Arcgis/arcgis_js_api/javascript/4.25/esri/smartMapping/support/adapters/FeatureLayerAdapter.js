// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("require ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/arrayUtils ../../../core/Error ../../../core/Logger ../../../core/maybe ../../../core/promiseUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../geometry/support/quantizationUtils ../../../layers/support/arcgisLayerUrl ../../../layers/support/fieldType ../../../layers/support/fieldUtils ../../../rest/support/GenerateRendererParameters ../../../rest/support/QuantizationParameters ../../../rest/support/StatisticDefinition ../../../rest/support/UniqueValueDefinition ../../statistics/support/predominanceUtils ../../statistics/support/statsWorker ../../statistics/support/utils ../../statistics/support/WorkerClient ../utils ./LayerAdapter ./support/utils ../../../statistics/utils ../../../tasks/GenerateRendererTask".split(" "),
function(R,w,N,O,B,S,G,C,T,U,H,V,W,X,Y,F,J,Z,K,aa,P,E,x,ba,D,ca,t,y,da){let L;H=function(Q){function M(b){return Q.call(this,b)||this}w._inheritsLoose(M,Q);var n=M.prototype;n.destroy=function(){this._hasLocalSource=null;this.workerClient?.destroy()};n._isStatsSupportedOnService=function(){const b=this.layer;return!b.get("capabilities.query.supportsStatistics")||"multipatch"===this.geometryType&&!X.isHostedAgolService(b.url)&&10.5>b.version?Promise.reject(new B("feature-layer-adapter:not-supported",
"Layer does not support statistics query")):Promise.resolve()};n._waitForLayerViewUpdate=function(){var b=w._asyncToGenerator(function*(a){if(!a)throw new B("feature-layer-adapter:insufficient-data","layerView is required to fetch the features");const c=new AbortController,d=T.whenOnce(()=>!a.updating,c.signal);yield C.timeout(d,5E3,c).catch(e=>{S.getLogger(this.declaredClass).warn("LayerView is taking too long to update. Aborting fetch from layerView.");throw e;})});return function(a){return b.apply(this,
arguments)}}();n._fetchFeaturesFromMemory=function(){var b=w._asyncToGenerator(function*(a,c,d,e){const k=this.layer;e="json"===e;if(this._hasLocalSource)return a=yield k.queryFeatures(c),e?t.ensureFeaturesJSON(a.features):a.features;yield this._waitForLayerViewUpdate(a);if(e&&"queryFeaturesJSON"in a&&a.queryFeaturesJSON)return{features:e}=yield a.queryFeaturesJSON(c,{signal:d}),e;a=yield a.queryFeatures(c,{signal:d});return e?t.ensureFeaturesJSON(a.features):a.features});return function(a,c,d,e){return b.apply(this,
arguments)}}();n._fetchFeaturesFromService=function(b,a){return this.layer.queryFeatures(b,{signal:a}).then(c=>c.features)};n._fetchFeaturesJSONFromService=function(b,a){return this._fetchFeaturesFromService(b,a).then(t.ensureFeaturesJSON)};n._fetchFeaturesForStats=function(b,a){return D.getFieldsList({field:b.field,field2:b.field2,field3:b.field3,normalizationField:b.normalizationField,valueExpression:b.valueExpression}).then(c=>this.getSampleFeatures({sampleSize:-1,view:b.view,returnGeometry:b.returnGeometry,
filter:b.filter,requiredFields:c,signal:b.signal},a))};n._summaryStatsFromGenRend=function(b){const a=b.normalizationType,c=b.normalizationField;return this.classBreaks({field:b.field,numClasses:5,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:a,normalizationField:"field"===a?c:void 0,minValue:b.minValue,maxValue:b.maxValue,filter:b.filter,signal:b.signal}).then(d=>{let e,k;d.classBreakInfos.some(l=>{l.hasAvg&&(e=l);return!!e});if(e){var f=e.maxValue-e.minValue;
k=e.minValue+f/2;f*=4}return y.processSummaryStatisticsResult({min:d.minValue,max:d.maxValue,avg:k,stddev:f})})};n._getSummaryStatsQuery=function(b,a){const {field:c,normalizationType:d,normalizationField:e,normalizationTotal:k,minValue:f,maxValue:l,filter:g}=b;a=this.supportsSQLExpression&&a?t.msSinceUnixEpochSQL(this,c):b.sqlExpression;var h=t.getFieldExpr({field:c,normalizationType:d,normalizationField:e,normalizationTotal:k,layer:this});const p=a||h;h=p?x.getRangeExpr(p,f,l):null;var m=x.getSQLFilterForNormalization({field:c,
normalizationField:e,normalizationType:d});b=x.mergeWhereClauses(b.sqlWhere,m);b=x.mergeWhereClauses(b,h);const v=y.isNullCountSupported({normalizationField:e,normalizationType:d,sqlExpression:a,supportsSQLExpression:this.supportsSQLExpression,minValue:f,maxValue:l}),q=F.isStringField(this.getField(c));h=y.statisticTypes.filter(r=>"nullcount"===r?v:q?"count"===r:!0);m=this.layer.createQuery();m.where=x.mergeWhereClauses(m.where,b);m.sqlFormat=a?"standard":null;m.outStatistics=h.map(r=>{const A=new K;
let z=null,u=null,I=`${r}_value`;"variance"===r?(z="var",u=p):"nullcount"===r?(z="count",u=this.layer.objectIdField,I="totalcount_value"):"median"===r?(z="percentile-continuous",u=p,A.statisticParameters={value:.5}):(z=r,u=p);A.statisticType=z;A.onStatisticField=u;A.outStatisticFieldName=I;return A});this._updateQueryWithFeatureFilter(m,g);return m};n._summaryStatsFromServiceQuery=function(){var b=w._asyncToGenerator(function*(a,c){yield this._isStatsSupportedOnService();"percent-of-total"===a.normalizationType&&
(a.normalizationTotal=yield this._getNormalizationTotal(a.field,a.normalizationType,a.filter));const d=this._getSummaryStatsQuery(a,c);a=yield this.layer.queryFeatures(d,{signal:a.signal});c=t.getSummaryStatisticsFromFeatureSet(a,c);return y.processSummaryStatisticsResult(c)});return function(a,c){return b.apply(this,arguments)}}();n._summaryStatsFromClientQuery=function(){var b=w._asyncToGenerator(function*(a,c){const d=this._getSummaryStatsQuery(a,c);a=yield this.layer.queryFeatures(d,{signal:a.signal});
c=t.getSummaryStatisticsFromFeatureSet(a,c);return y.processSummaryStatisticsResult(c)});return function(a,c){return b.apply(this,arguments)}}();n._getNormalizationTotalFromMemory=function(){var b=w._asyncToGenerator(function*(a,c,d){const {featuresJSON:e,graphics:k,layerView:f,query:l}=c;a=(!e&&!k&&f&&"querySummaryStatistics"in f?yield f.querySummaryStatistics(l,{field:a},{signal:d}):e?yield this.workerClient.summaryStatistics({field:a},e):yield E.summaryStatistics({attribute:{field:a},features:k})).sum;
if(null==a)throw new B("feature-layer-adapter:invalid","invalid normalizationTotal");return a});return function(a,c,d){return b.apply(this,arguments)}}();n._summaryStatsFromMemory=function(){var b=w._asyncToGenerator(function*(a,c){const {view:d,field:e,valueExpression:k,normalizationType:f,signal:l}=a,g={field:e,valueExpression:k,normalizationType:f,normalizationField:a.normalizationField,normalizationTotal:a.normalizationTotal,minValue:a.minValue,maxValue:a.maxValue},{featuresJSON:h,graphics:p,
layerView:m,query:v,fieldInfos:q}=yield this._processStatsFromMemoryParams({...a,layerViewFunc:"querySummaryStatistics"});k&&d&&(h||p)&&(g.fieldType=c?.type?Y.kebabDict.toJSON(c.type):null,g.viewInfoParams=t.getViewInfoParams(d),g.fieldInfos=q);"percent-of-total"===f&&null==a.normalizationTotal&&(g.normalizationTotal=yield this._getNormalizationTotalFromMemory(e,{featuresJSON:h,graphics:p,layerView:m,query:v},l));return!h&&!p&&m&&"querySummaryStatistics"in m?m.querySummaryStatistics(v,g,{signal:l}):
h?this.workerClient.summaryStatistics(g,h):E.summaryStatistics({attribute:g,features:p})});return function(a,c){return b.apply(this,arguments)}}();n._getFilteredFeatures=function(){var b=w._asyncToGenerator(function*(a,c){let d=[];if("intersects"===c?.spatialRelationship){L||(L=yield new Promise((e,k)=>R(["../../../geometry/geometryEngineAsync"],e,k)));c=G.isSome(c.geometry)?c.geometry:null;for(const e of a){const k=G.isSome(e.geometry)?e.geometry:null;k&&c&&(yield L.intersect(k,c))&&d.push(e)}}else d=
a;return a.length&&"declaredClass"in a[0]&&"esri.Graphic"===a[0].declaredClass?{graphics:d}:{featuresJSON:d}});return function(a,c){return b.apply(this,arguments)}}();n._processStatsFromMemoryParams=function(){var b=w._asyncToGenerator(function*(a){const {features:c,filter:d}=a;if(c?.length)return this._getFilteredFeatures(c,d);const {view:e,field:k,field2:f,field3:l,normalizationField:g,valueExpression:h,returnGeometry:p,layerViewFunc:m,signal:v}=a;let q=a=null,r=null,A=null,z=null;if(e)try{a=yield e.whenLayerView(this.layer),
q=m in a&&"function"===typeof a[m]}catch{q=!1}if(q)try{yield this._waitForLayerViewUpdate(a);const u=yield D.getFieldsList({field:k,field2:f,field3:l,normalizationField:g,valueExpression:h});t.getMissingFields(this,u,a).length?q=!1:(r=this.layer.createQuery(),r.outFields=u,r.returnGeometry=!1,this._updateQueryWithFeatureFilter(r,d));a.suspended&&(q=!1)}catch{q=!1}if(!q&&(A=yield this._fetchFeaturesForStats({field:k,field2:f,field3:l,valueExpression:h,normalizationField:g,returnGeometry:p,filter:d,
view:e,signal:v},"json"),z=(yield D.getFieldsList({valueExpression:h})).map(u=>this.getField(u)?.toJSON()).filter(Boolean),!A?.length))throw new B("feature-layer-adapter:insufficient-data","No features are available to calculate statistics");return{layerView:a,query:r,featuresJSON:A,fieldInfos:z}});return function(a){return b.apply(this,arguments)}}();n._uvFromGenRenderer=function(b,a){const c=b.field,d=new aa;d.attributeField=c;const e=new J;e.classificationDefinition=d;return this.generateRenderer(e,
b.signal).then(k=>{const f={},l=this.getField(c);k.uniqueValues.forEach(g=>{let h=g.value;if(null==h||""===h||"string"===typeof h&&(""===h.trim()||"\x3cnull\x3e"===h.toLowerCase()))h=null;null==f[h]?f[h]={count:g.count,data:F.isNumericField(l)&&h?Number(h):h}:f[h].count+=g.count});return{count:f}}).then(k=>y.createUVResult(k,[a],b.returnAllCodedValues))};n._getUVQueryOutStatistic=function(b,a){const c="countOF"+(b||"Expr"),d=new K;d.statisticType="count";d.onStatisticField=a?"1":b;d.outStatisticFieldName=
c;return d};n._getUVQuery=function(b){const {field:a,field2:c,field3:d,sqlExpression:e}=b,k=!(!a||!c),f=this.layer.createQuery();f.where=x.mergeWhereClauses(f.where,b.sqlWhere);f.sqlFormat=e?"standard":null;f.outStatistics=[this._getUVQueryOutStatistic(k?null:a,k?"1":e)].filter(Boolean);f.groupByFieldsForStatistics=[a||e,c,d].filter(Boolean);this._updateQueryWithFeatureFilter(f,b.filter);return f};n._uvFromServiceQuery=function(){var b=w._asyncToGenerator(function*(a,c){return this._isStatsSupportedOnService().then(()=>
this.layer.queryFeatures(this._getUVQuery(a),{signal:a.signal})).then(d=>t.getUniqueValuesFromFeatureSet(d,{layer:this,field:a.field,field2:a.field2,field3:a.field3,fieldDelimiter:D.FIELD_DELIMITER,view:a.view,signal:a.signal})).then(d=>y.createUVResult(d,c,a.returnAllCodedValues,D.FIELD_DELIMITER))});return function(a,c){return b.apply(this,arguments)}}();n._uvFromClientQuery=function(){var b=w._asyncToGenerator(function*(a,c){var {signal:d}=a;const e=this._getUVQuery(a);d=yield this.layer.queryFeatures(e,
{signal:d});d=yield t.getUniqueValuesFromFeatureSet(d,{layer:this,field:a.field,field2:a.field2,field3:a.field3,fieldDelimiter:D.FIELD_DELIMITER,view:a.view,signal:a.signal});return y.createUVResult(d,c,a.returnAllCodedValues,D.FIELD_DELIMITER)});return function(a,c){return b.apply(this,arguments)}}();n._uvFromMemory=function(){var b=w._asyncToGenerator(function*(a,c){const {view:d,field:e,valueExpression:k,returnAllCodedValues:f,signal:l}=a,{featuresJSON:g,graphics:h,layerView:p,query:m,fieldInfos:v}=
yield this._processStatsFromMemoryParams({...a,layerViewFunc:"queryUniqueValues"});a={field:e,field2:a.field2,field3:a.field3,fieldDelimiter:D.FIELD_DELIMITER,valueExpression:k,domains:c,returnAllCodedValues:f};k&&d&&(g||h)&&(a.viewInfoParams=t.getViewInfoParams(d),a.fieldInfos=v);return!g&&!h&&p&&"queryUniqueValues"in p?p.queryUniqueValues(m,a,{signal:l}):g?this.workerClient.uniqueValues(a,g):E.uniqueValues({attribute:a,features:h})});return function(a,c){return b.apply(this,arguments)}}();n._calcBinsSQL=
function(b,a,c){const d=[],e=a.length;a.forEach((k,f)=>{const [l,g]=k;k=null;k=0!==f||c?f!==e-1||c?x.mergeWhereClauses(`${b} >= ${l}`,`${b} ${f===e-1?" \x3c\x3d ":" \x3c "} ${g}`):`${b} >= ${l}`:`${b} < ${g}`;d.push("WHEN ("+k+") THEN "+(f+1))});return["CASE",d.join(" "),"ELSE 0 END"].join(" ")};n._getNormalizationTotal=function(b,a,c,d){return b&&"percent-of-total"===a?this.summaryStatistics({field:b,filter:c,signal:d}).then(e=>e.sum):Promise.resolve(null)};n._getQueryParamsForExpr=function(b,a){const c=
b.signal;if(!b.valueExpression&&!b.sqlExpression){const {field:e,normalizationType:k,normalizationField:f}=b;var d=e?this.getField(e):null;d=F.isDateField(d);a={field:e,normalizationType:k,normalizationField:f,normalizationTotal:a,layer:this};return{sqlExpression:d?t.msSinceUnixEpochSQL(this,e):t.getFieldExpr(a),sqlWhere:d?null:b.sqlWhere||x.getSQLFilterForNormalization({field:e,normalizationType:k,normalizationField:f}),filter:b.filter,signal:c}}return{valueExpression:b.valueExpression,sqlExpression:b.sqlExpression,
sqlWhere:b.sqlWhere,filter:b.filter,signal:c}};n._getDataRange=function(b,a,c){return null!=a&&null!=c?Promise.resolve({min:a,max:c}):this.summaryStatistics(b).then(d=>({min:d.min,max:d.max}))};n._histogramForExpr=function(b){return this._getNormalizationTotal(b.field,b.normalizationType,b.filter,b.signal).then(a=>{const c=this._getQueryParamsForExpr(b,a);return this._getDataRange(c,b.minValue,b.maxValue).then(d=>{const {min:e,max:k}=d,f=b.numBins||10;d=y.getEqualIntervalBins(e,k,f);d=this._calcBinsSQL(c.sqlExpression,
d,null!=b.minValue&&null!=b.maxValue);const l=new K({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),g=this.layer.createQuery();g.where=x.mergeWhereClauses(g.where,c.sqlWhere);g.sqlFormat="standard";g.outStatistics=[l];g.groupByFieldsForStatistics=[d];g.orderByFields=[d];this._updateQueryWithFeatureFilter(g,b.filter);return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(g,{signal:c.signal})).then(h=>t.getHistogramFromFeatureSet(h,e,k,f,a))})})};
n._histogramForField=function(b){let a=null;a=null!=b.minValue&&null!=b.maxValue?Promise.resolve({min:b.minValue,max:b.maxValue}):this.summaryStatistics(b).then(c=>{if(!c.count)throw new B("feature-layer-adapter:insufficient-data","Either the layer has no features or none of the features have data for the field");return{min:c.min,max:c.max}});return a.then(c=>this._getBins({min:c.min,max:c.max},b.field,b.numBins,b.view,b.filter,b.signal))};n._getBins=function(b,a,c=10,d,e,k){const {min:f,max:l,normTotal:g,
excludeZerosExpr:h}=b,p=b.intervals||y.getEqualIntervalBins(f,l,c);return this._queryBins(p,b.sqlExpr||a,h,d,e,k).then(m=>({bins:m.map((v,q)=>({minValue:p[q][0],maxValue:p[q][1],count:v.value})),minValue:f,maxValue:l,normalizationTotal:g}))};n._queryBins=function(b,a,c,d,e,k){const f=[],l=b.length;for(let g=0;g<l;g++){const h=x.mergeWhereClauses(c,x.mergeWhereClauses(a+" \x3e\x3d "+b[g][0],null!==b[g][1]?a+(g===l-1?" \x3c\x3d ":" \x3c ")+b[g][1]:""));f.push(h)}return C.eachAlways(f.map(g=>this.queryFeatureCount({whereClause:g,
view:d,filter:e,signal:k})))};n._binParamsFromGenRend=function(b,a){const {field:c,normalizationType:d,normalizationField:e,signal:k}=b,f=x.getSQLFilterForNormalization({field:c,normalizationType:d,normalizationField:e});b=new J({classificationDefinition:y.createClassBreaksDefinition({field:c,normalizationType:d,normalizationField:e,classificationMethod:b.classificationMethod,standardDeviationInterval:b.standardDeviationInterval,breakCount:b.numBins||10}),where:x.mergeWhereClauses(f,a)});return this.generateRenderer(b,
k).then(l=>{const {normalizationTotal:g,classBreaks:h}=l;return t.generateBinParams({field:c,normalizationType:d,normalizationField:e,normalizationTotal:g,classBreaks:h,where:f,layer:this})})};n._histogramFromMemory=function(){var b=w._asyncToGenerator(function*(a){const {view:c,field:d,valueExpression:e,signal:k}=a,{featuresJSON:f,graphics:l,layerView:g,query:h,fieldInfos:p}=yield this._processStatsFromMemoryParams({...a,layerViewFunc:"queryHistogram"}),m={field:d,valueExpression:e,normalizationType:a.normalizationType,
normalizationField:a.normalizationField,normalizationTotal:a.normalizationTotal,minValue:a.minValue,maxValue:a.maxValue,standardDeviationInterval:a.standardDeviationInterval,classificationMethod:a.classificationMethod,numBins:a.numBins};e&&c&&(f||l)&&(m.viewInfoParams=t.getViewInfoParams(c),m.fieldInfos=p);"percent-of-total"===a.normalizationType&&null==a.normalizationTotal&&(m.normalizationTotal=yield this._getNormalizationTotalFromMemory(d,{featuresJSON:f,graphics:l,layerView:g,query:h},k));return!f&&
!l&&g&&"queryHistogram"in g?g.queryHistogram(h,m,{signal:k}):f?this.workerClient.histogram(m,f):E.histogram({attribute:m,features:l})});return function(a){return b.apply(this,arguments)}}();n._classBreaksFromGenRend=function(b){const {field:a,normalizationType:c,normalizationField:d,normalizationTotal:e,signal:k}=b,f=x.getSQLFilterForNormalization({field:a,normalizationType:c,normalizationField:d});var l=t.getFieldExpr({field:a,normalizationType:c,normalizationField:d,normalizationTotal:e,layer:this});
l=x.getRangeExpr(l,b.minValue,b.maxValue);const g=y.createClassBreaksDefinition({field:a,normalizationType:c,normalizationField:d,classificationMethod:b.classificationMethod,standardDeviationInterval:b.standardDeviationInterval,breakCount:b.numClasses||5}),h=new J;h.classificationDefinition=g;h.where=x.mergeWhereClauses(f,l);return this.generateRenderer(h,k).then(p=>y.resolveCBResult(p,b.classificationMethod))};n._classBreaksFromInterpolation=function(b){const {minValue:a,maxValue:c}=b,d=b.numClasses||
5,e=[],k=(c-a)/d;for(let f=0;f<d;f++){const l=a+f*k;e.push({minValue:l,maxValue:l+k})}e[d-1].maxValue=c;b=y.resolveCBResult({classBreaks:e,normalizationTotal:b.normalizationTotal},b.classificationMethod);return Promise.resolve(b)};n._classBreaksFromMemory=function(){var b=w._asyncToGenerator(function*(a){const {view:c,field:d,valueExpression:e,signal:k}=a,{featuresJSON:f,graphics:l,layerView:g,query:h,fieldInfos:p}=yield this._processStatsFromMemoryParams({...a,layerViewFunc:"queryClassBreaks"}),
m={field:d,valueExpression:e,normalizationType:a.normalizationType,normalizationField:a.normalizationField,normalizationTotal:a.normalizationTotal,minValue:a.minValue,maxValue:a.maxValue,standardDeviationInterval:a.standardDeviationInterval,classificationMethod:a.classificationMethod,numClasses:a.numClasses};e&&c&&(f||l)&&(m.viewInfoParams=t.getViewInfoParams(c),m.fieldInfos=p);"percent-of-total"===a.normalizationType&&null==a.normalizationTotal&&(m.normalizationTotal=yield this._getNormalizationTotalFromMemory(d,
{featuresJSON:f,graphics:l,layerView:g,query:h},k));return!f&&!l&&g&&"queryClassBreaks"in g?g.queryClassBreaks(h,m,{signal:k}):f?this.workerClient.classBreaks(m,f):E.classBreaks({attribute:m,features:l})});return function(a){return b.apply(this,arguments)}}();n._heatmapStatsFromMemory=function(){var b=w._asyncToGenerator(function*(a,c){const {view:d,field:e,radius:k}=a,{featuresJSON:f,graphics:l}=yield this._processStatsFromMemoryParams({...a,returnGeometry:!0});a=new Z({extent:d.extent,tolerance:"2d"===
d.type?d.state.resolution:d.pixelSizeAt(d.center)});c={field:e,fieldOffset:c,radius:k,transform:W.toQuantizationTransform(a),spatialReference:d.spatialReference?.toJSON(),size:d.size};return f?.length||l?.length?f?this.workerClient.heatmapStatistics(c,f):E.heatmapStatistics({attribute:c,features:l}):{count:0,min:null,max:null,avg:null,stddev:null}});return function(a,c){return b.apply(this,arguments)}}();n._updateQueryWithFeatureFilter=function(b,a){a&&(b.geometry=a.geometry,b.spatialRelationship=
a.spatialRelationship)};n.getField=function(b=""){return this.layer.getField(b)};n.getFieldUsageInfo=function(b){return this.getField(b)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null};n.getFieldDomain=function(b,a){return this.layer.getFieldDomain(b,a)};n.summaryStatistics=function(b){const {field:a,normalizationType:c,sqlExpression:d,view:e,features:k,useFeaturesInView:f}=b,l=a?this.getField(a):null,g=F.isDateField(l),h=b.valueExpression||
d,p=h&&!d,m=e&&"3d"===e.type;return this._hasLocalSource||k||f||p?p||k||f||m?this._summaryStatsFromMemory(b,l):this._summaryStatsFromClientQuery(b,g):this.supportsSQLExpression||!g&&!h&&"natural-log"!==c&&"square-root"!==c?(c&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(b):this._summaryStatsFromServiceQuery(b,g)).catch(()=>{C.throwIfAborted(b.signal);return this._summaryStatsFromMemory(b,l)}):Promise.reject(new B("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries"))};
n.uniqueValues=function(){var b=w._asyncToGenerator(function*(a){const {valueExpression:c,sqlExpression:d,features:e,useFeaturesInView:k,signal:f}=a,l=c&&(!d||!this.supportsSQLExpression),g=this._hasLocalSource||e||k||l,h=a.view,p=h&&"3d"===h.type,m=yield t.getDomainsForFields(a,this);return g?l||e||k||p?this._uvFromMemory(a,m):this._uvFromClientQuery(a,m):this._uvFromServiceQuery(a,m).catch(v=>{C.throwIfAborted(f);return!a.field||a.field2||a.field3||a.filter?v:this._uvFromGenRenderer(a,m[0])}).catch(()=>
{C.throwIfAborted(f);return p?this._uvFromMemory(a,m):this._uvFromClientQuery(a,m)})});return function(a){return b.apply(this,arguments)}}();n.histogram=function(b){const {field:a,normalizationType:c,normalizationField:d,classificationMethod:e,view:k,filter:f,signal:l}=b;var g=a?this.getField(a):null;g=F.isDateField(g);const h=b.valueExpression||b.sqlExpression,p=h&&!b.sqlExpression,m=this.supportsSQLExpression,v=!e||"equal-interval"===e,q=b.minValue,r=b.maxValue,A=null!=q&&null!=r,z=b.numBins||10;
return this._hasLocalSource||b.features||b.useFeaturesInView||p?this._histogramFromMemory(b):(h||m)&&v?m||!h&&"natural-log"!==c&&"square-root"!==c?this._histogramForExpr(b):Promise.reject(new B("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries")):g&&v?Promise.reject(new B("feature-layer-adapter:not-supported","Normalization and date field are not allowed when layer does not support standardized SQL expression for queries")):c||!v?this._binParamsFromGenRend(b).then(u=>
{if(!A)return this._getBins(u,a,z,k,f,l);if(q>u.max||r<u.min)throw new B("histogram:insufficient-data","Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(v)return this._getBins({min:q,max:r,sqlExpr:u.sqlExpr,excludeZerosExpr:u.excludeZerosExpr},a,z,k,f,l);u=t.getFieldExpr({field:a,normalizationType:c,normalizationField:d,normalizationTotal:u.normTotal,layer:this});u=x.getRangeExpr(u,q,r);return this._binParamsFromGenRend(b,u).then(I=>this._getBins(I,
a,z,k,f,l))}):this._histogramForField(b)};n.classBreaks=function(b){const a=!1!==b.analyzeData,c=this._hasLocalSource||b.features||b.useFeaturesInView||b.valueExpression||b.filter;return a&&c?this._classBreaksFromMemory(b):(a?this._classBreaksFromGenRend(b):this._classBreaksFromInterpolation(b)).catch(()=>{C.throwIfAborted(b.signal);return this._classBreaksFromMemory(b)})};n.queryFeatureCount=function(b){if(this._hasLocalSource)return Promise.reject(new B("feature-layer-adapter:not-supported","Layer does not support count query"));
const a=this.layer,c=a.createQuery();c.where=x.mergeWhereClauses(c.where,b.whereClause);this._updateQueryWithFeatureFilter(c,b.filter);return a.queryFeatureCount(c,{signal:b.signal})};n.generateRenderer=function(b,a){var c=this.layer;if(this._hasLocalSource||10.1>c.version)return Promise.reject(new B("feature-layer-adapter:not-supported","Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)"));const d=new da({url:c.parsedUrl.path,source:c.dynamicDataSource,gdbVersion:c.gdbVersion});
c=c.createQuery();b.where=x.mergeWhereClauses(b.where,c.where);return d.execute(b,{signal:a})};n.heatmapStatistics=function(b){const {field:a,fieldOffset:c,view:d,signal:e}=b;return(a&&null==c?this.summaryStatistics({field:a,view:d,signal:e}):Promise.resolve(null)).then(k=>{let f=c||0;if(k){const {count:l,min:g,max:h}=k;l?g===h&&0===g?f=1:0>=h?f="abs":0>g&&(f=-1.01*g):f=1}return this._heatmapStatsFromMemory(b,f).then(l=>({...l,summaryStatistics:k,fieldOffset:f}))})};n.predominantCategories=function(){var b=
w._asyncToGenerator(function*(a){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new B("feature-layer-adapter:not-supported","Layer does not support advanced SQL expressions and standardized queries");const {fields:c,view:d,signal:e}=a;a=P.getArcadeForPredominantCategory(c);const k=P.getSQLForPredominantCategoryName(c);a=d&&this._hasLocalSource?yield this._uvFromMemory({valueExpression:a,view:d,signal:e}):yield this._uvFromServiceQuery({sqlExpression:k.expression,valueExpression:a,signal:e});
return t.getPredominantCategoriesFromUVInfos(a.uniqueValueInfos,c)});return function(a){return b.apply(this,arguments)}}();n.getSampleFeatures=function(){var b=w._asyncToGenerator(function*(a,c){const {view:d,sampleSize:e,requiredFields:k,returnGeometry:f,filter:l,signal:g}=a,h=this.layer.createQuery(),p="json"===c;h.outSpatialReference=a.spatialReference||d&&d.spatialReference;h.returnGeometry=!!f;h.outFields=k;this._updateQueryWithFeatureFilter(h,l);let m=[],v=!1;if(d)try{const q=yield d.whenLayerView(this.layer);
if(v=!t.getMissingFields(this,k,q).length)if(m=yield this._fetchFeaturesFromMemory(q,h,g,c),m.length&&0<e&&e<=m.length)return O.pickRandom(m,e,1)}catch(q){C.throwIfAborted(g)}try{if(this._hasLocalSource)return v?m:p?this._fetchFeaturesJSONFromService(h,g):this._fetchFeaturesFromService(h,g);const q=yield this.queryFeatureCount({view:d,filter:l,signal:g}),r=this.layer.capabilities.query.maxRecordCount;c=-1===e?q:e;c=r&&c>r?r:c;if(q<=m.length||m.length>=r)return m;const A=d.extent.width/d.width/d.scale*
4E5;h.maxAllowableOffset=a.resolution||A;if(q<=c)return p?this._fetchFeaturesJSONFromService(h,g):this._fetchFeaturesFromService(h,g);if(2E4>=q){const z=this.layer.createQuery();this._updateQueryWithFeatureFilter(z,l);const u=yield this.layer.queryObjectIds();h.objectIds=O.pickRandom(u,c,1);return p?this._fetchFeaturesJSONFromService(h,g):this._fetchFeaturesFromService(h,g)}this.layer.get("capabilities.query.supportsPagination")&&(h.num=Math.min(c,2E4));return p?this._fetchFeaturesJSONFromService(h,
g):this._fetchFeaturesFromService(h,g)}catch(q){return C.throwIfAborted(g),m}});return function(a,c){return b.apply(this,arguments)}}();n.load=function(b){var a=this;const c=this.layer.load(b).then(function(){var d=w._asyncToGenerator(function*(e){a.geometryType=e.geometryType;a.objectIdField=e.objectIdField;a.supportsSQLExpression=e.get("capabilities.query.supportsSqlExpression");a._hasLocalSource=!e.url&&!!e.source;a.hasQueryEngine=a._hasLocalSource;a.minScale=e.minScale;a.maxScale=e.maxScale;a.fullExtent=
e.fullExtent;a.workerClient=ba.WorkerClient.getInstance();yield a.workerClient.open(G.unwrap(G.unwrap(b).signal))});return function(e){return d.apply(this,arguments)}}());this.addResolvingPromise(c);return Promise.resolve(this)};return M}(ca);N.__decorate([U.property({constructOnly:!0})],H.prototype,"layer",void 0);return H=N.__decorate([V.subclass("esri.smartMapping.support.adapters.FeatureLayerAdapter")],H)});