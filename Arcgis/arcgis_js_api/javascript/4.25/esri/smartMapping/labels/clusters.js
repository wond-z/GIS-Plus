// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../symbols ../../core/Error ../../intl/messages ../../layers/support/LabelClass ../../layers/support/LabelExpressionInfo ../heuristics/clusterMinSize ../support/clusterUtils ../../views/2d/layers/support/clusterUtils ../../symbols/TextSymbol".split(" "),function(t,m,D,v,w,x,y,z,g,A,B){function C(a){return n.apply(this,arguments)}function n(){n=m._asyncToGenerator(function*(a){const {layer:b,renderer:h,view:d}=a;yield Promise.all([b.load(),
d.when()]);a=h||b.renderer;if(!A.isClusterCompatibleRenderer(a))throw new v("clusters-label-schemes:invalid-parameters","'renderer' is not valid");return{layer:b,renderer:a,view:d}});return n.apply(this,arguments)}function u(a){return p.apply(this,arguments)}function p(){p=m._asyncToGenerator(function*(a){const {renderer:b,view:h,statInfo:d}=a,f=d?.statisticType,e=d?g.getClusterField(d.attributeInfo,f):g.clusterCountField;a="type"===f?g.getPredominantTypeExpression("unique-value"===b.type?b.uniqueValueInfos:
[],e,a.noneValueLabel):`\n  $feature["${e}"];\n  var value = $feature["${e}"];\n  var num = Count(Text(Round(value)));\n  var label = When(\n    num < 4, Text(value, "#.#"),\n    num == 4, Text(value / Pow(10, 3), "#.0k"),\n    num <= 6, Text(value / Pow(10, 3), "#k"),\n    num == 7, Text(value / Pow(10, 6), "#.0m"),\n    num > 7, Text(value / Pow(10, 6), "#m"),\n    Text(value, "#,###")\n  );\n  return label;\n  `;const q=new B({haloColor:"#373837",haloSize:"1px",color:"#f0f0f0",font:{family:"Noto Sans",
size:"12px",weight:"bold"}});a=new x({symbol:q,deconflictionStrategy:"none",labelPlacement:"center-center",labelExpressionInfo:new y({expression:a})});return{name:d?`clusters-${f}-${g.getClusterFieldHash(e,f)}`:"clusters-count",labelingInfo:[a],clusterMinSize:yield z(a.symbol,h),fieldName:e}});return p.apply(this,arguments)}function r(){r=m._asyncToGenerator(function*(a){const [{renderer:b,layer:h,view:d},f]=yield Promise.all([C(a),w.fetchMessageBundle("esri/smartMapping/t9n/smartMapping")]);if(!b)return null;
a=null;const e=[];var q=g.getStatisticInfos(h,b,!1);const l=new Map;for(c of q)"size"===c.attributeInfo.vvType?l.set(c.statisticHash,c):l.has(c.statisticHash)||l.set(c.statisticHash,c);var c=[...l.values()];for(var k of c)c=yield u({renderer:b,view:d,statInfo:k,noneValueLabel:f.clusters.predominantNoneValue}),"size"===k.attributeInfo.vvType?a=c:e.push(c);k=yield u({renderer:b,view:d});a?e.unshift(k):a=k;return{primaryScheme:a,secondarySchemes:e}});return r.apply(this,arguments)}t.getLabelSchemes=
function(a){return r.apply(this,arguments)};Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});