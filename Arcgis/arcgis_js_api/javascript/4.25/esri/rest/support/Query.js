// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../TimeExtent ../../core/jsonMap ../../core/JSONSupport ../../core/lang ../../core/maybe ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/cast ../../core/accessorSupport/decorators/enumeration ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../core/accessorSupport/ensureType ../../geometry/support/jsonUtils ../../layers/support/source/DataLayerSource ./FullTextSearch ./QuantizationParameters ./StatisticDefinition ../../geometry/SpatialReference ../../geometry/Point".split(" "),
function(w,c,x,y,m,b,z,p,d,A,u,B,k,C,D,E,F,G,H,v,I){var g;const J=new m.JSONMap({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"});m=new m.JSONMap({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",
esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});b=g=function(e){function n(a){a=e.call(this,a)||this;a.aggregateIds=null;a.cacheHint=void 0;a.compactGeometryEnabled=!1;a.datumTransformation=null;a.defaultSpatialReferenceEnabled=!1;a.distance=void 0;a.dynamicDataSource=void 0;a.formatOf3DObjects=null;a.fullText=null;a.gdbVersion=null;a.geometry=null;a.geometryPrecision=void 0;a.groupByFieldsForStatistics=
null;a.having=null;a.historicMoment=null;a.maxAllowableOffset=void 0;a.maxRecordCountFactor=1;a.multipatchOption=null;a.num=void 0;a.objectIds=null;a.orderByFields=null;a.outFields=null;a.outSpatialReference=null;a.outStatistics=null;a.parameterValues=null;a.pixelSize=null;a.quantizationParameters=null;a.rangeValues=null;a.relationParameter=null;a.resultType=null;a.returnCentroid=!1;a.returnDistinctValues=!1;a.returnExceededLimitFeatures=!0;a.returnGeometry=!1;a.returnQueryGeometry=!1;a.returnM=void 0;
a.returnZ=void 0;a.sourceSpatialReference=null;a.spatialRelationship="intersects";a.start=void 0;a.sqlFormat=null;a.text=null;a.timeExtent=null;a.timeReferenceUnknownClient=!1;a.units=null;a.where=null;return a}w._inheritsLoose(n,e);n.from=function(a){return C.ensureClass(g,a)};var h=n.prototype;h.castDatumTransformation=function(a){return"number"===typeof a||"object"===typeof a?a:null};h.writeHistoricMoment=function(a,f){f.historicMoment=a&&a.getTime()};h.writeParameterValues=function(a,f){if(a){const q=
{};for(const r in a){const l=a[r];Array.isArray(l)?q[r]=l.map(t=>t instanceof Date?t.getTime():t):q[r]=l instanceof Date?l.getTime():l}f.parameterValues=q}};h.writeStart=function(a,f){f.resultOffset=this.start;f.resultRecordCount=this.num||10;f.where="1\x3d1"};h.writeWhere=function(a,f){f.where=a||"1\x3d1"};h.clone=function(){return new g(z.clone({aggregateIds:this.aggregateIds,cacheHint:this.cacheHint,compactGeometryEnabled:this.compactGeometryEnabled,datumTransformation:this.datumTransformation,
defaultSpatialReferenceEnabled:this.defaultSpatialReferenceEnabled,distance:this.distance,fullText:this.fullText,gdbVersion:this.gdbVersion,geometry:this.geometry,geometryPrecision:this.geometryPrecision,groupByFieldsForStatistics:this.groupByFieldsForStatistics,having:this.having,historicMoment:p.isSome(this.historicMoment)?new Date(this.historicMoment.getTime()):null,maxAllowableOffset:this.maxAllowableOffset,maxRecordCountFactor:this.maxRecordCountFactor,multipatchOption:this.multipatchOption,
num:this.num,objectIds:this.objectIds,orderByFields:this.orderByFields,outFields:this.outFields,outSpatialReference:this.outSpatialReference,outStatistics:this.outStatistics,parameterValues:this.parameterValues,pixelSize:this.pixelSize,quantizationParameters:this.quantizationParameters,rangeValues:this.rangeValues,relationParameter:this.relationParameter,resultType:this.resultType,returnDistinctValues:this.returnDistinctValues,returnGeometry:this.returnGeometry,returnCentroid:this.returnCentroid,
returnExceededLimitFeatures:this.returnExceededLimitFeatures,returnQueryGeometry:this.returnQueryGeometry,returnM:this.returnM,returnZ:this.returnZ,dynamicDataSource:this.dynamicDataSource,sourceSpatialReference:this.sourceSpatialReference,spatialRelationship:this.spatialRelationship,start:this.start,sqlFormat:this.sqlFormat,text:this.text,timeExtent:this.timeExtent,timeReferenceUnknownClient:this.timeReferenceUnknownClient,units:this.units,where:this.where}))};return n}(b.JSONSupport);b.MAX_MAX_RECORD_COUNT_FACTOR=
5;c.__decorate([d.property({json:{write:!0}})],b.prototype,"aggregateIds",void 0);c.__decorate([d.property({type:Boolean,json:{write:!0}})],b.prototype,"cacheHint",void 0);c.__decorate([d.property({type:Boolean,json:{default:!1,write:!0}})],b.prototype,"compactGeometryEnabled",void 0);c.__decorate([d.property({json:{write:!0}})],b.prototype,"datumTransformation",void 0);c.__decorate([A.cast("datumTransformation")],b.prototype,"castDatumTransformation",null);c.__decorate([d.property({type:Boolean,
json:{default:!1,write:!0}})],b.prototype,"defaultSpatialReferenceEnabled",void 0);c.__decorate([d.property({type:Number,json:{write:{overridePolicy(e){return{enabled:0<e}}}}})],b.prototype,"distance",void 0);c.__decorate([d.property({type:E.DataLayerSource,json:{write:!0}})],b.prototype,"dynamicDataSource",void 0);c.__decorate([d.property({type:String,json:{write:!0}})],b.prototype,"formatOf3DObjects",void 0);c.__decorate([d.property({type:[F],json:{write:{enabled:!0,overridePolicy(){return{enabled:p.isSome(this.fullText)&&
0<this.fullText.length}}}}})],b.prototype,"fullText",void 0);c.__decorate([d.property({type:String,json:{write:!0}})],b.prototype,"gdbVersion",void 0);c.__decorate([d.property({types:x.geometryTypes,json:{read:D.fromJSON,write:!0}})],b.prototype,"geometry",void 0);c.__decorate([d.property({type:Number,json:{write:!0}})],b.prototype,"geometryPrecision",void 0);c.__decorate([d.property({type:[String],json:{write:!0}})],b.prototype,"groupByFieldsForStatistics",void 0);c.__decorate([d.property({type:String,
json:{write:!0}})],b.prototype,"having",void 0);c.__decorate([d.property({type:Date})],b.prototype,"historicMoment",void 0);c.__decorate([k.writer("historicMoment")],b.prototype,"writeHistoricMoment",null);c.__decorate([d.property({type:Number,json:{write:!0}})],b.prototype,"maxAllowableOffset",void 0);c.__decorate([d.property({type:Number,cast(e){return 1>e?1:e>g.MAX_MAX_RECORD_COUNT_FACTOR?g.MAX_MAX_RECORD_COUNT_FACTOR:e},json:{write:{overridePolicy(e){return{enabled:1<e}}}}})],b.prototype,"maxRecordCountFactor",
void 0);c.__decorate([d.property({type:["xyFootprint"],json:{write:!0}})],b.prototype,"multipatchOption",void 0);c.__decorate([d.property({type:Number,json:{read:{source:"resultRecordCount"}}})],b.prototype,"num",void 0);c.__decorate([d.property({json:{write:!0}})],b.prototype,"objectIds",void 0);c.__decorate([d.property({type:[String],json:{write:!0}})],b.prototype,"orderByFields",void 0);c.__decorate([d.property({type:[String],json:{write:!0}})],b.prototype,"outFields",void 0);c.__decorate([d.property({type:v,
json:{name:"outSR",write:!0}})],b.prototype,"outSpatialReference",void 0);c.__decorate([d.property({type:[H],json:{write:{enabled:!0,overridePolicy(){return{enabled:p.isSome(this.outStatistics)&&0<this.outStatistics.length}}}}})],b.prototype,"outStatistics",void 0);c.__decorate([d.property({json:{write:!0}})],b.prototype,"parameterValues",void 0);c.__decorate([k.writer("parameterValues")],b.prototype,"writeParameterValues",null);c.__decorate([d.property({type:I,json:{write:!0}})],b.prototype,"pixelSize",
void 0);c.__decorate([d.property({type:G,json:{write:!0}})],b.prototype,"quantizationParameters",void 0);c.__decorate([d.property({type:[Object],json:{write:!0}})],b.prototype,"rangeValues",void 0);c.__decorate([d.property({type:String,json:{read:{source:"relationParam"},write:{target:"relationParam",overridePolicy(){return{enabled:"relation"===this.spatialRelationship}}}}})],b.prototype,"relationParameter",void 0);c.__decorate([d.property({type:String,json:{write:!0}})],b.prototype,"resultType",
void 0);c.__decorate([d.property({type:Boolean,json:{default:!1,write:!0}})],b.prototype,"returnCentroid",void 0);c.__decorate([d.property({type:Boolean,json:{default:!1,write:!0}})],b.prototype,"returnDistinctValues",void 0);c.__decorate([d.property({type:Boolean,json:{default:!0,write:!0}})],b.prototype,"returnExceededLimitFeatures",void 0);c.__decorate([d.property({type:Boolean,json:{write:!0}})],b.prototype,"returnGeometry",void 0);c.__decorate([d.property({type:Boolean,json:{default:!1,write:!0}})],
b.prototype,"returnQueryGeometry",void 0);c.__decorate([d.property({type:Boolean,json:{default:!1,write:!0}})],b.prototype,"returnM",void 0);c.__decorate([d.property({type:Boolean,json:{write:{overridePolicy(e){return{enabled:e}}}}})],b.prototype,"returnZ",void 0);c.__decorate([d.property({type:v,json:{write:!0}})],b.prototype,"sourceSpatialReference",void 0);c.__decorate([u.enumeration(J,{ignoreUnknown:!1,name:"spatialRel"})],b.prototype,"spatialRelationship",void 0);c.__decorate([d.property({type:Number,
json:{read:{source:"resultOffset"}}})],b.prototype,"start",void 0);c.__decorate([k.writer("start"),k.writer("num")],b.prototype,"writeStart",null);c.__decorate([d.property({type:String,json:{write:!0}})],b.prototype,"sqlFormat",void 0);c.__decorate([d.property({type:String,json:{write:!0}})],b.prototype,"text",void 0);c.__decorate([d.property({type:y,json:{write:!0}})],b.prototype,"timeExtent",void 0);c.__decorate([d.property({type:Boolean,json:{default:!1,write:!0}})],b.prototype,"timeReferenceUnknownClient",
void 0);c.__decorate([u.enumeration(m,{ignoreUnknown:!1}),d.property({json:{write:{overridePolicy(e){return{enabled:!!e&&null!=this.distance&&0<this.distance}}}}})],b.prototype,"units",void 0);c.__decorate([d.property({type:String,json:{write:{overridePolicy(e){return{enabled:null!=e||null!=this.start&&0<this.start}}}}})],b.prototype,"where",void 0);c.__decorate([k.writer("where")],b.prototype,"writeWhere",null);return b=g=c.__decorate([B.subclass("esri.rest.support.Query")],b)});