// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.25/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../Graphic ../../PopupTemplate ../../symbols ../../core/Clonable ../../core/JSONSupport ../../core/maybe ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../geometry/Point ../route/utils ./networkEnums".split(" "),function(r,c,t,u,
v,b,w,e,d,z,A,l,x,n,y,h,f){var p;b=p=function(q){function m(a){a=q.call(this,a)||this;a.arriveCurbApproach=null;a.arriveTime=null;a.arriveTimeOffset=null;a.bearing=null;a.bearingTol=null;a.cumulativeCosts=null;a.cumulativeDistance=null;a.cumulativeDuration=null;a.curbApproach=null;a.departCurbApproach=null;a.departTime=null;a.departTimeOffset=null;a.distanceToNetworkInMeters=null;a.geometry=null;a.lateDuration=null;a.locationType=null;a.name=null;a.navLatency=null;a.objectId=null;a.popupTemplate=
null;a.posAlong=null;a.routeName=null;a.serviceCosts=null;a.serviceDistance=null;a.serviceDuration=null;a.sequence=null;a.sideOfEdge=null;a.snapX=null;a.snapY=null;a.snapZ=null;a.sourceId=null;a.sourceOid=null;a.status=null;a.symbol=null;a.timeWindowEnd=null;a.timeWindowEndOffset=null;a.timeWindowStart=null;a.timeWindowStartOffset=null;a.type="stop";a.violations=null;a.waitDuration=null;a.wait=null;return a}r._inheritsLoose(m,q);var k=m.prototype;k.readArriveTimeOffset=function(a,g){return h.getTimezoneOffset(g.attributes.ArriveTime,
g.attributes.ArriveTimeUTC)};k.readCumulativeCosts=function(a,g){return h.getPrefixedProperties(g.attributes,"Cumul_")};k.readDepartTimeOffset=function(a,g){return h.getTimezoneOffset(g.attributes.DepartTime,g.attributes.DepartTimeUTC)};k.readServiceCosts=function(a,g){return h.getPrefixedProperties(g.attributes,"Attr_")};k.writeServiceCosts=function(a,g){h.setPrefixedProperties(a,g,"Attr_")};k.writeTimeWindowEnd=function(a,g){e.isNone(a)||(g.attributes||(g.attributes={}),g.attributes.TimeWindowEnd=
a.getTime())};k.writeTimeWindowStart=function(a,g){e.isNone(a)||(g.attributes||(g.attributes={}),g.attributes.TimeWindowStart=a.getTime())};k.readViolations=function(a,g){return h.getPrefixedProperties(g.attributes,"Violation_")};k.readWait=function(a,g){return h.getPrefixedProperties(g.attributes,"Wait_")};m.fromGraphic=function(a){return new p({arriveCurbApproach:e.isSome(a.attributes.ArrivalCurbApproach)?f.curbApproachJsonMap.fromJSON(a.attributes.ArrivalCurbApproach):null,arriveTime:e.isSome(a.attributes.ArrivalTime)?
new Date(a.attributes.ArrivalTime):null,arriveTimeOffset:a.attributes.ArrivalUTCOffset,cumulativeCosts:e.isSome(a.attributes.CumulativeCosts)?h.toKebabImpedanceAttributes(JSON.parse(a.attributes.CumulativeCosts)):null,cumulativeDistance:a.attributes.CumulativeMeters??null,cumulativeDuration:a.attributes.CumulativeMinutes??null,curbApproach:e.isSome(a.attributes.CurbApproach)?f.curbApproachJsonMap.fromJSON(a.attributes.CurbApproach):null,departCurbApproach:e.isSome(a.attributes.DepartureCurbApproach)?
f.curbApproachJsonMap.fromJSON(a.attributes.DepartureCurbApproach):null,departTime:e.isSome(a.attributes.DepartureTime)?new Date(a.attributes.DepartureTime):null,departTimeOffset:a.attributes.DepartureUTCOffset??null,geometry:a.geometry,lateDuration:a.attributes.LateMinutes??null,locationType:e.isSome(a.attributes.LocationType)?f.locationTypeJsonMap.fromJSON(a.attributes.LocationType):null,name:a.attributes.Name,objectId:a.attributes.ObjectID??a.attributes.__OBJECTID,popupTemplate:a.popupTemplate,
routeName:a.attributes.RouteName,sequence:a.attributes.Sequence??null,serviceCosts:e.isSome(a.attributes.ServiceCosts)?h.toKebabImpedanceAttributes(JSON.parse(a.attributes.ServiceCosts)):null,serviceDistance:a.attributes.ServiceMeters??null,serviceDuration:a.attributes.ServiceMinutes??null,status:e.isSome(a.attributes.Status)?f.statusJsonMap.fromJSON(a.attributes.Status):null,symbol:a.symbol,timeWindowEnd:e.isSome(a.attributes.TimeWindowEnd)?new Date(a.attributes.TimeWindowEnd):null,timeWindowEndOffset:a.attributes.TimeWindowEndUTCOffset??
null,timeWindowStart:e.isSome(a.attributes.TimeWindowStart)?new Date(a.attributes.TimeWindowStart):null,timeWindowStartOffset:a.attributes.TimeWindowStartUTCOffset??null,waitDuration:a.attributes.WaitMinutes??null})};k.toGraphic=function(){const a={ObjectID:e.unwrap(this.objectId),ArrivalCurbApproach:e.isSome(this.arriveCurbApproach)?f.curbApproachJsonMap.toJSON(this.arriveCurbApproach):null,ArrivalTime:e.isSome(this.arriveTime)?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,
CumulativeCosts:e.isSome(this.cumulativeCosts)?JSON.stringify(h.fromKebabImpedanceAttributes(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:e.isSome(this.curbApproach)?f.curbApproachJsonMap.toJSON(this.curbApproach):null,DepartureCurbApproach:e.isSome(this.departCurbApproach)?f.curbApproachJsonMap.toJSON(this.departCurbApproach):null,DepartureTime:e.isSome(this.departTime)?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,
LateMinutes:this.lateDuration,LocationType:e.isSome(this.locationType)?f.locationTypeJsonMap.toJSON(this.locationType):null,Name:e.unwrap(this.name),RouteName:e.unwrap(this.routeName),Sequence:this.sequence,ServiceCosts:e.isSome(this.serviceCosts)?JSON.stringify(h.fromKebabImpedanceAttributes(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:e.isSome(this.status)?f.statusJsonMap.toJSON(this.status):null,TimeWindowEnd:e.isSome(this.timeWindowEnd)?
this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:e.isSome(this.timeWindowStart)?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new t({geometry:this.geometry,attributes:a,symbol:this.symbol,popupTemplate:this.popupTemplate})};return m}(b.ClonableMixin(w.JSONSupport));b.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",
editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",
alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",
alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",
code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",
type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",
alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},
{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",
type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}];b.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",
isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},
stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},
{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",
isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",
isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,
tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},
{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]};c.__decorate([d.property({type:f.curbApproachJsonMap.apiValues,
json:{read:{source:"attributes.ArrivalCurbApproach",reader:f.curbApproachJsonMap.read}}})],b.prototype,"arriveCurbApproach",void 0);c.__decorate([d.property({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],b.prototype,"arriveTime",void 0);c.__decorate([d.property()],b.prototype,"arriveTimeOffset",void 0);c.__decorate([l.reader("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],b.prototype,"readArriveTimeOffset",null);c.__decorate([d.property({json:{name:"attributes.Bearing",
read:!1,write:!0}})],b.prototype,"bearing",void 0);c.__decorate([d.property({json:{name:"attributes.BearingTol",read:!1,write:!0}})],b.prototype,"bearingTol",void 0);c.__decorate([d.property()],b.prototype,"cumulativeCosts",void 0);c.__decorate([l.reader("cumulativeCosts",["attributes"])],b.prototype,"readCumulativeCosts",null);c.__decorate([d.property()],b.prototype,"cumulativeDistance",void 0);c.__decorate([d.property()],b.prototype,"cumulativeDuration",void 0);c.__decorate([d.property({type:f.curbApproachJsonMap.apiValues,
json:{name:"attributes.CurbApproach",read:{reader:f.curbApproachJsonMap.read},write:{writer:f.curbApproachJsonMap.write}}})],b.prototype,"curbApproach",void 0);c.__decorate([d.property({type:f.curbApproachJsonMap.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:f.curbApproachJsonMap.read}}})],b.prototype,"departCurbApproach",void 0);c.__decorate([d.property({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],b.prototype,"departTime",void 0);c.__decorate([d.property()],
b.prototype,"departTimeOffset",void 0);c.__decorate([l.reader("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],b.prototype,"readDepartTimeOffset",null);c.__decorate([d.property({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],b.prototype,"distanceToNetworkInMeters",void 0);c.__decorate([d.property({type:y,json:{write:!0}})],b.prototype,"geometry",void 0);c.__decorate([d.property()],b.prototype,"lateDuration",void 0);c.__decorate([d.property({type:f.locationTypeJsonMap.apiValues,
json:{name:"attributes.LocationType",read:{reader:f.locationTypeJsonMap.read},write:{writer:f.locationTypeJsonMap.write}}})],b.prototype,"locationType",void 0);c.__decorate([d.property({json:{name:"attributes.Name"}})],b.prototype,"name",void 0);c.__decorate([d.property({json:{name:"attributes.NavLatency",read:!1,write:!0}})],b.prototype,"navLatency",void 0);c.__decorate([d.property({json:{name:"attributes.ObjectID"}})],b.prototype,"objectId",void 0);c.__decorate([d.property({type:u})],b.prototype,
"popupTemplate",void 0);c.__decorate([d.property({json:{read:{source:"attributes.PosAlong"}}})],b.prototype,"posAlong",void 0);c.__decorate([d.property({json:{name:"attributes.RouteName"}})],b.prototype,"routeName",void 0);c.__decorate([d.property()],b.prototype,"serviceCosts",void 0);c.__decorate([l.reader("serviceCosts",["attributes"])],b.prototype,"readServiceCosts",null);c.__decorate([n.writer("serviceCosts")],b.prototype,"writeServiceCosts",null);c.__decorate([d.property()],b.prototype,"serviceDistance",
void 0);c.__decorate([d.property()],b.prototype,"serviceDuration",void 0);c.__decorate([d.property({json:{name:"attributes.Sequence"}})],b.prototype,"sequence",void 0);c.__decorate([d.property({type:f.sideOfEdgeJsonMap.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:f.sideOfEdgeJsonMap.read}}})],b.prototype,"sideOfEdge",void 0);c.__decorate([d.property({json:{read:{source:"attributes.SnapX"}}})],b.prototype,"snapX",void 0);c.__decorate([d.property({json:{read:{source:"attributes.SnapY"}}})],
b.prototype,"snapY",void 0);c.__decorate([d.property({json:{read:{source:"attributes.SnapZ"}}})],b.prototype,"snapZ",void 0);c.__decorate([d.property({json:{read:{source:"attributes.SourceID"}}})],b.prototype,"sourceId",void 0);c.__decorate([d.property({json:{read:{source:"attributes.SourceOID"}}})],b.prototype,"sourceOid",void 0);c.__decorate([d.property({type:f.statusJsonMap.apiValues,json:{read:{source:"attributes.Status",reader:f.statusJsonMap.read}}})],b.prototype,"status",void 0);c.__decorate([d.property({types:v.symbolTypes})],
b.prototype,"symbol",void 0);c.__decorate([d.property({type:Date,json:{name:"attributes.TimeWindowEnd"}})],b.prototype,"timeWindowEnd",void 0);c.__decorate([n.writer("timeWindowEnd")],b.prototype,"writeTimeWindowEnd",null);c.__decorate([d.property()],b.prototype,"timeWindowEndOffset",void 0);c.__decorate([d.property({type:Date,json:{name:"attributes.TimeWindowStart"}})],b.prototype,"timeWindowStart",void 0);c.__decorate([n.writer("timeWindowStart")],b.prototype,"writeTimeWindowStart",null);c.__decorate([d.property()],
b.prototype,"timeWindowStartOffset",void 0);c.__decorate([d.property({readOnly:!0,json:{read:!1}})],b.prototype,"type",void 0);c.__decorate([d.property()],b.prototype,"violations",void 0);c.__decorate([l.reader("violations",["attributes"])],b.prototype,"readViolations",null);c.__decorate([d.property()],b.prototype,"waitDuration",void 0);c.__decorate([d.property()],b.prototype,"wait",void 0);c.__decorate([l.reader("wait",["attributes"])],b.prototype,"readWait",null);return b=p=c.__decorate([x.subclass("esri.rest.support.Stop")],
b)});