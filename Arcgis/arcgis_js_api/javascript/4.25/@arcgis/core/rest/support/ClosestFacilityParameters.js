/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../geometry.js";import{ClonableMixin as e}from"../../core/Clonable.js";import r from"../../core/Collection.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{a as i,i as s}from"../../chunks/maybe.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import{m as p}from"../../chunks/ensureType.js";import{e as u}from"../../chunks/enumeration.js";import{r as l}from"../../chunks/reader.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import{w as m}from"../../chunks/writer.js";import{a as c}from"../../chunks/commonProperties3.js";import{i as y,r as d,a as j,k as h,l as v,b as w,m as g,o as f,n as b,y as B,z as k}from"../../chunks/networkEnums.js";import A from"./TravelMode.js";import P from"../../geometry/SpatialReference.js";import"../../geometry/Extent.js";import"../../chunks/string.js";import"../../chunks/object.js";import"../../geometry/Geometry.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/ArrayPool.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../chunks/jsonMap.js";import"../../geometry/support/jsonUtils.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";var T;function O(t,e,o){s(t)&&(e[o]=r.isCollection(t)?{features:t.toArray().map((t=>t.toJSON()))}:t.toJSON())}let D=T=class extends(e(o)){constructor(t){super(t),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.defaultCutoff=null,this.defaultTargetFacilityCount=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.facilities=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.incidents=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines=null,this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnDirections=!1,this.returnFacilities=!1,this.returnIncidents=!1,this.returnPointBarriers=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=null,this.timeOfDay=null,this.timeOfDayIsUTC=null,this.timeOfDayUsage=null,this.travelDirection=null,this.travelMode=null,this.useHierarchy=!1}static from(t){return p(T,t)}readAccumulateAttributes(t){return i(t)?null:t.map((t=>y.fromJSON(t)))}writeAccumulateAttributes(t,e,r){!i(t)&&t.length&&(e[r]=t.map((t=>y.toJSON(t))))}writeFacilities(t,e,r){O(t,e,r)}writeIncidents(t,e,r){O(t,e,r)}writePointBarriers(t,e,r){O(t,e,r)}writePolygonBarrier(t,e,r){O(t,e,r)}writePolylineBarrier(t,e,r){O(t,e,r)}readRestrictionAttributes(t){return i(t)?null:t.map((t=>d.fromJSON(t)))}writeRestrictionAttributes(t,e,r){!i(t)&&t.length&&(e[r]=t.map((t=>d.toJSON(t))))}readTimeOfDay(t,e){const{timeOfDay:r}=e;return i(r)?null:"now"===r?"now":new Date(r)}writeTimeOfDay(t,e){i(t)||(e.timeOfDay="now"===t?"now":t.getTime())}};t([n({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],D.prototype,"accumulateAttributes",void 0),t([l("accumulateAttributes")],D.prototype,"readAccumulateAttributes",null),t([m("accumulateAttributes")],D.prototype,"writeAccumulateAttributes",null),t([n(c)],D.prototype,"apiKey",void 0),t([n({json:{write:!0}})],D.prototype,"attributeParameterValues",void 0),t([n({type:Number,json:{write:!0}})],D.prototype,"defaultCutoff",void 0),t([n({type:Number,json:{write:!0}})],D.prototype,"defaultTargetFacilityCount",void 0),t([n({type:String,json:{write:!0}})],D.prototype,"directionsLanguage",void 0),t([u(j)],D.prototype,"directionsLengthUnits",void 0),t([u(h)],D.prototype,"directionsOutputType",void 0),t([u(v)],D.prototype,"directionsStyleName",void 0),t([u(w,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],D.prototype,"directionsTimeAttribute",void 0),t([n({json:{write:!0}})],D.prototype,"facilities",void 0),t([m("facilities")],D.prototype,"writeFacilities",null),t([n({type:Number,json:{write:!0}})],D.prototype,"geometryPrecision",void 0),t([n({type:Number,json:{write:!0}})],D.prototype,"geometryPrecisionM",void 0),t([n({type:Number,json:{write:!0}})],D.prototype,"geometryPrecisionZ",void 0),t([n({type:Boolean,json:{write:!0}})],D.prototype,"ignoreInvalidLocations",void 0),t([u(y,{name:"impedanceAttributeName",ignoreUnknown:!1})],D.prototype,"impedanceAttribute",void 0),t([n({json:{write:!0}})],D.prototype,"incidents",void 0),t([m("incidents")],D.prototype,"writeIncidents",null),t([n({type:Number,json:{write:!0}})],D.prototype,"outputGeometryPrecision",void 0),t([u(g)],D.prototype,"outputGeometryPrecisionUnits",void 0),t([u(f)],D.prototype,"outputLines",void 0),t([n({type:P,json:{name:"outSR",write:!0}})],D.prototype,"outSpatialReference",void 0),t([n({json:{write:!0}})],D.prototype,"overrides",void 0),t([n({json:{name:"barriers",write:!0}})],D.prototype,"pointBarriers",void 0),t([m("pointBarriers")],D.prototype,"writePointBarriers",null),t([n({json:{write:!0}})],D.prototype,"polygonBarriers",void 0),t([m("polygonBarriers")],D.prototype,"writePolygonBarrier",null),t([n({json:{write:!0}})],D.prototype,"polylineBarriers",void 0),t([m("polylineBarriers")],D.prototype,"writePolylineBarrier",null),t([n({type:Boolean,json:{write:!0}})],D.prototype,"preserveObjectID",void 0),t([n({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],D.prototype,"restrictionAttributes",void 0),t([l("restrictionAttributes")],D.prototype,"readRestrictionAttributes",null),t([m("restrictionAttributes")],D.prototype,"writeRestrictionAttributes",null),t([u(b)],D.prototype,"restrictUTurns",void 0),t([n({type:Boolean,json:{write:!0}})],D.prototype,"returnDirections",void 0),t([n({type:Boolean,json:{write:!0}})],D.prototype,"returnFacilities",void 0),t([n({type:Boolean,json:{write:!0}})],D.prototype,"returnIncidents",void 0),t([n({type:Boolean,json:{name:"returnBarriers",write:!0}})],D.prototype,"returnPointBarriers",void 0),t([n({type:Boolean,json:{write:!0}})],D.prototype,"returnPolygonBarriers",void 0),t([n({type:Boolean,json:{write:!0}})],D.prototype,"returnPolylineBarriers",void 0),t([n({type:Boolean,json:{name:"returnCFRoutes",write:!0}})],D.prototype,"returnRoutes",void 0),t([n({type:Boolean,json:{write:!0}})],D.prototype,"returnTraversedEdges",void 0),t([n({type:Boolean,json:{write:!0}})],D.prototype,"returnTraversedJunctions",void 0),t([n({type:Boolean,json:{write:!0}})],D.prototype,"returnTraversedTurns",void 0),t([n({type:Boolean,json:{write:!0}})],D.prototype,"returnZ",void 0),t([n({type:Date,json:{type:Number,write:!0}})],D.prototype,"timeOfDay",void 0),t([l("timeOfDay")],D.prototype,"readTimeOfDay",null),t([m("timeOfDay")],D.prototype,"writeTimeOfDay",null),t([n({type:Boolean,json:{write:!0}})],D.prototype,"timeOfDayIsUTC",void 0),t([u(B)],D.prototype,"timeOfDayUsage",void 0),t([u(k)],D.prototype,"travelDirection",void 0),t([n({type:A,json:{write:!0}})],D.prototype,"travelMode",void 0),t([n({type:Boolean,json:{write:!0}})],D.prototype,"useHierarchy",void 0),D=T=t([a("esri.rest.support.ClosestFacilityParameters")],D);const S=D;export{S as default};
