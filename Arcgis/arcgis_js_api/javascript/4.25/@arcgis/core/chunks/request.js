/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{u as t}from"./maybe.js";import"../core/lang.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";let r;function s(s,a){let o=a.responseType;o?"array-buffer"!==o&&"blob"!==o&&"json"!==o&&"native"!==o&&"native-request-init"!==o&&"text"!==o&&(o="text"):o="json",a.responseType=o;const n=t(a.signal);return delete a.signal,globalThis.invokeStaticMessage("request",{url:s,options:a},{signal:n}).then((async t=>{let i,l,c,u,p;if(t.data)if(t.data instanceof ArrayBuffer){if(!("json"!==o&&"text"!==o&&"blob"!==o||(i=new Blob([t.data]),"json"!==o&&"text"!==o||(r||(r=new FileReaderSync),u=r.readAsText(i),"json"!==o)))){try{l=JSON.parse(u||null)}catch(t){const r={...t,url:s,requestOptions:a};throw new e("request:server",t.message,r)}if(l.error){const t={...l.error,url:s,requestOptions:a};throw new e("request:server",l.error.message,t)}}}else"native"===o&&(t.data.signal=n,c=await fetch(t.data.url,t.data));switch(o){case"blob":p=i;break;case"json":p=l;break;case"native":p=c;break;case"text":p=u;break;default:p=t.data}return{data:p,requestOptions:a,ssl:t.ssl,url:s}}))}export{s as execute};
