/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../core/Evented.js";import{i as t,a as r,u as s}from"./maybe.js";import{s as i,a,g as o,d as n}from"./vec3.js";import{e as h,b as c,s as l}from"./mathUtils.js";import{f as d,c as u}from"./vec4f32.js";import{projectBuffer as _}from"../geometry/projection.js";import{c as m,i as p,h as f}from"./aaBoundingBox.js";import{m as g}from"./dehydratedFeatures.js";import{g as y}from"./elevationInfoUtils.js";import{E as v}from"./ElevationInfo.js";import{_ as R}from"./tslib.es6.js";import O from"../core/Accessor.js";import{IdentifiableMixin as w}from"../core/Identifiable.js";import{property as b}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import{subclass as C}from"../core/accessorSupport/decorators/subclass.js";import{L as D,j as G,H as j,R as P,E as A}from"./line2.js";import{U as S}from"./basicInterfaces.js";import{L as E}from"./LaserlineVisualElement.js";import{V as T}from"./VisualElementResources.js";import{E as I}from"./MultipassGeometryTest.glsl.js";import{c as M}from"./line.js";import{H as x}from"./bufferWriterUtils.js";import{R as F}from"./Material.js";import{V}from"./VertexAttribute.js";import{R as W}from"./DefaultBufferWriter.js";class H{constructor(e){this._resourceFactory=e,this._resources=null,this._visible=!0,this._attached=!1}destroy(){this._destroyResources()}get resources(){return t(this._resources)?this._resources.external:null}get visible(){return this._visible}set visible(e){e!==this._visible&&(this._visible=e,this._syncGeometriesToRenderer())}get attached(){return this._attached}set attached(e){e!==this._attached&&(this._attached=e,this._createOrDestroyResources())}recreate(){this.attached&&this._createResources()}recreateGeometry(){this._resourceFactory.recreateGeometry?r(this._resources)||(this._ensureRenderGeometriesRemoved(),this._resourceFactory.recreateGeometry(this._resources.external),this._syncGeometriesToRenderer()):this.recreate()}_createOrDestroyResources(){this._attached?r(this._resources)&&this._createResources():this._destroyResources()}_createResources(){this._destroyResources();const e=this._resourceFactory.createResources(),t=new U({view:this._resourceFactory.view}),r=this._resourceFactory.view.basemapTerrain?.overlayManager;this._resources={layerView:new U({view:this._resourceFactory.view}),external:e,geometriesAdded:!1},r&&(this._resources.drapeSourceRenderer=r.registerGeometryDrapeSource(t)),this._syncGeometriesToRenderer()}_destroyResources(){if(r(this._resources))return;this._ensureRenderGeometriesRemoved();const e=this._resourceFactory.view.basemapTerrain?.overlayManager;e&&e.unregisterDrapeSource(this._resources.layerView),this._resources=null}_syncGeometriesToRenderer(){this._visible?this._ensureRenderGeometriesAdded():this._ensureRenderGeometriesRemoved()}_ensureRenderGeometriesRemoved(){r(this._resources)||r(this._resources.drapeSourceRenderer)||this._resources.geometriesAdded&&(this._resources.drapeSourceRenderer.removeGeometries(this._resources.external.geometries,G.UPDATE),this._resources.geometriesAdded=!1)}_ensureRenderGeometriesAdded(){r(this._resources)||r(this._resources.drapeSourceRenderer)||this._resources.geometriesAdded||(this._resources.drapeSourceRenderer.addGeometries(this._resources.external.geometries,G.UPDATE),this._resources.geometriesAdded=!0)}}let U=class extends(w(O)){constructor(e){super(e),this.drapeSourceType=D.Features,this.updatePolicy=S.SYNC}};R([b({constructOnly:!0})],U.prototype,"view",void 0),R([b({readOnly:!0})],U.prototype,"drapeSourceType",void 0),U=R([C("DrapedVisualElementLayerView")],U);class B{constructor(t){this.view=null,this._attachmentOrigin=g(0,0,0,null),this._attachmentOriginDirty=!0,this.events=new e,this._isDraped=!1,this._geometry=null,this._width=1,this._color=d(1,0,1,1),this._innerWidth=0,this._innerColor=d(1,1,1,1),this._stipplePattern=null,this._stippleOffColor=null,this._falloff=0,this._elevationInfo=null,this._laserlineStyle=null,this._laserlineEnabled=!1,this._renderOccluded=F.OccludeAndTransparentStencil,this._resources=new T({view:t.view,createResources:e=>this._createResources(e),recreateGeometry:(e,t)=>(e.geometries.length=0,this._recreateGeometry(t,e.material,e.geometries),e.geometries)}),this._attachmentOrigin.spatialReference=t.view.spatialReference,this._drapedResources=new H({view:t.view,createResources:()=>this._createDrapedResources(),recreateGeometry:e=>{e.geometries=this._createRenderGeometriesDraped(e.material),this._attachmentOriginChanged()}});let r=!0;this._laserline=new E({view:t.view});for(const e in t)e in this?"attached"===e?r=t[e]:this[e]=t[e]:console.error("Cannot set unknown property",e);this.attached=r}destroy(){this._resources.destroy(),this._drapedResources.destroy(),this._laserline.destroy()}get isDraped(){return this._isDraped}set isDraped(e){e!==this._isDraped&&(this._isDraped=e,this._updateAttached(this.attached),this._laserline.attached=this._laserlineAttached)}get _laserlineAttached(){return this.attached&&this.visible&&t(this._laserlineStyle)&&!this.isDraped&&this.laserlineEnabled}get visible(){return this._resources.visible}set visible(e){this._resources.visible=e,this._drapedResources.visible=e,this._laserline.attached=this._laserlineAttached}get attached(){return this._resources.attached||this._drapedResources.attached}set attached(e){this._updateAttached(e)}_updateAttached(e){this._resources.attached=!this.isDraped&&e,this._drapedResources.attached=this.isDraped&&e,this._laserline.attached=this._laserlineAttached,this.attached&&this._attachmentOriginChanged()}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._resources.recreateGeometry(),this._drapedResources.recreateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this._updateMaterial())}get color(){return this._color}set color(e){h(e,this._color)||(c(this._color,e),this._updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(e){e!==this._innerWidth&&(this._innerWidth=e,this._updateMaterial())}get innerColor(){return this._innerColor}set innerColor(e){h(e,this._innerColor)||(c(this._innerColor,e),this._updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(e){const r=t(e)!==t(this._stipplePattern);this._stipplePattern=e,r?this._resources.recreate():this._updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(e){e&&this._stippleOffColor&&h(e,this._stippleOffColor)||(this._stippleOffColor=e?u(e):null,this._updateMaterial())}get falloff(){return this._falloff}set falloff(e){e!==this._falloff&&(this._falloff=e,this._updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this._resources.recreateGeometry()}get laserlineStyle(){return this._laserlineStyle}set laserlineStyle(e){this._laserlineStyle=e,this._laserline.attached=this._laserlineAttached,t(e)&&(this._laserline.style=e)}get laserlineEnabled(){return this._laserlineEnabled}set laserlineEnabled(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,this._laserline.attached=this._laserlineAttached)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get attachmentOrigin(){if(!this._attachmentOriginDirty)return this._attachmentOrigin;const e=t(this._resources.resources)?this._resources.resources.geometries:null;if(!e||0===e.length)return null;i(z,0,0,0);let r=0;for(const t of e){const e=t.vertexAttributes.get(V.POSITION),i=t.indices.get(V.POSITION),o=s(this._resources.resources).material.isClosed(e.data,i);x(e,i,o,N)&&(a(z,z,N),r++)}return 0===r?null:(o(z,z,1/r),this.view.renderCoordsHelper.fromRenderCoords(z,this._attachmentOrigin),this._attachmentOriginDirty=!1,this._attachmentOrigin)}_updateMaterial(){t(this._resources.resources)&&this._resources.resources.material.setParameters(this._materialParameters),t(this._drapedResources.resources)&&this._drapedResources.resources.material.setParameters(this._materialParameters)}get _isClosed(){return t(this.geometry)&&"polygon"===this.geometry.type}get _materialParameters(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:!1,isClosed:this._isClosed,falloff:this._falloff,innerColor:this._innerColor,innerWidth:this._innerWidth,join:"round",hasPolygonOffset:!0,renderOccluded:this._normalizedRenderOccluded}}get _normalizedRenderOccluded(){return this.isDraped&&this._renderOccluded===F.OccludeAndTransparentStencil?F.OccludeAndTransparent:this._renderOccluded}_recreateGeometry(e,t,r){const s=this._createRenderGeometries();for(const i of s)e.addGeometry(i,t),r.push(i);this._attachmentOriginChanged()}_attachmentOriginChanged(){this._attachmentOriginDirty=!0,this.events.emit("attachment-origin-changed")}_createResources(e){const t=new W(this._materialParameters),r=[];return this._recreateGeometry(e,t,r),{material:t,geometries:r,forEach:e=>{e(t),r.forEach(e)}}}_createDrapedResources(){const e=new W(this._materialParameters);return{material:e,geometries:this._createRenderGeometriesDraped(e)}}_createRenderGeometriesDraped(e){const t=this.geometry;if(r(t)||r(this.view.basemapTerrain.spatialReference))return[];const s=j(t,this.view.basemapTerrain.spatialReference),i=[];for(const{position:t}of s.lines){const r={overlayInfo:{spatialReference:this.view.basemapTerrain.spatialReference,renderCoordsHelper:this.view.renderCoordsHelper},attributeData:{position:t},removeDuplicateStartEnd:this._isClosed},s=new P(M(r),e),a=p(L);f(a,t),l(s.boundingSphere,.5*(a[0]+a[3]),.5*(a[1]+a[4]),0,.5*Math.sqrt((a[3]-a[0])*(a[3]-a[0])+(a[4]-a[1])*(a[4]-a[1]))),i.push(s)}return i}calculateMapBounds(e){if(r(this._resources.resources))return!1;const t=this.view.renderCoordsHelper;for(const r of this._resources.resources.geometries){const s=r.vertexAttributes.get(V.POSITION),i=new Float64Array(s.data.length);_(s.data,t.spatialReference,0,i,this.view.spatialReference,0,s.data.length/3),f(e,i)}return!0}_createRenderGeometries(){const e=this.geometry;if(r(e))return[];const t=A(e,this.view.elevationProvider,this.view.renderCoordsHelper,I.fromElevationInfo(this.elevationInfo??new v({mode:y(e,null)}))),s=[],i=[];for(const{position:e,mapPosition:r}of t.lines){const t={attributeData:{position:e,mapPosition:r},removeDuplicateStartEnd:this._isClosed};s.push(M(t)),i.push(e)}return this._laserline.pathVerticalPlane=i,s}}const L=m(),N=n(),z=n();export{B as O};
