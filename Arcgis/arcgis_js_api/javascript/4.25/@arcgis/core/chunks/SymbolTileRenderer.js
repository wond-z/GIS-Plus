/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import{h as e}from"./object.js";import{createResolver as s,isAbortError as r}from"../core/promiseUtils.js";import"./Logger.js";import"./ensureType.js";import"../core/lang.js";import"../core/Error.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";import{c as o}from"./aaBoundingRect.js";import{C as n}from"./CircularArray.js";import{i as a,a as h,g as l,c as u,d as p,e as d}from"./maybe.js";import{c as f}from"./mat2df32.js";import{a as m,W as c}from"./enums4.js";import{x as _}from"./Utils18.js";import{D as y,W as b,F as j}from"./FeatureContainer.js";import{L as g,T as x,F as w}from"./BufferPool.js";import{B as C,V as S}from"./FramebufferObject.js";import{U as v}from"./enums3.js";import{s as E}from"./schemaUtils.js";import{B as U}from"./BaseTileRenderer.js";import{k as T}from"./visualVariablesUtils.js";import{b as V}from"./WGLContainer.js";import"../config.js";import"./string.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"./mathUtils.js";import"./vec3.js";import"./common.js";import"../geometry/Extent.js";import"../core/accessorSupport/decorators/property.js";import"./get.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./ArrayPool.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"./number2.js";import"./enums.js";import"./Texture.js";import"./context-util.js";import"./VertexElementDescriptor.js";import"./mat2d.js";import"./mat3.js";import"./mat3f32.js";import"./definitions.js";import"./TiledDisplayObject.js";import"./DisplayObject.js";import"../core/Evented.js";import"./TileKey2.js";import"./Queue.js";import"./TileContainer.js";import"./screenUtils.js";import"./unitUtils.js";import"./jsonMap.js";import"./projectionEllipsoid.js";import"./lengthUtils.js";import"./utils19.js";import"./MaterialKey.js";import"./alignmentUtils.js";import"./heatmapUtils.js";import"./vec4f64.js";import"../Color.js";import"./colorUtils.js";import"./capabilities2.js";import"../core/sql.js";import"./diffUtils.js";import"../core/Collection.js";import"./shared.js";import"./SimpleObservable.js";import"./labelingInfo.js";import"../layers/support/LabelClass.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"./enumeration.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../geometry.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../symbols/Symbol.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils2.js";import"../symbols/edges/Edges3D.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils3.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../kernel.js";import"../request.js";import"../core/Loadable.js";import"../core/Promise.js";import"./locale.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../core/Clonable.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./labelUtils.js";import"./defaults.js";import"./defaultsJSON.js";import"../symbols/support/jsonUtils.js";import"./symbolConversion.js";import"./visualVariablesUtils2.js";import"./createSymbolSchema.js";import"./cimAnalyzer.js";import"./fontUtils.js";import"./shapingUtils.js";import"./BidiEngine.js";import"./vec2.js";import"./vec2f32.js";import"./Rect.js";import"./utils7.js";import"./callExpressionWithFeature.js";import"./quantizationUtils.js";import"./GeometryUtils.js";import"./floatRGBA.js";import"./ExpandedCIM.js";import"./clusterUtils.js";import"../layers/support/AggregateField.js";import"../layers/support/ExpressionInfo.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"./LegendOptions.js";import"../renderers/visualVariables/support/SizeStop.js";import"./sizeVariableUtils.js";import"./visualVariableUtils.js";import"../Graphic.js";import"../PopupTemplate.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./number.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"./compilerUtils.js";import"./util.js";import"../core/HandleOwner.js";import"./WatchUpdatingTracking.js";import"../core/reactiveUtils.js";import"./WGLBrushVTLSymbol.js";import"./vec4f32.js";import"./StyleDefinition.js";import"./config.js";import"./GeometryUtils2.js";import"./pixelUtils.js";import"../layers/support/PixelBlock.js";import"./DefaultVertexAttributeLayouts.js";import"./vec2f64.js";import"./ShaderCompiler.js";import"./ProgramTemplate.js";import"./Program.js";import"./heatmapTextureUtils.js";import"./Container.js";import"./EffectView.js";import"./parser.js";import"./mat4f32.js";import"./mat4.js";import"./_commonjsHelpers.js";import"./earcut.js";import"./featureConversionUtils.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";class B{constructor(t){this._savedCursor=null,this._savedOffset=null,this._head=t,this._cursor=t}static from(t){const e=I.from(new Float32Array(t));return new B(e)}get id(){return this._cursor.id}get baseZoom(){return this._cursor.baseZoom}get anchorX(){return this._cursor.anchorX}get anchorY(){return this._cursor.anchorY}get directionX(){return this._cursor.directionX}get directionY(){return this._cursor.directionY}get size(){return this._cursor.size}get materialKey(){return this._cursor.materialKey}get boundsCount(){return this._cursor.boundsCount}computedMinZoom(){return this._cursor.computedMinZoom()}setComputedMinZoom(t){return this._cursor.setComputedMinZoom(t)}boundsComputedAnchorX(t){return this._cursor.boundsComputedAnchorX(t)}boundsComputedAnchorY(t){return this._cursor.boundsComputedAnchorY(t)}setBoundsComputedAnchorX(t,e){return this._cursor.setBoundsComputedAnchorX(t,e)}setBoundsComputedAnchorY(t,e){return this._cursor.setBoundsComputedAnchorY(t,e)}boundsX(t){return this._cursor.boundsX(t)}boundsY(t){return this._cursor.boundsY(t)}boundsWidth(t){return this._cursor.boundsWidth(t)}boundsHeight(t){return this._cursor.boundsHeight(t)}link(t){if(a(t._head))return this._cursor.link(t._head)}getCursor(){return this.copy()}copy(){const t=new B(this._head?.copy());if(!t._head)return t;let e=t._head,s=t._head._link;for(;s;)e._link=s.copy(),e=s,s=e._link;return t}peekId(){return this._cursor.peekId()??this._cursor._link.peekId()}nextId(){const t=this.id;for(;t===this.id;)if(!this.next())return!1;return!0}save(){this._savedCursor=this._cursor,this._savedOffset=this._cursor._offset}restore(){this._savedCursor&&(this._cursor=this._savedCursor),null!=this._savedOffset&&(this._cursor._offset=this._savedOffset)}next(){if(!this._cursor)return!1;if(!this._cursor.next()){if(!this._cursor._link)return!1;this._cursor=this._cursor._link,this._cursor._offset=0}return!0}lookup(t){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(t);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}delete(t){let e=this._head,s=null;for(;e;){if(e.delete(t))return e.isEmpty()&&a(s)&&(s._link=e._link),!0;s=e,e=e._link}return!1}}class I{constructor(t){this._offset=-1,this._link=null,this._count=0,this._deletedCount=0,this._offsets={instance:null},this._buffer=t}static from(t){return new I(new Float32Array(t))}isEmpty(){return this._deletedCount===this.count}get count(){return this._count||(this._count=this._computeCount()),this._count}get id(){return this._buffer[this._offset+0]}set id(t){this._buffer[this._offset+0]=t}get baseZoom(){return this._buffer[this._offset+1]}get anchorX(){return this._buffer[this._offset+2]}get anchorY(){return this._buffer[this._offset+3]}get directionX(){return this._buffer[this._offset+4]}get directionY(){return this._buffer[this._offset+5]}get size(){return this._buffer[this._offset+6]}get materialKey(){return this._buffer[this._offset+7]}computedMinZoom(){return this._buffer[this._offset+8]}setComputedMinZoom(t){this._buffer[this._offset+8]=t}get boundsCount(){return this._buffer[this._offset+9]}boundsComputedAnchorX(t){return this._buffer[this._offset+10+6*t+0]}boundsComputedAnchorY(t){return this._buffer[this._offset+10+6*t+1]}setBoundsComputedAnchorX(t,e){this._buffer[this._offset+10+6*t+0]=e}setBoundsComputedAnchorY(t,e){this._buffer[this._offset+10+6*t+1]=e}boundsX(t){return this._buffer[this._offset+10+6*t+2]}boundsY(t){return this._buffer[this._offset+10+6*t+3]}boundsWidth(t){return this._buffer[this._offset+10+6*t+4]}boundsHeight(t){return this._buffer[this._offset+10+6*t+5]}link(t){let e=this;for(;e._link;)e=e._link;e._link=t}getCursor(){return this.copy()}copy(){const t=new I(this._buffer);return t._link=this._link,t._offset=this._offset,t._deletedCount=this._deletedCount,t._offsets=this._offsets,t._count=this._count,t}peekId(){const t=this._offset+10+6*this.boundsCount+0;return t>=this._buffer.length?0:this._buffer[t]}next(){let t=0;for(;this._offset<this._buffer.length&&t++<100&&(-1===this._offset?this._offset=0:this._offset+=10+6*this.boundsCount,4294967296===this.id););return 4294967296!==this.id&&this._offset<this._buffer.length}delete(t){const e=this._offset,s=this.lookup(t);if(s)for(this.id=4294967295,++this._deletedCount;this.next()&&this.id===t;)this.id=4294967295,++this._deletedCount;return this._offset=e,s}lookup(t){const e=this._offset;if(h(this._offsets.instance)){this._offsets.instance=new Map;const t=this.copy();t._offset=-1;let e=0;for(;t.next();)t.id!==e&&(this._offsets.instance.set(t.id,t._offset),e=t.id)}return!!this._offsets.instance.has(t)&&(this._offset=this._offsets.instance.get(t),4294967296!==this.id||(this._offset=e,!1))}_computeCount(){const t=this._offset;let e=0;for(this._offset=-1;this.next();)e++;return this._offset=t,e}}class L{constructor(t,e,s,r,i){this.target=t,this.geometryType=e,this.materialKey=s,this.indexFrom=r,this.indexCount=i}get indexEnd(){return this.indexFrom+this.indexCount}extend(t){this.indexCount+=t}}class M{constructor(t,e){this.geometryType=0,this._target=t,this.geometryType=e}static from(t,e,s,r){const i=new M(t,e);if(a(r))for(const t of r)s.seekIndex(t),i.addRecord(s);else for(;s.next();)i.addRecord(s);return i}addRecord(t){const e=this._target,s=this.geometryType,r=t.materialKey;let i=t.indexFrom,o=t.indexCount;const n=t.vertexFrom,a=t.vertexCount;if(o||(i=n,o=a),h(this._head)){const t=new L(e,s,r,i,o);return void(this._head=new g(t))}let l=null,u=this._head;for(;u;){if(i<u.data.indexFrom)return this._insert(r,i,o,l,u);l=u,u=u.next}this._insert(r,i,o,l,null)}forEach(t){a(this._head)&&this._head.forEach(t)}*infos(){if(a(this._head))for(const t of this._head.values())yield t}_insert(t,e,s,r,i){if(h(r)&&h(i)){const r=new L(this._target,this.geometryType,t,e,s);this._head=new g(r)}return h(r)&&a(i)?this._insertAtHead(t,e,s,i):a(r)&&h(i)?this._insertAtEnd(t,e,s,r):a(r)&&a(i)?this._insertAtMiddle(t,e,s,r,i):void 0}_insertAtHead(t,e,s,r){const i=e+s;if(t===r.data.materialKey&&i===r.data.indexFrom)r.data.indexFrom=e,r.data.indexCount+=s;else{const i=new L(this._target,this.geometryType,t,e,s);this._head=new g(i),this._head.next=r}}_insertAtEnd(t,e,s,r){if(r.data.materialKey===t&&r.data.indexEnd===e)r.data.indexCount+=s;else{const i=new L(this._target,this.geometryType,t,e,s),o=new g(i);r.next=o}}_insertAtMiddle(t,e,s,r,i){const o=e+s;if(r.data.materialKey===t&&r.data.indexEnd===e)r.data.indexCount+=s,r.data.materialKey===i.data.materialKey&&r.data.indexEnd===i.data.indexFrom&&(r.data.indexCount+=i.data.indexCount,r.next=i.next);else if(t===i.data.materialKey&&o===i.data.indexFrom)i.data.indexFrom=e,i.data.indexCount+=s;else{const o=new L(this._target,this.geometryType,t,e,s),n=new g(o);r.next=n,n.next=i}}}class k{constructor(t,e,s,r){const i=x.create(e*s*Uint32Array.BYTES_PER_ELEMENT,r);this.size=e,this.strideInt=s,this.bufferType=t,this.dirty={start:1/0,end:0},this._gpu=null,this._cpu=i,this.clear()}get elementSize(){return this._cpu.length/this.strideInt}get invalidated(){return this.bufferSize&&!this._gpu}get invalidatedComputeBuffer(){return this.bufferSize&&!this._gpuComputeTriangles}invalidate(){this._invalidateTriangleBuffer(),l(this._gpu,(t=>t.dispose())),this._gpu=null}_invalidateTriangleBuffer(){l(this._gpuComputeTriangles,(t=>t.dispose())),this._gpuComputeTriangles=null}destroy(){l(this._gpu,(t=>t.dispose())),l(this._gpuComputeTriangles,(t=>t.dispose())),l(this._cpu,(t=>t.destroy())),l(this._cpu2,(t=>t.destroy()))}clear(){this.dirty.start=1/0,this.dirty.end=0,this.freeList=new w({start:0,end:this._cpu.length/this.strideInt}),this.fillPointer=0}ensure(t){if(!(this.maxAvailableSpace()>=t)&&t*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const e=this._cpu.length/this.strideInt,s=Math.round(1.25*(e+t)),r=s*this.strideInt;this._cpu.expand(r*Uint32Array.BYTES_PER_ELEMENT),this.freeList.free(e,s-e)}}set(t,e){this._cpu.array[t]!==e&&(this._cpu.array[t]=e,this.dirty.start=Math.min(t,this.dirty.start),this.dirty.end=Math.max(t,this.dirty.end))}getGPUBuffer(t,e=!1){if(!this.bufferSize)return null;if(e){if("index"!==this.bufferType)throw new Error("Tired to get triangle buffer, but target is not an index buffer");return h(this._gpuComputeTriangles)&&(this._gpuComputeTriangles=this._createComputeBuffer(t)),this._gpuComputeTriangles}return h(this._gpu)&&(this._gpu=this._createBuffer(t)),this._gpu}getCPUBuffer(){if(!this._cpu2){const t=this._cpu.slice();this._cpu2=t}return this._cpu2.length!==this._cpu.length&&this._cpu2.expand(this._cpu.length*this._cpu.array.BYTES_PER_ELEMENT),this._cpu2.set(this._cpu),this._cpu2}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(t,e,s,r){const i=s*this.strideInt;if(!i)return 0;const o=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,n=new Uint32Array(t,o,i),a=u(this.freeList.firstFit(s),"First fit region must be defined")*this.strideInt,h=i,l=a/this.strideInt-e;if(0!==r)for(let t=0;t<n.length;t++)n[t]+=r;return this._cpu.array.set(n,a),this.dirty.start=Math.min(this.dirty.start,a),this.dirty.end=Math.max(this.dirty.end,a+h),this.fillPointer=Math.max(this.fillPointer,a+h),l}free(t,e,s){const r=t*this.strideInt,i=(t+e)*this.strideInt;if(!0===s)for(let s=t;s!==t+e;s++)this._cpu.array[s*this.strideInt]=2147450879;this.dirty.start=Math.min(this.dirty.start,r),this.dirty.end=Math.max(this.dirty.end,i),this.freeList.free(t,e)}upload(){if(this.dirty.end){if(this._invalidateTriangleBuffer(),h(this._gpu))return this.dirty.start=1/0,void(this.dirty.end=0);this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=1/0,this.dirty.end=0}}_createBuffer(t){const e=v.DYNAMIC_DRAW;return"index"===this.bufferType?C.createIndex(t,e,this._cpu.array):C.createVertex(t,e,this._cpu.array)}_createComputeBuffer(t){const e=v.DYNAMIC_DRAW,s=new Uint32Array(this.fillPointer/3);for(let t=0;t<this.fillPointer;t+=3)s[t/3]=this._cpu.array[t];return C.createIndex(t,e,s)}}class R{constructor(t,e){this._vaos=new Map,this._indicesInvalid=!1,this.geometryType=t,this._stage=e}destroy(){for(const[t,e]of this._vaos)a(e)&&e.dispose(!1);this._indexBuffer=p(this._indexBuffer),this._vertexBuffer=p(this._vertexBuffer)}insert(t,e,s){if(!t.records.byteLength)return;const r=t.stride;if(this._vertexBuffer&&this._indexBuffer){const s=t.indices.byteLength/4,i=t.vertices.byteLength/r;this._indexBuffer.ensure(s),this._vertexBuffer.ensure(i);const{vertices:o,indices:n}=t,a=y.from(t.records),h=this._vertexBuffer.insert(o,0,o.byteLength/r,0),l=this._indexBuffer.insert(n,0,n.byteLength/4,h);if(a.forEach((t=>{t.indexFrom+=l,t.vertexFrom+=h})),u(this._records,"Expected records to be defined").link(a),e)this._indicesInvalid=!0;else if(this._displayList){const t=a.getCursor();for(;t.next();)this._displayList.addRecord(t)}}else{const s=t.indices.byteLength/4,i=t.vertices.byteLength/r,o=r/Uint32Array.BYTES_PER_ELEMENT,n=this._stage.bufferPool;this._records=y.from(t.records),this._indexBuffer=new k("index",s,1,n),this._vertexBuffer=new k("vertex",i,o,n),this._indexBuffer.insert(t.indices,0,t.indices.byteLength/4,0),this._vertexBuffer.insert(t.vertices,0,t.vertices.byteLength/r,0),e&&(this._indicesInvalid=!0)}}remove(t){if(!h(this._records))for(const e of t){const t=this._records.getCursor();if(!t.lookup(e))continue;const s=t.indexFrom,r=t.vertexFrom;let i=t.indexCount,o=t.vertexCount;for(;t.next()&&t.id===e;)i+=t.indexCount,o+=t.vertexCount;this._indexBuffer.free(s,i),this._vertexBuffer.free(r,o,!0),this._records.delete(e)}}getVAO(t,e,s,r){if(!this._vertexBuffer||!this._indexBuffer||h(this._records)||!this._vertexBuffer.bufferSize)return null;const i=r?1:0;let o=this._vaos.get(i);(this._vertexBuffer.invalidated||this._indexBuffer.invalidated||r&&this._indexBuffer.invalidatedComputeBuffer)&&(l(o,(t=>t.dispose(!1))),o=null),this._vertexBuffer.upload(),this._indexBuffer.upload();const n=this._indexBuffer.getGPUBuffer(t,1===i),a=this._vertexBuffer.getGPUBuffer(t);return o||(o=new S(t,s,e,{geometry:a},n),this._vaos.set(i,o)),o}forEachCommand(t){if(!h(this._records)){if(this._sortIndices(this._records),!this._displayList){const t=this._cursorIndexOrder;this._displayList=M.from(this,this.geometryType,this._records.getCursor(),t)}this._displayList.forEach(t)}}_sortIndices(t){const e=!!this._indexBuffer.bufferSize;if(!this._indicesInvalid)return;this._indicesInvalid=!1;let s=0;const r=t.getCursor(),i=[],o=[],n=[];for(;r.next();)o.push(r.index),n.push(r.sortKey),i.push(r.id);o.sort(((t,e)=>{const s=n[e],r=n[t];return r===s?i[e]-i[t]:s-r}));const a=t.getCursor(),h=e?this._indexBuffer.getCPUBuffer():this._vertexBuffer.getCPUBuffer();for(const t of o){if(!a.seekIndex(t))throw new Error("Expected to find index");if(e){const{indexFrom:t,indexCount:e}=a;a.indexFrom=s;for(let r=0;r<e;r++)this._indexBuffer.set(s++,h.array[t+r])}else{const{vertexFrom:t,vertexCount:e}=a,r=this._vertexBuffer.strideInt,i=t*r,o=i+e*r;a.vertexFrom=s/r;for(let t=i;t<o;t++)this._vertexBuffer.set(s++,h.array[t])}}this._cursorIndexOrder=o,this._displayList=null}}let P=0;class A extends b{constructor(t,e,s,r,i,o){super(t,e,s,r),this.instanceId=P++,this.patchCount=0,this._renderState={current:{geometry:new Map,metrics:null},next:null,swap:!1,swapFrames:0,locked:!1},this._patches=new n(100),this._bufferPatches=new n(100),this._lastCommitTime=0,this.transforms.labelMat2d=f(),this._store=i,this._requestLabelUpdate=o}destroy(){super.destroy(),this._renderState.current.geometry.forEach((t=>t.destroy())),a(this._renderState.next)&&this._renderState.next.geometry.forEach((t=>t.destroy())),this._renderState.current=null,this._renderState.next=null}get labelMetrics(){return this._renderState.current.metrics}get hasData(){return!!this._renderState.current.geometry.size}getGeometry(t){return this._renderState.current.geometry.get(t)}patch(t,e){this.patchCount++,t.clear&&this._patches.size>=50&&this._dropPatches();const s=t,r=s.addOrUpdate&&this.key.id!==s.addOrUpdate.tileKeyOrigin;e&&r?this._bufferPatches.enqueue(s):(s.sort=s.sort&&!e,this._patches.enqueue(s)),this.requestRender()}commit(t){if(this._lastCommitTime!==t.time){this._lastCommitTime=t.time;for(let t=0;t<4;t++)this._updateMesh(),this.isReady&&this._updateBufferMesh();this._renderState.swap&&(this._swapRenderStates(),this.requestRender())}}lock(){this._renderState.locked=!0}unlock(){this._renderState.locked=!1,this._flushUpdates(),this._swap()}_swapRenderStates(){if(this._renderState.next){if(this._renderState.locked)return this._renderState.swap=!0,void this.requestRender();this._renderState.swap=!0,this._swap()}}_swap(){this._renderState.swap&&(this._renderState.swap=!1,a(this._renderState.next)&&(this._renderState.current.geometry.forEach((t=>t.destroy())),this._renderState.current=this._renderState.next,this._renderState.next=null,this._requestLabelUpdate()))}_flushUpdates(){let t=this._patches.maxSize;for(;this._patches.size&&t--;)this._updateMesh(),this._swap()}_updateBufferMesh(){const t=this._bufferPatches.peek();if(!a(t)||!t.clear||null===this._renderState.next)for(;this._bufferPatches.size;){const t=this._bufferPatches.dequeue();a(t)&&this._patchBuffer(t)}}_updateMesh(){const t=this._patches.dequeue();if(a(t)){if(e("esri-2d-update-debug")){const e=t,s=e.addOrUpdate?.tileKeyOrigin,r=this.key.id===s?"SELF":s;let i="";for(let t=0;t<5;t++)i+=e.addOrUpdate?.data[t]?.records?.byteLength?1:0;console.debug(this.key.id,"FeatureTile:patch",`[clear: ${e.clear} origin: ${r}, end:${e.end} data:${i}]`)}!0===t.clear&&(a(this._renderState.next)&&(this._renderState.next.geometry.forEach((t=>t.destroy())),this._renderState.next=null),this._renderState.next={geometry:new Map,metrics:null},e("esri-2d-update-debug")&&console.debug(this.key.id,"FeatureTile:_updateMesh - Creating new renderState")),this.requestRender(),this._patch(t),t.end&&(e("esri-2d-update-debug")&&console.debug(this.key.id,"FeatureTile:_updateMesh - Encountered end message"),this.ready(),this._swapRenderStates())}}_patch(t){_((e=>{this._remove(e,t.remove),this._insert(e,t,!1)}))}_patchBuffer(t){_((e=>{this._insert(e,t,!0)}))}_insert(t,s,r){try{const i=d(this._renderState.next,this._renderState.current),o=s.addOrUpdate?.data[t],n=i.geometry;if(h(o))return;n.has(t)||(e("esri-2d-update-debug")&&console.debug(this.key.id,`FeatureTile:_insert - Creating geometry buffer ${t}`),n.set(t,new R(t,this.stage))),e("esri-2d-update-debug")&&console.debug(this.key.id,`FeatureTile:_insert - Inserting into ${t}, version=${s.addOrUpdate.version} stride=${o.stride}`),n.get(t).insert(o,s.sort,r),t===m.LABEL&&this._insertLabelMetrics(s.type,o.metrics,s.clear)}catch(t){}}_insertLabelMetrics(t,e,s){const r=d(this._renderState.next,this._renderState.current);if(h(e))return;const i=B.from(e);if(h(r.metrics))r.metrics=i;else{if("update"===t){const t=i.getCursor();for(;t.next();)r.metrics.delete(t.id)}r.metrics.link(i)}}_remove(t,e){const s=d(this._renderState.next,this._renderState.current).geometry.get(t);e&&e.length&&s&&(s.remove(e),this._removeLabelMetrics(e))}_removeLabelMetrics(t){const{metrics:e}=d(this._renderState.next,this._renderState.current);if(!h(e)&&t.length)for(const s of t)for(;e.delete(s););}_dropPatches(){const t=new Array;let e=!1;for(;this._patches.size;){const s=this._patches.dequeue();if(h(s))break;if(s.clear){if(e)break;e=!0}t.push(s)}this._patches.clear(),t.forEach((t=>this._patches.enqueue(t)))}}const F=e("featurelayer-order-by-server-enabled");class D extends j{constructor(t,e,s,r){super(t),this._hitTestsRequests=[],this._layer=s,this._layerView=e,this._onUpdate=r}renderChildren(t){this.attributeView.update(),this.hasAnimation&&t.painter.effects.integrate.draw(t,t.attributeView),super.renderChildren(t)}hasEmptyAttributeView(){return this.attributeView.isEmpty()}isUpdating(){return this.attributeView.isUpdating()}hitTest(t){let e=this._hitTestsRequests.find((({x:e,y:s})=>e===t.x&&s===t.y));const r=s();return e?e.resolvers.push(r):(e={x:t.x,y:t.y,resolvers:[r]},this._hitTestsRequests.push(e)),this.requestRender(),r.promise}onTileData(t,e){const s=F&&"orderBy"in this._layer&&this._layer.orderBy,r=s?.length&&!s[0].valueExpression&&s[0].field,i=s&&this._layerView.orderByFields===r;t.patch(e,i),this.contains(t)||this.addChild(t),this.requestRender()}onTileError(t){this.contains(t)||this.addChild(t)}updateTransitionProperties(t,e){super.updateTransitionProperties(t,e),this._layerView.featureEffectView.transitionStep(t,e),this._layerView.featureEffectView.transitioning&&this.requestRender()}doRender(t){const{minScale:e,maxScale:s}=this._layer,r=t.state.scale;r<=(e||1/0)&&r>=s&&super.doRender(t)}afterRender(t){super.afterRender(t),this._hitTestsRequests.length&&this.requestRender()}onAttributeStoreUpdate(){this.hasLabels&&this._layerView.view.labelManager.requestUpdate(),this._onUpdate()}get hasAnimation(){return this.hasLabels}setStencilReference(t){const{rendererSchema:e}=t.rendererInfo;if("dot-density"===e?.type&&e?.dotSize>1||"heatmap"===e?.type){const t=1;for(const e of this.children)e.stencilRef=e.key.level+t}else super.setStencilReference(t)}get hasLabels(){if("sublayers"in this._layer)return this._layer.sublayers.some((t=>t.labelingInfo&&t.labelingInfo.length&&t.labelsVisible));const t=this._layer.featureReduction,e=t&&"labelingInfo"in t&&t.labelsVisible&&t.labelingInfo&&t.labelingInfo.length;return this._layer.labelingInfo&&this._layer.labelingInfo.length&&this._layer.labelsVisible||!!e}prepareRenderPasses(t){const e=t.registerRenderPass({name:"label",brushes:[V.label],target:()=>this.hasLabels?this.children:null,drawPhase:c.LABEL|c.LABEL_ALPHA}),s=t.registerRenderPass({name:"geometry",brushes:[V.fill,V.dotDensity,V.line,V.marker,V.heatmap,V.pieChart,V.text],target:()=>this.children,enableDefaultDraw:()=>!this._layerView.featureEffectView.hasEffects,effects:[{apply:t.effects.outsideEffect,enable:()=>this._layerView.featureEffectView.hasEffects,args:()=>this._layerView.featureEffectView.excludedEffects},{apply:t.effects.insideEffect,enable:()=>this._layerView.featureEffectView.hasEffects,args:()=>this._layerView.featureEffectView.includedEffects},{apply:t.effects.hittest,enable:()=>!!this._hitTestsRequests.length,args:()=>this._hitTestsRequests}]}),r=t.registerRenderPass({name:"highlight",brushes:[V.fill,V.dotDensity,V.line,V.marker,V.pieChart,V.text],target:()=>this.children,drawPhase:c.HIGHLIGHT,enableDefaultDraw:()=>!1,effects:[{apply:t.effects.highlight,enable:()=>!!this._layerView.hasHighlight()}]});return[...super.prepareRenderPasses(t),s,r,e]}}let q=class extends U{constructor(){super(...arguments),this.type="symbol"}install(t){const e=new D(this.tileInfoView,this.layerView,this.layer,(()=>this.notifyChange("updating")));this.featuresView=e,t.addChild(e)}uninstall(t){t.removeChild(this.featuresView),this.featuresView.destroy(),this.featuresView=null}fetchResource(t,e){const{url:s}=t,i=this.featuresView.stage;try{return i.resourceManager.fetchResource(s,{signal:e.signal})}catch(t){return r(t)?Promise.resolve({width:0,height:0}):Promise.reject(t)}}isUpdating(){const t=super.isUpdating(),s=!this.featuresView||this.featuresView.isUpdating(),r=this.featuresView?.hasEmptyAttributeView(),i=t||s||t&&r;return e("esri-2d-log-updating")&&console.log(`Updating SymbolTileRenderer ${i}\n  -> updatingTiles ${t}\n  -> hasFeaturesView ${!!this.featuresView}\n  -> updatingFeaturesView ${s}`),i}hitTest(t){return this.featuresView.hitTest(t)}supportsRenderer(t){return null!=t&&["simple","class-breaks","unique-value","dot-density","dictionary","heatmap","pie-chart"].includes(t.type)}onConfigUpdate(t){let e=null;if(t&&"visualVariables"in t){const s=(E(t).visualVariables||[]).map((t=>{const e=t.clone();return"normalizationField"in t&&(e.normalizationField=null),t.valueExpression&&"$view.scale"!==t.valueExpression&&(e.valueExpression=null,e.field="nop"),e}));e=T(s)}this.featuresView.setRendererInfo(t,e,this.layerView.featureEffect)}onTileData(t){const e=this.tiles.get(t.tileKey);e&&t.data&&this.featuresView.onTileData(e,t.data),this.layerView.view.labelManager.requestUpdate()}onTileError(t){const e=this.tiles.get(t.tileKey);e&&this.featuresView.onTileError(e)}forceAttributeTextureUpload(){this.featuresView.attributeView.forceTextureUpload()}lockGPUUploads(){this.featuresView.attributeView.lockTextureUpload(),this.tiles.forEach((t=>t.lock()))}unlockGPUUploads(){this.featuresView.attributeView.unlockTextureUpload(),this.tiles.forEach((t=>t.unlock()))}async getMaterialItems(t){return this.featuresView.getMaterialItems(t)}invalidateLabels(){this.featuresView.hasLabels&&this.layerView.view.labelManager.requestUpdate()}createTile(t){const e=this.tileInfoView.getTileBounds(o(),t),s=this.tileInfoView.getTileResolution(t.level),r=this.featuresView.attributeView;return new A(t,s,e[0],e[3],r,(()=>this.layerView.view.labelManager.requestUpdate()))}disposeTile(t){this.featuresView.removeChild(t),t.destroy(),this.layerView.view.labelManager.requestUpdate()}};q=t([i("esri.views.2d.layers.features.tileRenderers.SymbolTileRenderer")],q);const O=q;export{O as default};
