/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{L as t}from"./Logger.js";import{n as e,i,a as s,p as r}from"./maybe.js";import{R as n,l as a,U as h,D as c,C as o,S as _,i as u,P as l,m as f,h as E,a as d,n as T,o as R,T as A,g as m,c as b,b as p}from"./enums3.js";import{k as x,l as g,m as N}from"../core/lang.js";import{c as F,T as D,w as S}from"./Texture.js";import{C as B}from"./context-util.js";import"./object.js";const C=t.getLogger("esri.views.webgl.BufferObject");class U{constructor(t,e,i,s){this._context=t,this.bufferType=e,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(n.BufferObject,this),this._glName=this._context.gl.createBuffer(),F(this._context.gl),s&&this.setData(s)}static createIndex(t,e,i){return new U(t,a.ELEMENT_ARRAY_BUFFER,e,i)}static createVertex(t,e,i){return new U(t,a.ARRAY_BUFFER,e,i)}static createUniform(t,e,i){if(t.type!==B.WEBGL2)throw new Error("Uniform buffers are supported in WebGL2 only!");return new U(t,a.UNIFORM_BUFFER,e,i)}static createPixelPack(t,e=h.STREAM_READ,i){if(t.type!==B.WEBGL2)throw new Error("Pixel pack buffers are supported in WebGL2 only!");const s=new U(t,a.PIXEL_PACK_BUFFER,e);return i&&s.setSize(i),s}static createPixelUnpack(t,e=h.STREAM_DRAW,i){if(t.type!==B.WEBGL2)throw new Error("Pixel unpack buffers are supported in WebGL2 only!");return new U(t,a.PIXEL_UNPACK_BUFFER,e,i)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get byteSize(){return this.bufferType===a.ELEMENT_ARRAY_BUFFER?this._indexType===c.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===a.ELEMENT_ARRAY_BUFFER||this.bufferType===a.ARRAY_BUFFER}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(n.BufferObject,this),this._context=e(this._context)):this._glName&&C.warn("Leaked WebGL buffer object")}setSize(t,e=null){if(t<=0&&C.error("Buffer size needs to be positive!"),this.bufferType===a.ELEMENT_ARRAY_BUFFER&&i(e))switch(this._indexType=e,e){case c.UNSIGNED_SHORT:t*=2;break;case c.UNSIGNED_INT:t*=4}this._setBufferData(t)}setData(t){if(!t)return;let e=t.byteLength;this.bufferType===a.ELEMENT_ARRAY_BUFFER&&(x(t)&&(e/=2,this._indexType=c.UNSIGNED_SHORT),g(t)&&(e/=4,this._indexType=c.UNSIGNED_INT)),this._setBufferData(e,t)}_setBufferData(t,e=null){this._size=t;const s=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const r=this._context.gl;i(e)?r.bufferData(this.bufferType,e,this.usage):r.bufferData(this.bufferType,t,this.usage),F(r),this._isVAOAware&&this._context.bindVAO(s)}setSubData(t,e,i,s){if(!t)return;(e<0||e>=this._size)&&C.error("offset is out of range!"),i>=s&&C.error("end must be bigger than start!"),e+(s-i)>this._size&&C.error("An attempt to write beyond the end of the buffer!");const r=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const n=this._context.gl;if(this._context.type===B.WEBGL2)n.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,t,i,s-i);else{const r=0===i&&s===t.length?t:t.subarray(i,s);n.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,r)}F(n),this._isVAOAware&&this._context.bindVAO(r)}getSubData(t,e=0,i,s){if(this._context.type!==B.WEBGL2)return void C.error("Get buffer subdata is supported in WebGL2 only!");if(i<0||s<0)return void C.error("Problem getting subdata: offset and length were less than zero!");const r=N(t)?t.BYTES_PER_ELEMENT:1;if(r*((i??0)+(s??0))>t.byteLength)return void C.error("Problem getting subdata: offset and length exceeded destination size!");e+r*(s??0)>this.byteSize&&C.warn("Potential problem getting subdata: requested data exceeds buffer size!");const n=this._context.gl;this._context.bindBuffer(this,a.COPY_READ_BUFFER),n.getBufferSubData(a.COPY_READ_BUFFER,e,t,i,s),this._context.unbindBuffer(a.COPY_READ_BUFFER)}async getSubDataAsync(t,e=0,i,s){this._context.type===B.WEBGL2?(await this._context.clientWaitAsync(),this.getSubData(t,e,i,s)):C.error("Get buffer subdata is supported in WebGL2 only!")}}function O(t){const e=t.gl;switch(e.getError()){case e.NO_ERROR:return null;case e.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case e.INVALID_VALUE:return"A numeric argument is out of range";case e.INVALID_OPERATION:return"The specified command is not allowed for the current state";case e.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case e.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case e.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function P(t,e){return t.vertexBuffers[e].size/t.layout[e][0].stride}function L(t,e,i,s,r=0){const n=t.gl,a=t.capabilities.instancing;t.bindBuffer(i);for(const t of s){const i=e.get(t.name);void 0===i&&console.error(`There is no location for vertex attribute '${t.name}' defined.`);const s=r*t.stride;if(t.count<=4)n.vertexAttribPointer(i,t.count,t.type,t.normalized,t.stride,t.offset+s),n.enableVertexAttribArray(i),t.divisor>0&&a&&a.vertexAttribDivisor(i,t.divisor);else if(9===t.count)for(let e=0;e<3;e++)n.vertexAttribPointer(i+e,3,t.type,t.normalized,t.stride,t.offset+12*e+s),n.enableVertexAttribArray(i+e),t.divisor>0&&a&&a.vertexAttribDivisor(i+e,t.divisor);else if(16===t.count)for(let e=0;e<4;e++)n.vertexAttribPointer(i+e,4,t.type,t.normalized,t.stride,t.offset+16*e+s),n.enableVertexAttribArray(i+e),t.divisor>0&&a&&a.vertexAttribDivisor(i+e,t.divisor);else console.error("Unsupported vertex attribute element count: "+t.count)}}function M(t,e,i,s){const r=t.gl,n=t.capabilities.instancing;t.bindBuffer(i);for(const t of s){const i=e.get(t.name);if(t.count<=4)r.disableVertexAttribArray(i),t.divisor&&t.divisor>0&&n&&n.vertexAttribDivisor(i,0);else if(9===t.count)for(let e=0;e<3;e++)r.disableVertexAttribArray(i+e),t.divisor&&t.divisor>0&&n&&n.vertexAttribDivisor(i+e,0);else if(16===t.count)for(let e=0;e<4;e++)r.disableVertexAttribArray(i+e),t.divisor&&t.divisor>0&&n&&n.vertexAttribDivisor(i+e,0);else console.error("Unsupported vertex attribute element count: "+t.count)}t.unbindBuffer(a.ARRAY_BUFFER)}function G(t){switch(t){case l.ALPHA:case l.LUMINANCE:case l.RED:case l.RED_INTEGER:case _.R8:case _.R8I:case _.R8UI:case _.R8_SNORM:case u.STENCIL_INDEX8:return 1;case l.LUMINANCE_ALPHA:case l.RG:case l.RG_INTEGER:case _.RGBA4:case _.R16F:case _.R16I:case _.R16UI:case _.RG8:case _.RG8I:case _.RG8UI:case _.RG8_SNORM:case _.RGB565:case _.RGB5_A1:case u.DEPTH_COMPONENT16:return 2;case l.DEPTH_COMPONENT:case l.RGB:case l.RGB_INTEGER:case _.RGB8:case _.RGB8I:case _.RGB8UI:case _.RGB8_SNORM:case _.SRGB8:case u.DEPTH_COMPONENT24:return 3;case l.DEPTH_STENCIL:case l.RGBA:case l.RGBA_INTEGER:case _.RGBA8:case _.R32F:case _.R11F_G11F_B10F:case _.RG16F:case _.R32I:case _.R32UI:case _.RG16I:case _.RG16UI:case _.RGBA8I:case _.RGBA8UI:case _.RGBA8_SNORM:case _.SRGB8_ALPHA8:case _.RGB9_E5:case _.RGB10_A2UI:case _.RGB10_A2:case u.DEPTH_STENCIL:case u.DEPTH_COMPONENT32F:case u.DEPTH24_STENCIL8:return 4;case u.DEPTH32F_STENCIL8:return 5;case _.RGB16F:case _.RGB16I:case _.RGB16UI:return 6;case _.RG32F:case _.RG32I:case _.RG32UI:case _.RGBA16F:case _.RGBA16I:case _.RGBA16UI:return 8;case _.RGB32F:case _.RGB32I:case _.RGB32UI:return 12;case _.RGBA32F:case _.RGBA32I:case _.RGBA32UI:return 16;case o.COMPRESSED_RGB_S3TC_DXT1_EXT:case o.COMPRESSED_RGBA_S3TC_DXT1_EXT:return.5;case o.COMPRESSED_RGBA_S3TC_DXT3_EXT:case o.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case o.COMPRESSED_R11_EAC:case o.COMPRESSED_SIGNED_R11_EAC:case o.COMPRESSED_RGB8_ETC2:case o.COMPRESSED_SRGB8_ETC2:case o.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case o.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return.5;case o.COMPRESSED_RG11_EAC:case o.COMPRESSED_SIGNED_RG11_EAC:case o.COMPRESSED_RGBA8_ETC2_EAC:case o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}function I(t){if(s(t))return 0;if("descriptor"in t)return t.glName?I(t.descriptor):0;const e=t.internalFormat||"pixelFormat"in t&&t.pixelFormat;if(!e)return 0;const i="hasMipmap"in t&&t.hasMipmap?1.3:1,r=t.width*t.height;return G(e)*r*i}const y=t.getLogger("esri.views.webgl.VertexArrayObject");class w{constructor(t,e,i,s,r=null){this._context=t,this._locations=e,this._layout=i,this._buffers=s,this._indexBuffer=r,this._glName=null,this._initialized=!1,t.instanceCounter.increment(n.VertexArrayObject,this)}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get size(){return Object.keys(this._buffers).reduce(((t,e)=>t+this._buffers[e].size),i(this._indexBuffer)?this._indexBuffer.size:0)}get layout(){return this._layout}get locations(){return this._locations}dispose(t=!0){if(this._context){if(this._glName){const t=this._context?.capabilities?.vao;t?(t.deleteVertexArray(this._glName),this._glName=null):y.warn("Leaked WebGL VAO")}if(this._context.getBoundVAO()===this&&this._context.bindVAO(null),t){for(const t in this._buffers)this._buffers[t]?.dispose(),delete this._buffers[t];this._indexBuffer=r(this._indexBuffer)}this._context.instanceCounter.decrement(n.VertexArrayObject,this),this._context=e(this._context)}else(this._glName||t&&Object.getOwnPropertyNames(this._buffers).length>0)&&y.warn("Leaked WebGL VAO")}initialize(){if(this._initialized)return;const t=this._context.capabilities.vao;if(t){const e=t.createVertexArray();t.bindVertexArray(e),this._bindLayout(),t.bindVertexArray(null),this._glName=e}this._initialized=!0}bind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}_bindLayout(){const{_buffers:t,_layout:e,_indexBuffer:s}=this;t||y.error("Vertex buffer dictionary is empty!");const r=this._context.gl;for(const i in t){const s=t[i];s||y.error("Vertex buffer is uninitialized!");const r=e[i];r||y.error("Vertex element descriptor is empty!"),L(this._context,this._locations,s,r)}i(s)&&(this._context.capabilities.vao?r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,s.glName):this._context.bindBuffer(s))}unbind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(null):this._unbindLayout()}_unbindLayout(){const{_buffers:t,_layout:e}=this;t||y.error("Vertex buffer dictionary is empty!");for(const i in t){const s=t[i];s||y.error("Vertex buffer is uninitialized!");const r=e[i];M(this._context,this._locations,s,r)}i(this._indexBuffer)&&this._context.unbindBuffer(this._indexBuffer.bufferType)}}class H{constructor(t,e){this._context=t,this._desc=e,this.type="renderbuffer",this._context.instanceCounter.increment(n.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:s,height:r,internalFormat:a,multisampled:h}=e;if(h){if(this._context.type!==B.WEBGL2)throw new Error("Multisampled renderbuffers are not supported in WebGL1!");i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,a,s,r)}else i.renderbufferStorage(i.RENDERBUFFER,a,s,r)}get descriptor(){return this._desc}get samples(){const t=this._desc.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}resize(t,e){const i=this._desc;if(i.width===t&&i.height===e)return;i.width=t,i.height=e;const s=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?s.renderbufferStorageMultisample(s.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):s.renderbufferStorage(s.RENDERBUFFER,i.internalFormat,i.width,i.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(n.Renderbuffer,this),this._context=e(this._context))}}class v{constructor(t,e,s=null,r=null){if(this._context=t,this._glName=null,this._depthAttachment=null,this._stencilAttachment=null,this._colorAttachments=new Map,this._depthStencilTexture=null,this._initialized=!1,this._desc={...e},t.instanceCounter.increment(n.FramebufferObject,this),i(s)){Array.isArray(s)||(s=[s]);for(let t=0;t<s.length;++t){const e=s[t],i=f.COLOR_ATTACHMENT0+t;let r;X(e)?(z(e)?(r=e.descriptor,this._colorAttachments.set(i,e)):(r=e,this._colorAttachments.set(i,new D(this._context,r))),W(r,this._desc)):(V(e)?(r=e.descriptor,this._colorAttachments.set(i,e)):(r=e,this._colorAttachments.set(i,new H(this._context,r))),j(r,this._desc)),this._validateColorAttachmentPoint(i)}}if(i(r)){let t,e;if(X(r))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),z(r)?(e=r.descriptor,this._depthStencilTexture=r):(e=r,this._depthStencilTexture=new D(this._context,e)),W(e,this._desc);else{V(r)?(e=r.descriptor,t=r):(e=r,t=new H(this._context,e));const i=this._desc.depthStencilTarget??E.DEPTH_STENCIL_RENDER_BUFFER;i===E.STENCIL_RENDER_BUFFER?this._stencilAttachment=t:i===E.DEPTH_RENDER_BUFFER||i===E.DEPTH_STENCIL_RENDER_BUFFER?this._depthAttachment=t:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER'),this._desc.depthStencilTarget=i,j(e,this._desc)}}}dispose(){if(!this._desc)return;const t=this._context.getBoundFramebufferObject();this._disposeColorAttachments(),this._disposeDepthStencilAttachments(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(n.FramebufferObject,this),this._desc=null}get glName(){return this._glName}get descriptor(){return this._desc}get colorTexture(){const t=this._colorAttachments.get(f.COLOR_ATTACHMENT0);return t&&z(t)?t:null}get colorAttachment(){return this._colorAttachments.get(f.COLOR_ATTACHMENT0)}get depthStencilAttachment(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}get depthStencilTexture(){return this._depthStencilTexture}get width(){return this._desc.width??0}get height(){return this._desc.height??0}get gpuMemoryUsage(){return[...this._colorAttachments].reduce(((t,[e,i])=>t+I(i)),0)+I(this.depthStencilAttachment)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&z(e)?e:null}attachColorTexture(t,e=f.COLOR_ATTACHMENT0){t&&(this._validateColorAttachmentPoint(e),W(t.descriptor,this._desc),this._disposeColorAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e)),this._colorAttachments.set(e,t))}detachColorTexture(t=f.COLOR_ATTACHMENT0){const e=this._colorAttachments.get(t);if(z(e)){const i=e;return this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t)),this._colorAttachments.delete(t),i}}setColorTextureTarget(t,e=f.COLOR_ATTACHMENT0){const i=this._colorAttachments.get(e);z(i)&&this._framebufferTexture2D(i.glName,e,t)}attachDepthStencilTexture(t){if(s(t))return;const e=t.descriptor;e.pixelFormat!==l.DEPTH_STENCIL&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),e.dataType!==d.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),W(e,this._desc),this._desc.depthStencilTarget&&this._desc.depthStencilTarget!==E.DEPTH_STENCIL_TEXTURE&&(this._desc.depthStencilTarget=E.DEPTH_STENCIL_TEXTURE),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,T)),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,T)),this._depthStencilTexture=null,t}attachDepthStencilBuffer(t){if(s(t))return;const e=t.descriptor;if(e.internalFormat!==u.DEPTH_STENCIL&&e.internalFormat!==u.DEPTH_COMPONENT16&&console.error("Depth/Stencil buffer must have correct internalFormat"),j(e,this._desc),this._disposeDepthStencilAttachments(),this._desc.depthStencilTarget=e.internalFormat===u.DEPTH_STENCIL?E.DEPTH_STENCIL_RENDER_BUFFER:E.DEPTH_RENDER_BUFFER,this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,i=this._desc.depthStencilTarget===E.DEPTH_RENDER_BUFFER?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(R.FRAMEBUFFER,i,e.RENDERBUFFER,t.glName)}this._depthAttachment=t}detachDepthStencilBuffer(){const t=this._context.gl,e=this._depthAttachment;if(e&&this._initialized){this._context.bindFramebuffer(this);const e=this._desc.depthStencilTarget===E.DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(R.FRAMEBUFFER,e,t.RENDERBUFFER,null)}return this._depthAttachment=null,e}detachAll(){this._colorAttachments.forEach(((t,e)=>this._detachColorAttachment(e))),this.detachDepthStencilBuffer(),this.detachDepthStencilTexture()}copyToTexture(t,e,i,s,r,n,a){(t<0||e<0||r<0||n<0)&&console.error("Offsets cannot be negative!"),(i<=0||s<=0)&&console.error("Copy width and height must be greater than zero!");const h=this._desc,c=a.descriptor;a.descriptor.target!==A.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==h?.width||null==h?.height||null==c?.width||null==c?.height||t+i>h.width||e+s>h.height||r+i>c.width||n+s>c.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const o=this._context,_=o.bindTexture(a,D.TEXTURE_UNIT_FOR_UPDATES);o.setActiveTexture(D.TEXTURE_UNIT_FOR_UPDATES),o.bindFramebuffer(this),o.gl.copyTexSubImage2D(A.TEXTURE_2D,0,r,n,t,e,i,s),o.bindTexture(_,D.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,i,s,r,n,a){(i<=0||s<=0)&&console.error("Copy width and height must be greater than zero!"),a||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,i,s,r,n,a)}async readPixelsAsync(t,e,i,s,r,n,c){if(this._context.type!==B.WEBGL2)return S()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),void this.readPixels(t,e,i,s,r,n,c);const o=this._context.gl,_=U.createPixelPack(this._context,h.STREAM_READ,c.byteLength);this._context.bindBuffer(_),this._context.bindFramebuffer(this),o.readPixels(t,e,i,s,r,n,0),this._context.unbindBuffer(a.PIXEL_PACK_BUFFER),await _.getSubDataAsync(c),_.dispose()}resize(t,e){const i=this._desc;if(i.width!==t||i.height!==e){if(!this._initialized)return i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),void(this._depthStencilTexture&&this._depthStencilTexture.resize(t,e));i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),null!=this._depthStencilTexture?this._depthStencilTexture.resize(t,e):(this._depthAttachment||this._stencilAttachment)&&(this._depthAttachment&&this._depthAttachment.resize(t,e),this._stencilAttachment&&this._stencilAttachment.resize(t,e)),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1}}initializeAndBind(t=R.FRAMEBUFFER){const e=this._context.gl;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const i=this._context,s=e.createFramebuffer(),r=this._desc,n=r.colorTarget??m.RENDER_BUFFER,a=r.width??1,h=r.height??1;if(e.bindFramebuffer(t,s),0===this._colorAttachments.size)if(n===m.TEXTURE||n===m.CUBEMAP)this._colorAttachments.set(f.COLOR_ATTACHMENT0,function(t,e,i){return new D(t,{target:i,pixelFormat:l.RGBA,dataType:d.UNSIGNED_BYTE,samplingMode:b.NEAREST,wrapMode:p.CLAMP_TO_EDGE,width:e.width,height:e.height})}(i,r,this.descriptor.colorTarget===m.CUBEMAP?A.TEXTURE_CUBE_MAP:A.TEXTURE_2D));else{const t=new H(i,{internalFormat:_.RGBA4,width:a,height:h});this._colorAttachments.set(f.COLOR_ATTACHMENT0,t)}this._colorAttachments.forEach(((i,s)=>{i&&(z(i)?this._framebufferTexture2D(i.glName,s,Y(i),t):e.framebufferRenderbuffer(t,s,e.RENDERBUFFER,i.glName))}));const c=r.depthStencilTarget??E.NONE;switch(c){case E.DEPTH_RENDER_BUFFER:case E.DEPTH_STENCIL_RENDER_BUFFER:{this._depthAttachment||(this._depthAttachment=new H(i,{internalFormat:r.depthStencilTarget===E.DEPTH_RENDER_BUFFER?u.DEPTH_COMPONENT16:u.DEPTH_STENCIL,width:a,height:h}));const s=c===E.DEPTH_RENDER_BUFFER?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(t,s,e.RENDERBUFFER,this._depthAttachment.glName);break}case E.STENCIL_RENDER_BUFFER:this._stencilAttachment||(this._stencilAttachment=new H(i,{internalFormat:u.STENCIL_INDEX8,width:a,height:h})),e.framebufferRenderbuffer(t,e.STENCIL_ATTACHMENT,e.RENDERBUFFER,this._stencilAttachment.glName);break;case E.DEPTH_STENCIL_TEXTURE:if(!this._depthStencilTexture){i.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!");const t={target:A.TEXTURE_2D,pixelFormat:l.DEPTH_STENCIL,dataType:d.UNSIGNED_INT_24_8,samplingMode:b.NEAREST,wrapMode:p.CLAMP_TO_EDGE,width:a,height:h};this._depthStencilTexture=new D(i,t)}this._framebufferTexture2D(this._depthStencilTexture.glName,e.DEPTH_STENCIL_ATTACHMENT,Y(this._depthStencilTexture),t)}S()&&e.checkFramebufferStatus(t)!==e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=s,this._initialized=!0}_framebufferTexture2D(t,e=f.COLOR_ATTACHMENT0,i=A.TEXTURE_2D,s=R.FRAMEBUFFER,r=0){this._context.gl.framebufferTexture2D(s,e,i,t,r)}_detachColorAttachment(t){S()&&console.warn("Detaching an FBO attachment can be a slow due to invalidating framebuffer completeness!");const e=this._context.gl,i=this._colorAttachments.get(t);return z(i)?this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t)):this._initialized&&(this._context.bindFramebuffer(this),e.framebufferRenderbuffer(R.FRAMEBUFFER,t,e.RENDERBUFFER,null)),this._colorAttachments.delete(t),i}_disposeColorAttachments(){this._colorAttachments.forEach(((t,e)=>{this._detachColorAttachment(e),t.dispose()})),this._colorAttachments.clear()}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthAttachment){if(this._initialized){this._context.bindFramebuffer(this);const e=this._desc.depthStencilTarget===E.DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(R.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthAttachment.dispose(),this._depthAttachment=null}this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),t.framebufferRenderbuffer(R.FRAMEBUFFER,t.STENCIL_ATTACHMENT,t.RENDERBUFFER,null)),this._stencilAttachment.dispose(),this._stencilAttachment=null),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)}_validateColorAttachmentPoint(e){if(-1===v._MAX_COLOR_ATTACHMENTS){const t=this._context.capabilities.drawBuffers;if(t){const e=this._context.gl;v._MAX_COLOR_ATTACHMENTS=e.getParameter(t.MAX_COLOR_ATTACHMENTS)}else v._MAX_COLOR_ATTACHMENTS=1}const i=e-f.COLOR_ATTACHMENT0;i+1>v._MAX_COLOR_ATTACHMENTS&&t.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${i+1}. Implementation supports up to ${v._MAX_COLOR_ATTACHMENTS} color attachments`)}}function z(t){return null!=t&&"type"in t&&"texture"===t.type}function V(t){return null!=t&&"type"in t&&"renderbuffer"===t.type}function X(t){return z(t)||null!=t&&"pixelFormat"in t}function W(t,e){t.target!==A.TEXTURE_2D&&t.target!==A.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Color attachment texture must match the framebuffer's!"):(e.width=t.width,e.height=t.height)}function j(t,e){void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):(e.width=t.width,e.height=t.height)}function Y(t){return t.descriptor.target===A.TEXTURE_CUBE_MAP?A.TEXTURE_CUBE_MAP_POSITIVE_X:A.TEXTURE_2D}v._MAX_COLOR_ATTACHMENTS=-1;export{U as B,v as F,H as R,w as V,I as a,L as b,O as c,G as g,M as u,P as v};
