/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{a as r,i as a}from"./maybe.js";import{getFilename as t,urlToObject as s}from"../core/urlUtils.js";import{p as l,f as n}from"./arcgisLayerUrl.js";import{a as o,f as i}from"./fetchService.js";import{l as u}from"./lazyLayerLoader.js";import"../core/lang.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./persistableUrlUtils.js";import"../request.js";import"../kernel.js";import"../core/promiseUtils.js";async function c(c){const p=c.properties?.customParameters,d=await async function(c,y){let p=l(c);if(r(p)&&(p=await async function(e,r){const l=await o(e,{customParameters:r});let i=null,u=null;const c=l.type;if("Feature Layer"===c||"Table"===c?(i="FeatureServer",u=l.id):"indexedVector"===c?i="VectorTileServer":l.hasOwnProperty("mapName")?i="MapServer":l.hasOwnProperty("bandCount")&&l.hasOwnProperty("pixelSizeX")?i="ImageServer":l.hasOwnProperty("maxRecordCount")&&l.hasOwnProperty("allowGeometryUpdates")?i="FeatureServer":l.hasOwnProperty("streamUrls")?i="StreamServer":m(l)?(i="SceneServer",u=l.id):l.hasOwnProperty("layers")&&m(l.layers?.[0])&&(i="SceneServer"),!i)return null;const y=null!=u?n(e):null;return{title:a(y)&&l.name||t(e),serverType:i,sublayer:u,url:{path:a(y)?y.serviceUrl:s(e).path}}}(c,y)),r(p))throw new e("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:c});const{serverType:d,sublayer:f}=p;let I;const b={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(d){case"MapServer":I=null!=f?"FeatureLayer":async function(e,r){return(await o(e,{customParameters:r})).tileInfo}(c,y).then((e=>e?"TileLayer":"MapImageLayer"));break;case"ImageServer":I=o(c,{customParameters:y}).then((e=>{const r=e.tileInfo&&e.tileInfo.format;return e.tileInfo?"LERC"!==r?.toUpperCase()||e.cacheType&&"elevation"!==e.cacheType.toLowerCase()?"ImageryTileLayer":"ElevationLayer":"ImageryLayer"}));break;case"SceneServer":I=o(p.url.path,{customParameters:y}).then((e=>{if(e){if("Voxel"===e?.layerType)return"VoxelLayer";if(e?.layers&&Array.isArray(e.layers)&&e.layers.length>0){const r={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"},a=e.layers[0]?.layerType;if(null!=r[a])return r[a]}}return"SceneLayer"}));break;default:I=b[d]}const S="FeatureServer"===d,h={parsedUrl:p,Constructor:null,layerOrTableId:S?f:null,sublayerIds:null,tableIds:null},v=await I;if({FeatureLayer:!0,SceneLayer:!0}[v]&&null==f){const e=await async function(e,r,a){let t,s=!1;if("FeatureServer"===r){const r=await i(e,{customParameters:a});s=!!r.layersJSON,t=r.layersJSON||r.serviceJSON}else t=await o(e,{customParameters:a});const l=t?.layers,n=t?.tables;return{layerIds:l?.map((e=>e.id)).reverse()||[],tableIds:n?.map((e=>e.id)).reverse()||[],layerInfos:s?l:[],tableInfos:s?n:[]}}(c,d,y);S&&(h.sublayerInfos=e.layerInfos,h.tableInfos=e.tableInfos),1!==e.layerIds.length+e.tableIds.length?(h.sublayerIds=e.layerIds,h.tableIds=e.tableIds):S&&(h.layerOrTableId=e.layerIds[0]??e.tableIds[0],h.sourceJSON=e.layerInfos[0]??e.tableInfos[0])}return h.Constructor=await async function(e){return(0,u[e])()}(v),h}(c.url,p),f={...c.properties,url:c.url};if(!d.sublayerIds)return null!=d.layerOrTableId&&(f.layerId=d.layerOrTableId,f.sourceJSON=d.sourceJSON),new d.Constructor(f);const I=new(0,(await import("../layers/GroupLayer.js")).default)({title:d.parsedUrl.title});return function(e,r,t){function s(e,s){const l={...t,layerId:e,sublayerTitleMode:"service-name"};return a(s)&&(l.sourceJSON=s),new r.Constructor(l)}r.sublayerIds.forEach((a=>{const t=s(a,y(r.sublayerInfos,a));e.add(t)})),r.tableIds.forEach((a=>{const t=s(a,y(r.tableInfos,a));e.tables.add(t)}))}(I,d,f),I}function y(e,r){return e?e.find((e=>e.id===r)):null}function m(e){return e?.hasOwnProperty("store")&&e.hasOwnProperty("id")&&"number"==typeof e.id}export{c as fromUrl};
