/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{L as r}from"./Logger.js";import{a as t}from"./maybe.js";import{f as o,c as s,a as i}from"./number.js";import{isNumericField as a}from"../layers/support/fieldUtils.js";import{a as n,g as p}from"./labelUtils.js";import{b as l}from"./arcadeOnDemand.js";import"../core/lang.js";import"./object.js";import"../config.js";import"./string.js";import"./jsonMap.js";import"./locale.js";import"../geometry.js";import"./ensureType.js";import"../geometry/Extent.js";import"./tslib.es6.js";import"../core/accessorSupport/decorators/property.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"../core/accessorSupport/decorators/subclass.js";import"./tracking.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./ArrayPool.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/promiseUtils.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";const m=r.getLogger("esri.layers.support.labelFormatUtils"),u={type:"simple",evaluate:()=>null},c={getAttribute:(e,r)=>e.field(r)};async function j(r,o,s){if(!r||!r.symbol)return u;const i=r.where,a=n(r),j=i?await import("../core/sql/WhereClause.js"):null;let g;if("arcade"===a.type){const r=await l(a.expression,s,o);if(t(r))return u;g={type:"arcade",evaluate(t){try{const e=r.evaluate({$feature:"attributes"in t?r.repurposeFeature(t):t});if(null!=e)return e.toString()}catch(r){m.error(new e("arcade-expression-error","Encountered an error when evaluating label expression for feature",{feature:t,expression:a}))}return null},needsHydrationToEvaluate:()=>null==p(a.expression)}}else g={type:"simple",evaluate:e=>a.expression.replace(/{[^}]*}/g,(r=>{const t=r.slice(1,-1),s=o.get(t);if(!s)return r;let i=null;return"attributes"in e?e&&e.attributes&&(i=e.attributes[s.name]):i=e.field(s.name),null==i?"":f(i,s)}))};if(i){let r;try{r=j.WhereClause.create(i,o)}catch(r){return m.error(new e("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:i,error:r})),u}const t=g.evaluate;g.evaluate=o=>{const s="attributes"in o?void 0:c;try{if(r.testFeature(o,s))return t(o)}catch(r){m.error(new e("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:i,feature:o,error:r}))}return null}}return g}function f(e,r){if(null==e)return"";const t=r.domain;if(t)if("codedValue"===t.type||"coded-value"===t.type){const r=e;for(const e of t.codedValues)if(e.code===r)return e.name}else if("range"===t.type){const r=+e,o="range"in t?t.range[0]:t.minValue,s="range"in t?t.range[1]:t.maxValue;if(o<=r&&r<=s)return t.name}let n=e;return"date"===r.type||"esriFieldTypeDate"===r.type?n=o(n,s("short-date")):a(r)&&(n=i(+n)),n||""}export{j as createLabelFunction,f as formatField};
