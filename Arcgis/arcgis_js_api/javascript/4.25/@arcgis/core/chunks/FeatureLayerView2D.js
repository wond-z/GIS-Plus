/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import{clone as i}from"../core/lang.js";import"./ensureType.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import"../geometry.js";import o from"../core/Collection.js";import a from"../core/Error.js";import{h as n}from"./object.js";import{L as l}from"./Logger.js";import{u as p,i as u,g as c,a as d}from"./maybe.js";import{createResolver as h,ignoreAbortErrors as m,throwIfNotAbortError as y,debounce as g,isAbortError as f}from"../core/promiseUtils.js";import{watch as _,syncAndInitial as j,initial as b,whenOnce as v}from"../core/reactiveUtils.js";import S from"../core/Accessor.js";import{E as w}from"./EffectView.js";import R from"../layers/support/FeatureFilter.js";import{r as C}from"./reader.js";import U from"../rest/support/FeatureSet.js";import q from"../geometry/SpatialReference.js";import x from"../rest/support/Query.js";import{n as E}from"./definitions.js";import{L as I}from"./LayerView2D.js";import{b as F,i as T}from"./schemaUtils.js";import{f as O,d as V,b as k,i as A,c as P}from"./clusterUtils.js";import{Q as L}from"./QueueProcessor.js";import{EsriPromise as N}from"../core/Promise.js";import{open as D}from"../core/workers/workers.js";import{t as M}from"./util.js";import{a as J}from"./TileInfoView.js";import{T as z}from"./TileKey2.js";import{F as H}from"./FeatureLayerView.js";import Q from"../views/layers/LayerView.js";import{R as B}from"./RefreshableLayerView.js";import{g as G}from"./capabilities2.js";import $ from"../geometry/Extent.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"./utils.js";import"./handleUtils.js";import"../core/Handles.js";import"./get.js";import"./metadata.js";import"./ArrayPool.js";import"./tracking.js";import"../config.js";import"./string.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/JSONSupport.js";import"../core/accessorSupport/decorators/cast.js";import"./writer.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"./jsonMap.js";import"../geometry/support/jsonUtils.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./number.js";import"./locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"./mathUtils.js";import"./vec3.js";import"./common.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils2.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils3.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"./aaBoundingRect.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../kernel.js";import"../request.js";import"../core/Loadable.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./parser.js";import"./mat4f32.js";import"./mat4.js";import"./_commonjsHelpers.js";import"../TimeExtent.js";import"./timeUtils.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./FullTextSearch.js";import"../rest/support/StatisticDefinition.js";import"./Container.js";import"./mat3f32.js";import"./DisplayObject.js";import"./ClipRect.js";import"../core/sql.js";import"./diffUtils.js";import"./labelingInfo.js";import"../layers/support/LabelClass.js";import"./labelUtils.js";import"./defaults.js";import"./defaultsJSON.js";import"../symbols/support/jsonUtils.js";import"./symbolConversion.js";import"./enums4.js";import"./Utils18.js";import"./number2.js";import"./enums.js";import"./enums3.js";import"./Texture.js";import"./context-util.js";import"./VertexElementDescriptor.js";import"./utils19.js";import"./MaterialKey.js";import"./alignmentUtils.js";import"./heatmapUtils.js";import"./vec4f64.js";import"./visualVariablesUtils2.js";import"./createSymbolSchema.js";import"./cimAnalyzer.js";import"./fontUtils.js";import"./shapingUtils.js";import"./BidiEngine.js";import"./mat2d.js";import"./mat2df32.js";import"./vec2.js";import"./vec2f32.js";import"./Rect.js";import"./utils7.js";import"./callExpressionWithFeature.js";import"./quantizationUtils.js";import"./GeometryUtils.js";import"./floatRGBA.js";import"./ExpandedCIM.js";import"../layers/support/AggregateField.js";import"../layers/support/ExpressionInfo.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"./LegendOptions.js";import"../renderers/visualVariables/support/SizeStop.js";import"./sizeVariableUtils.js";import"./visualVariableUtils.js";import"./compilerUtils.js";import"./lengthUtils.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"./Queue.js";import"../core/workers/Connection.js";import"../core/workers/RemoteClient.js";import"./assets.js";import"../intl.js";import"./messages.js";import"./commonProperties.js";import"../support/timeUtils.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"../layers/support/FeatureEffect.js";import"./jsonUtils.js";import"./floorFilterUtils.js";import"./popupUtils.js";import"../core/HandleOwner.js";import"./WatchUpdatingTracking.js";let K=class extends t{constructor(){super(...arguments),this.isAggregate=!0}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.sourceLayer&&this.sourceLayer.featureReduction;return t&&"popupTemplate"in t&&t.popupEnabled?t.popupTemplate:null}getObjectId(){return this.attributes.aggregateId}};e([r({type:Boolean})],K.prototype,"isAggregate",void 0),K=e([s("esri.AggregateGraphic")],K);const W=K;let X=class extends S{constructor(e){super(e),this._filter=null,this.duration=n("mapview-transitions-duration"),this._excludedEffectView=new w(e),this._includedEffectView=new w(e)}get excludedEffects(){return this._excludedEffectView.effects}set featureEffect(e){this._get("featureEffect")!==e&&this._transitionTo(e)}get filter(){return this._filter||p(this.featureEffect)?.filter||null}get hasEffects(){return this._excludedEffectView.hasEffects||this._includedEffectView.hasEffects}get includedEffects(){return this._includedEffectView.effects}set scale(e){this._set("scale",e),this._excludedEffectView.scale=e,this._includedEffectView.scale=e}get transitioning(){return this._excludedEffectView.transitioning||this._includedEffectView.transitioning}transitionStep(e,t){this._set("scale",t),this.transitioning?(this._includedEffectView.transitionStep(e,t),this._excludedEffectView.transitionStep(e,t),this.transitioning||(this._filter=null)):(this._excludedEffectView.scale=t,this._includedEffectView.scale=t)}endTransitions(){this._includedEffectView.endTransitions(),this._excludedEffectView.endTransitions(),this._filter=null}_transitionTo(e){const t=this._get("featureEffect"),r=p(e),i=p(r?.includedEffect),s=p(r?.excludedEffect),o=this._includedEffectView.canTransitionTo(i)&&this._excludedEffectView.canTransitionTo(s);this._includedEffectView.effect=i,this._excludedEffectView.effect=s,this._set("featureEffect",r),this._filter=r?.filter||t?.filter||null,o||this.endTransitions()}};e([r()],X.prototype,"_filter",void 0),e([r()],X.prototype,"_excludedEffectView",void 0),e([r()],X.prototype,"_includedEffectView",void 0),e([r()],X.prototype,"duration",void 0),e([r()],X.prototype,"excludedEffects",null),e([r()],X.prototype,"featureEffect",null),e([r()],X.prototype,"filter",null),e([r()],X.prototype,"hasEffects",null),e([r()],X.prototype,"includedEffects",null),e([r({value:0})],X.prototype,"scale",null),e([r()],X.prototype,"transitioning",null),X=e([s("esri.layers.effects.FeatureEffectView")],X);const Y=X;let Z=class extends U{constructor(){super(...arguments),this.features=[]}readFeatures(e,t){const r=q.fromJSON(t.spatialReference),i=[];for(let t=0;t<e.length;t++){const s=e[t],o=W.fromJSON(s),a=s.geometry&&s.geometry.spatialReference;u(o.geometry)&&!a&&(o.geometry.spatialReference=r);const n=s.aggregateGeometries,l=o.aggregateGeometries;if(n&&u(l))for(const e in l){const t=l[e],i=n[e]?.spatialReference;u(t)&&!i&&(t.spatialReference=r)}i.push(o)}return i}};e([r({type:[W],json:{write:!0}})],Z.prototype,"features",void 0),e([C("features")],Z.prototype,"readFeatures",null),Z=e([s("esri.rest.support.AggregateFeatureSet")],Z);const ee=Z;function te(e){return e.some((e=>e.globalId))}function re(e){return e.filter((e=>!e.error)).map((e=>e.objectId??e.globalId))}function ie(e,t){const r=new Set(e);for(const e of t.values())r.add(e);return r}function se(e,t){const r=new Set(e);for(const e of t.values())r.delete(e);return r}let oe=class extends S{constructor(e){super(e),this._hasGlobalIds=!1}normalizeCtorArgs(e){return this._queueProcessor=new L({concurrency:1,process:e.process}),{}}destroy(){this.clear()}get updating(){return this._queueProcessor.length>0}clear(){this._queueProcessor.clear()}push(e){const t=this._queueProcessor,r=t.last();switch(e.type){case"update":case"refresh":if(r?.type===e.type)return;t.push(e).finally((()=>this.notifyChange("updating")));break;case"edit":{const i="processed-edit"===r?.type?r:null;i&&t.popLast();const s=this._mergeEdits(i,e);for(const e of s)t.push(e).finally((()=>this.notifyChange("updating")));break}}this.notifyChange("updating")}_mergeEdits(e,t){const{addedFeatures:r,deletedFeatures:i,updatedFeatures:s}=t.edits;if(this._hasGlobalIds=this._hasGlobalIds||te(r)||te(s)||te(i),this._hasGlobalIds)return[e,{type:"processed-edit",edits:{addOrModified:[...r,...s],removed:i}}];const o=new Set(re(e?.edits.addOrModified??[])),a=new Set(re(e?.edits.removed??[])),n=new Set([...re(r),...re(s)]),l=new Set(re(i));return[{type:"processed-edit",edits:{addOrModified:Array.from(ie(se(o,l),n)).map((e=>({objectId:e}))),removed:Array.from(ie(se(a,n),l)).map((e=>({objectId:e})))}}]}};e([r({readOnly:!0})],oe.prototype,"updating",null),oe=e([s("esri.views.2d.layers.support.FeatureCommandQueue")],oe);const ae=oe;let ne=class extends N{constructor(e){super(e),this._startupResolver=h(),this.isReady=!1}initialize(){this._controller=new AbortController,this.addResolvingPromise(this._startWorker(this._controller.signal))}destroy(){this._controller.abort(),this._connection&&this._connection.close()}set tileRenderer(e){this.client.tileRenderer=e}get closed(){return this._connection.closed}async startup(e,t,r,i){await this.when();const s=this._controller.signal,o=(a=r.source,Array.isArray(a)?{transferList:r.source,signal:s}:void 0);var a;const n={service:r,config:t,tileInfo:e.tileInfo.toJSON(),tiles:i};await this._connection.invoke("startup",n,o),this._startupResolver.resolve(),this._set("isReady",!0)}async updateTiles(e){return await this._startupResolver.promise,m(this._connection.invoke("updateTiles",e))}async update(e){const t={config:e};return await this._startupResolver.promise,this._connection.invoke("update",t)}async applyUpdate(e){return await this._startupResolver.promise,this._connection.invoke("applyUpdate",e)}async setHighlight(e){return await this._startupResolver.promise,m(this._connection.invoke("controller.setHighlight",e))}async stop(){if(await this._startupResolver.promise,!this.closed)return m(this._connection.invoke("stop"))}async refresh(e){return await this._startupResolver.promise,m(this._connection.invoke("controller.refresh",e))}async querySummaryStatistics(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.querySummaryStatistics",{query:e.toJSON(),params:t},r)}async queryAggregateSummaryStatistics(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateSummaryStatistics",{query:e.toJSON(),params:t},r)}async queryUniqueValues(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryUniqueValues",{query:e.toJSON(),params:t},r)}async queryAggregateUniqueValues(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateUniqueValues",{query:e.toJSON(),params:t},r)}async queryClassBreaks(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryClassBreaks",{query:e.toJSON(),params:t},r)}async queryAggregateClassBreaks(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateClassBreaks",{query:e.toJSON(),params:t},r)}async queryHistogram(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryHistogram",{query:e.toJSON(),params:t},r)}async queryAggregateHistogram(e,t,r){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateHistogram",{query:e.toJSON(),params:t},r)}async queryFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatures",e.toJSON(),t)}async queryVisibleFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryVisibleFeatures",e.toJSON(),t)}async queryObjectIds(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryObjectIds",e.toJSON(),t)}async queryFeatureCount(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatureCount",e.toJSON(),t)}async queryExtent(e,t){return this._connection.invoke("controller.queryExtent",e.toJSON(),t)}async queryLatestObservations(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryLatestObservations",e.toJSON(),t)}async queryStatistics(e){return await this._startupResolver.promise,this._connection.invoke("controller.queryStatistics",e)}async queryAggregates(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregates",e.toJSON(),t)}async queryAggregateCount(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateCount",e.toJSON(),t)}async queryAggregateIds(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateIds",e.toJSON(),t)}async getObjectId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getObjectId",e)}async getDisplayId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getDisplayId",e)}async getFeatures(e){return await this._startupResolver.promise,this._connection.invoke("controller.getFeatures",e)}async getAggregates(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregates")}async getAggregateValueRanges(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregateValueRanges")}async mapValidDisplayIds(e){return await this._startupResolver.promise,this._connection.invoke("controller.mapValidDisplayIds",e)}async onEdits(e){return await this._startupResolver.promise,m(this._connection.invoke("controller.onEdits",e))}async enableEvent(e,t){return await this._startupResolver.promise,m(this._connection.invoke("controller.enableEvent",{name:e,value:t}))}pauseStream(){return m(this._connection.invoke("controller.pauseStream"))}resumeStream(){return m(this._connection.invoke("controller.resumeStream"))}async _startWorker(e){try{this._connection=await D("Pipeline",{client:this.client,strategy:"dedicated",signal:e})}catch(e){y(e)}}};e([r()],ne.prototype,"isReady",void 0),e([r({constructOnly:!0})],ne.prototype,"client",void 0),e([r()],ne.prototype,"tileRenderer",null),ne=e([s("esri.views.2d.layers.support.FeatureLayerProxy")],ne);const le=ne;class pe{constructor(e){this._tiles=new Map,this.buffer=0,this.acquireTile=e.acquireTile,this.releaseTile=e.releaseTile,this.tileInfoView=e.tileInfoView,this.buffer=e.buffer}destroy(){}clear(){this._tiles.forEach((e=>this._releaseTile(e)))}tileKeys(){const e=[];return this._tiles.forEach(((t,r)=>e.push(r))),e}update(e){const t=this.tileInfoView.getTileCoverage(e.state,this.buffer,"closest"),{spans:r,lodInfo:i}=t,{level:s}=i,o=[],a=[],n=new Set,l=new Set;for(const{row:e,colFrom:t,colTo:a}of r)for(let r=t;r<=a;r++){const t=z.getId(s,e,i.normalizeCol(r),i.getWorldForColumn(r)),a=this._getOrAcquireTile(o,t);n.add(t),a.isReady?a.visible=!0:l.add(a.key)}return l.forEach((e=>this._addPlaceholders(n,e))),this._tiles.forEach((e=>{n.has(e.key.id)||(a.push(e.key.id),this._releaseTile(e))})),J.pool.release(t),{hasMissingTiles:l.size>0,added:o,removed:a}}_getOrAcquireTile(e,t){if(!this._tiles.has(t)){const r=this.acquireTile(new z(t));e.push(t),this._tiles.set(t,r),r.visible=!1}return this._tiles.get(t)}_getTile(e){return this._tiles.get(e)}_releaseTile(e){this._tiles.delete(e.key.id),this.releaseTile(e)}_addPlaceholders(e,t){const r=this._addPlaceholderChildren(e,t);Math.abs(1-r)<1e-6||this._addPlaceholderParent(e,t)||(this._getTile(t.id).visible=!0)}_addPlaceholderChildren(e,t){let r=0;return this._tiles.forEach((i=>{r+=this._addPlaceholderChild(e,i,t)})),r}_addPlaceholderChild(e,t,r){return t.key.level<=r.level||!t.hasData||!r.contains(t.key)?0:(t.visible=!0,e.add(t.key.id),1/(1<<2*(t.key.level-r.level)))}_addPlaceholderParent(e,t){let r=t.getParentKey(),i=0,s=null;for(;u(r);){if(e.has(r.id))return!0;const t=this._getTile(r.id);if(t?.isReady){for(const t of e){const e=this._getTile(t);r.contains(e.key)&&(e.visible=!1)}return t.visible=!0,e.add(t.key.id),!0}t?.hasData&&t.patchCount>i&&(i=t.patchCount,s=t),r=r.getParentKey()}return!!s&&(s.visible=!0,e.add(s.key.id),!0)}}function ue(e){return e&&"openPorts"in e}let ce=class extends(H(B(I(Q)))){constructor(){super(...arguments),this._pipelineIsUpdating=!0,this._commandsQueue=new ae({process:e=>{switch(e.type){case"processed-edit":return this._doEdit(e);case"refresh":return this._doRefresh(e.dataChanged);case"update":return this._doUpdate()}}}),this._visibilityOverrides=new Set,this._highlightIds=new Map,this._updateHighlight=g((async()=>this._proxy.setHighlight(Array.from(this._highlightIds.keys())))),this._uploadsLocked=!1,this._needsClusterSizeUpdate=!1,this.featureEffectView=new Y,this._lastDefinitionExpression=null}destroy(){c(this._updateClusterSizeTask,(e=>e.remove())),this._proxy?.destroy(),this._commandsQueue.destroy()}initialize(){this.addResolvingPromise(Promise.all([this._initProxy(),this._initServiceOptions()])),this.handles.add([this.on("valueRangesChanged",(e=>{this._set("_aggregateValueRanges",e.valueRanges)})),_((()=>this.featureEffect),(e=>{this.featureEffectView.featureEffect=e}),j)]),this.featureEffectView.endTransitions()}async _initProxy(){const e=this.layer;if("isTable"in e&&e.isTable)throw new a("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:this.layer});const t="feature"===e.type||"subtype-group"===e.type,r="capabilities"in e&&e.capabilities.operations.supportsQuery;if(t&&!r)throw new a("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e});this._proxy&&this._proxy.destroy();const i=this._createClientOptions();return this._set("_proxy",new le({client:i})),this._proxy.when()}async _initServiceOptions(){return this._set("_serviceOptions",await this._createServiceOptions()),this._serviceOptions}get orderByFields(){return"stream"!==this._serviceOptions.type&&this._serviceOptions.orderByFields}get labelsVisible(){const e="subtype-group"===this.layer.type?this.layer.sublayers.items:[this.layer];return!this.suspended&&e.some((e=>e.labelingInfo&&e.labelsVisible))}get queryMode(){return this._serviceOptions.type}get renderingConfigHash(){if(!this.layer)return null;const e=this.availableFields,t=this.layer,r=this.view.floors,{definitionExpression:i}=t,s="subtype-group"!==this.layer.type&&this.layer.labelsVisible&&this.layer.labelingInfo,o="renderer"in t&&t.renderer,a="gdbVersion"in t?t.gdbVersion:void 0,n="historicMoment"in t?t.historicMoment?.getTime():void 0,{timeExtent:l}=this,p="customParameters"in t?JSON.stringify(t.customParameters):void 0,c="apiKey"in t?t.apiKey:void 0,d="stream"===t.type?`${JSON.stringify(t.geometryDefinition)}${t.definitionExpression}`:null,h=JSON.stringify(this.clips),m="featureReduction"in t?t.featureReduction?.toJSON():null,y="orderBy"in this.layer&&JSON.stringify(this.layer.orderBy),g="sublayers"in this.layer&&this.layer.sublayers.items.reduce(((e,t)=>e+`${t.visible?1:0}.${JSON.stringify(t.renderer)}.${t.labelsVisible}\n.${JSON.stringify(t.labelingInfo)}`),""),f="subtypeCode"in this.layer&&this.layer.subtypeCode;return JSON.stringify({orderBy:y,sublayerHash:g,subtypeCode:f,filterHash:u(this.filter)&&this.filter.toJSON(),effectHash:u(this.featureEffect)&&this.featureEffect.toJSON(),streamFilter:d,gdbVersion:a,definitionExpression:i,historicMoment:n,availableFields:e,renderer:o,labelingInfo:s,timeExtent:l,floors:r,clipsHash:h,featureReduction:m,customParameters:p,apiKey:c})}highlight(e){let r;return e instanceof t?r=[e.getObjectId()]:"number"==typeof e||"string"==typeof e?r=[e]:o.isCollection(e)&&e.length>0?r=e.map((e=>e?.getObjectId())).toArray():Array.isArray(e)&&e.length>0&&(r="number"==typeof e[0]||"string"==typeof e[0]?e:e.map((e=>e?.getObjectId()))),r=r?.filter((e=>null!=e)),r&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):{remove:()=>{}}}hasHighlight(){return!!this._highlightIds.size}async hitTest(e,r){if(!this.tileRenderer)return null;const i=await this.tileRenderer.hitTest(r);if(0===i.length)return null;const{features:s,aggregates:o}=await this._proxy.getFeatures(i);return[...o.map((t=>this._createGraphicHit(e,W.fromJSON(t)))),...s.map((r=>this._createGraphicHit(e,t.fromJSON(r))))]}queryStatistics(){return this._proxy.queryStatistics()}async querySummaryStatistics(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.querySummaryStatistics(this._cleanUpQuery(e),i,r)}async queryAggregateSummaryStatistics(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryAggregateSummaryStatistics(this._cleanUpAggregateQuery(e),i,r)}async queryUniqueValues(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryUniqueValues(this._cleanUpQuery(e),i,r)}async queryAggregateUniqueValues(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryAggregateUniqueValues(this._cleanUpAggregateQuery(e),i,r)}async queryClassBreaks(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryClassBreaks(this._cleanUpQuery(e),i,r)}async queryAggregateClassBreaks(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryAggregateClassBreaks(this._cleanUpAggregateQuery(e),i,r)}async queryHistogram(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryHistogram(this._cleanUpQuery(e),i,r)}async queryAggregateHistogram(e,t,r){const i={...t,scale:this.view.scale};return this._proxy.queryAggregateHistogram(this._cleanUpAggregateQuery(e),i,r)}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then((e=>{const t=U.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))}queryVisibleFeatures(e,t){return this._proxy.queryVisibleFeatures(this._cleanUpQuery(e),t).then((e=>{const t=U.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))}async queryAggregates(e,t){const r=await this._proxy.queryAggregates(this._cleanUpAggregateQuery(e),t),i=ee.fromJSON(r);return i.features.forEach((e=>this._setLayersForFeature(e))),i}queryAggregateIds(e,t){return this._proxy.queryAggregateIds(this._cleanUpAggregateQuery(e),t)}queryAggregateCount(e,t){return this._proxy.queryAggregateCount(this._cleanUpAggregateQuery(e),t)}queryAggregateJSON(e,t){return this._proxy.queryAggregates(this._cleanUpAggregateQuery(e),t)}queryFeaturesJSON(e,t){return this._proxy.queryFeatures(this._cleanUpQuery(e),t)}queryObjectIds(e,t){return this._proxy.queryObjectIds(this._cleanUpQuery(e),t)}queryFeatureCount(e,t){return this._proxy.queryFeatureCount(this._cleanUpQuery(e),t)}queryExtent(e,t){return this._proxy.queryExtent(this._cleanUpQuery(e),t).then((e=>({count:e.count,extent:$.fromJSON(e.extent)})))}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this._tileStrategy||!this.tileRenderer)return;const{hasMissingTiles:t,added:r,removed:i}=this._tileStrategy.update(e);(r.length||i.length)&&this._proxy.updateTiles({added:r,removed:i}),t&&this.requestUpdate(),this.notifyChange("updating")}attach(){this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._tileStrategy=new pe({acquireTile:e=>this._acquireTile(e),releaseTile:e=>this._releaseTile(e),tileInfoView:this.view.featuresTilingScheme,buffer:0}),this.handles.add(_((()=>this.renderingConfigHash),(()=>this._update()),b),"attach"),"stream"!==this.layer.type&&this.handles.add(this.layer.on("edits",(e=>this._edit(e))),"attach")}detach(){this._commandsQueue.clear(),this._proxy?.stop(),this.container.removeAllChildren(),this.handles.remove("attach"),this.tileRenderer&&(this.tileRenderer.uninstall(this.container),this.tileRenderer=null),this._tileStrategy&&(this._tileStrategy.destroy(),this._tileStrategy=null),this._tileRendererHash=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}isUpdating(){const e="renderer"in this.layer&&null!=this.layer.renderer,t=this._commandsQueue.updating,r=null!=this._updatingRequiredFieldsPromise,i=!this._proxy||!this._proxy.isReady,s=this._pipelineIsUpdating,o=null==this.tileRenderer||this.tileRenderer?.updating,a=e&&(t||r||i||s||o);return n("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${a}\n  -> hasRenderer ${e}\n  -> hasPendingCommand ${t}\n  -> updatingRequiredFields ${r}\n  -> updatingProxy ${i}\n  -> updatingPipeline ${s}\n  -> updatingTileRenderer ${o}\n`),a}_createClientOptions(){return{setUpdating:e=>{this._set("_pipelineIsUpdating",e)},emitEvent:e=>{this.emit(e.name,e.event)}}}async _detectQueryMode(e){const t="path"in e,r="editingInfo"in this.layer&&this.layer.editingInfo?.lastEditDate,i=!!this.layer.refreshInterval,s=!r&&i;if(t&&("feature"===this.layer.type||"subtype-group"===this.layer.type)&&"point"===this.layer.geometryType&&this.layer.capabilities.query.supportsPagination&&!this.layer.capabilities.operations.supportsEditing&&!s&&n("featurelayer-snapshot-enabled"))try{const e=await this.layer.queryFeatureCount();if(e<=n("featurelayer-snapshot-point-min-threshold"))return{mode:"snapshot",featureCount:e};const t=n("featurelayer-snapshot-point-max-threshold"),r=n("featurelayer-snapshot-point-coverage"),i=this.view.extent,s=p(this.layer.fullExtent),o=s?.clone().intersection(i),a=u(o)?o.width*o.height:0,l=s?.width*s?.height,c=0===l?0:a/l;if(e<=t&&c>=r)return{mode:"snapshot",featureCount:e}}catch(e){l.getLogger(this.declaredClass).warn("mapview-feature-layer","Encountered an error when querying for featureCount",{error:e})}return{mode:"on-demand"}}async _createServiceOptions(){const e=this.layer;if("stream"===e.type)return null;const{capabilities:t,objectIdField:r}=e,s=e.fields.map((e=>e.toJSON())),o=u(e.fullExtent)&&e.fullExtent.toJSON(),a=M(e.geometryType),n=e.timeInfo&&e.timeInfo.toJSON()||null,l=e.spatialReference?e.spatialReference.toJSON():null,p="feature"===e.type?e.globalIdField:null;let c;"ogc-feature"===e.type?c=e.source.getSource():ue(e.source)?c=await e.source.openPorts():e.parsedUrl&&(c=i(e.parsedUrl),"dynamicDataSource"in e&&e.dynamicDataSource&&(c.query={layer:JSON.stringify({source:e.dynamicDataSource})}));const d="datesInUnknownTimezone"in this.layer&&this.layer.datesInUnknownTimezone,h=("subtypeField"in this.layer&&this.layer.subtypeField)??null,{mode:m,featureCount:y}=await this._detectQueryMode(c);let g=this.layer.objectIdField;if("feature"===this.layer.type&&u(this.layer.orderBy)&&this.layer.orderBy.length){const e=!this.layer.orderBy[0].valueExpression&&this.layer.orderBy[0].field;e&&(g=e)}return{type:m,timeReferenceUnknownClient:d,subtypeField:h,featureCount:y,globalIdField:p,maxRecordCount:t.query.maxRecordCount,tileMaxRecordCount:t.query.tileMaxRecordCount,capabilities:t,fields:s,fullExtent:o,geometryType:a,objectIdField:r,source:c,timeInfo:n,spatialReference:l,orderByFields:g}}async _createMemoryServiceOptions(e){const t=await e.openPorts();return{...this._createServiceOptions(),type:"memory",source:t}}_cleanUpQuery(e){const t=x.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}_cleanUpAggregateQuery(e){const t=x.from(e)||this.createAggregateQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}async _update(){return this._commandsQueue.push({type:"update"})}async _edit(e){if(!this.suspended)return this._validateEdit(e)?this._commandsQueue.push({type:"edit",edits:e}):void 0;this._clearTiles()}async doRefresh(e){if(this.attached&&this._tileStrategy.tileKeys().length)return this.suspended&&e?void this._clearTiles():this._commandsQueue.push({type:"refresh",dataChanged:e})}_clearTiles(){this._tileStrategy.tileKeys().length&&(this._proxy.updateTiles({added:[],removed:this._tileStrategy.tileKeys()}),this._tileStrategy.clear(),this.requestUpdate(),this._commandsQueue.clear(),this._update())}_validateEdit(e){const t="globalIdField"in this.layer&&this.layer.globalIdField,r=e.deletedFeatures.some((e=>-1===e.objectId||!e.objectId)),i=t&&this.availableFields.includes(t);return r&&!i?(l.getLogger(this.declaredClass).error(new a("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`)),null):e}async _doUpdate(){try{if(this.destroyed||!this._hasRequiredSupport(this.layer)||!this._tileStrategy)return;const{featureEffectView:e,filter:t}=this;await this._updateRequiredFields();const{renderer:r}=this._getEffectiveRenderer();this._set("_effectiveRenderer",r);const i=this._createSchemaConfig(),s=this._createConfiguration(i,t,e.filter),o=this._lastDefinitionExpression!==s.schema.source.definitionExpression;this._lastDefinitionExpression=s.schema.source.definitionExpression;const a=s.schema.tileRenderer,n=this._createTileRendererHash(a);if("snapshot"===this._serviceOptions.type&&(s.schema.source.initialFeatureCount=this._serviceOptions.featureCount),n!==this._tileRendererHash){await this._initTileRenderer(a,r);const e=this.layer,t="stream"===e.type?await this._initServiceOptions():this._serviceOptions;this.tileRenderer.onConfigUpdate(r),"stream"!==e.type&&ue(e.source)&&(t.source=await e.source.openPorts());const i={added:this._tileStrategy.tileKeys(),removed:[]};await this._proxy.startup(this.view.featuresTilingScheme,s,t,i),this.hasHighlight()&&await this._proxy.setHighlight(Array.from(this._highlightIds.keys())),await this._onceTilesUpdated(),this.tileRenderer.onConfigUpdate(r)}else{"snapshot"===this._serviceOptions.type&&o&&(s.schema.source.changedFeatureCount=await this.layer.queryFeatureCount());const e=await this._proxy.update(s);(e.mesh||e.targets.aggregate)&&this._lockGPUUploads();try{await this._proxy.applyUpdate(e)}catch(e){f(e)||l.getLogger(this.declaredClass).error(e)}(e.mesh||e.targets.aggregate)&&this._unlockGPUUploads(),this.tileRenderer.onConfigUpdate(r),this._updateClusterSizeVariable(),this._forceAttributeTextureUpload()}this._tileRendererHash=n,this.tileRenderer.invalidateLabels(),this.requestUpdate()}catch(e){}}async _doEdit(e){try{await this._proxy.onEdits(e)}catch(e){f(e)}}async _doRefresh(e){this._lockGPUUploads();try{let t;e&&"snapshot"===this.queryMode&&"queryFeatureCount"in this.layer&&(t=await this.layer.queryFeatureCount()),await this._proxy.refresh({dataChanged:e,featureCount:t})}catch(e){f(e)}this._unlockGPUUploads();const t=this.layer;t&&"featureReduction"in t&&t.featureReduction&&this._updateClusterSizeVariable()}_updateClusterSizeVariable(){this._needsClusterSizeUpdate&&(this.tileRenderer.onConfigUpdate(this._effectiveRenderer),this._needsClusterSizeUpdate=!1)}_createUpdateClusterSizeTask(e,t){return _((()=>this._aggregateValueRanges),(r=>{this._updateClusterEffectiveRendererSizeVariable(e,t,r),this._needsClusterSizeUpdate=!0,this._uploadsLocked||this._updateClusterSizeVariable()}))}async _updateClusterEffectiveRendererSizeVariable(e,t,r){if(e.dynamicClusterSize&&"visualVariables"in e&&e.visualVariables){const i=O(e.visualVariables);if(u(i)&&"cluster_count"===i.field){const s=e.visualVariables.indexOf(i);e.visualVariables[s]=V(t,r);const o=e.clone();o.dynamicClusterSize=!0,this._set("_effectiveRenderer",o)}}}_getEffectiveRenderer(){const e=this.layer,t="renderer"in e?e.renderer:null,r="featureReduction"in e?e.featureReduction:null;if(u(this._updateClusterSizeTask)&&(this._updateClusterSizeTask.remove(),this._updateClusterSizeTask=null),r&&"renderer"in r&&r.renderer&&!r.renderer.authoringInfo?.isAutoGenerated){const e=r.fields;if("cluster"===r.type){const{renderer:t,didInject:i}=k(r.renderer,r,this._aggregateValueRanges);return i&&(c(this._updateClusterSizeTask,(e=>e.remove())),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(t,r)),{renderer:t,aggregateFields:e,featureReduction:r}}return{renderer:r.renderer,aggregateFields:e,featureReduction:r}}if(r&&"cluster"===r.type&&A(t)){const e=r,i=[],s=P(i,t,e,this._aggregateValueRanges,!0);return c(this._updateClusterSizeTask,(e=>e.remove())),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(s,e),{renderer:s,aggregateFields:i,featureReduction:r}}return{renderer:t,aggregateFields:[],featureReduction:null}}_acquireTile(e){const t=this.tileRenderer.acquireTile(e);return t.once("attach",(()=>{this.requestUpdate()})),t}_releaseTile(e){this.tileRenderer.releaseTile(e)}async _initTileRenderer(e,t){const r=await async function(e,t){if(!e)return null;switch(e.type){case"symbol":return new((await import("./SymbolTileRenderer.js")).default)(t);case"heatmap":return new((await import("./HeatmapTileRenderer.js")).default)(t)}}(e,{layerView:this,tileInfoView:this.view.featuresTilingScheme,layer:this.layer});return this.tileRenderer&&(this._tileStrategy.clear(),this.tileRenderer.uninstall(this.container),this.tileRenderer.destroy(),this.tileRenderer=null),this.destroyed?null:(this._proxy.tileRenderer=r,this._set("tileRenderer",r),this.tileRenderer.install(this.container),this.tileRenderer.onConfigUpdate(t),this.requestUpdate(),this.tileRenderer)}_createTileRendererHash(e){return`${e.type}`}get hasFilter(){const e=!!("floorInfo"in this.layer&&this.layer.floorInfo&&this.view.floors&&this.view.floors.length);return!!this.filter||e||!!this._visibilityOverrides.size||!!this.timeExtent}_injectOverrides(e){const t=u(e)?e.timeExtent:null,r=u(this.timeExtent)&&u(t)?this.timeExtent.intersection(t):this.timeExtent||t;let i=null;const s="floorInfo"in this.layer&&this.layer.floorInfo;if(s){const t=u(e)&&e.where;i=this._addFloorFilterClause(t)}if(!this._visibilityOverrides.size&&!r&&!s)return u(e)?e.toJSON():null;(e=u(e)&&e.clone()||new R).timeExtent=r,i&&(e.where=i);const o=e.toJSON();return o.hiddenIds=Array.from(this._visibilityOverrides),o}_addFloorFilterClause(e){const t=this.layer;let r=e||"";if("floorInfo"in t&&t.floorInfo){let e=this.view.floors;if(!e||!e.length)return r;t.floorInfo.viewAllLevelIds?.length&&(e=t.floorInfo.viewAllLevelIds);const i=e.filter((e=>""!==e)).map((e=>"'"+e+"'"));i.push("''");const s=t.floorInfo.floorField;let o="("+s+" IN ({ids}) OR "+s+" IS NULL)";if(o=o.replace("{ids}",i.join(", ")),u(r)&&r.includes(s)){let e=new RegExp("AND \\("+s+".*NULL\\)","g");r=r.replace(e,""),e=new RegExp("\\("+s+".*NULL\\)","g"),r=r.replace(e,""),r=r.replace(/\s+/g," ").trim()}r=""!==r?"("+r+") AND "+o:o}return""!==r?r:null}_createConfiguration(e,t,r){const i="feature"===this.layer.type&&this.layer.historicMoment?this.layer.historicMoment.getTime():void 0,s="feature"===this.layer.type?this.layer.gdbVersion:void 0,o=new Array(E),a=this._injectOverrides(t);o[0]=a,o[1]=u(r)?r.toJSON():null;const n=F(e);if(d(n))return null;const l=G("2d");return{availableFields:this.availableFields,gdbVersion:s,historicMoment:i,devicePixelRatio:window.devicePixelRatio||1,filters:o,schema:n,supportsTextureFloat:l.supportsTextureFloat,maxTextureSize:l.maxTextureSize}}_hasRequiredSupport(e){return!("renderer"in e)||T(e.renderer)}_onceTilesUpdated(){return this.requestUpdate(),v((()=>!this._pipelineIsUpdating))}_lockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!0,this.tileRenderer.lockGPUUploads())}_unlockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!1,this.tileRenderer.unlockGPUUploads())}_forceAttributeTextureUpload(){this.tileRenderer&&this.tileRenderer.forceAttributeTextureUpload()}_createSchemaConfig(){const e=this.layer;return{renderer:"renderer"in e?e.renderer:null,spatialReference:e.spatialReference,timeExtent:e.timeExtent,definitionExpression:e.definitionExpression,featureReduction:"featureReduction"in e?e.featureReduction:null,fields:e.fields,geometryType:e.geometryType,historicMoment:"historicMoment"in e?e.historicMoment:null,labelsVisible:"labelsVisible"in e&&e.labelsVisible,labelingInfo:"labelingInfo"in e&&e.labelingInfo,availableFields:this.availableFields,featureEffect:this.featureEffect,filter:this.filter,gdbVersion:"gdbVersion"in e?e.gdbVersion:null,pixelBuffer:0,orderBy:"orderBy"in e&&e.orderBy?e.orderBy:null,customParameters:{..."customParameters"in e?e.customParameters:void 0,token:"apiKey"in e?e.apiKey:void 0},subtypeCode:"subtypeCode"in e?e.subtypeCode:void 0,subtypeField:"subtypeField"in e?e.subtypeField:void 0}}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight().catch((e=>{f(e)||l.getLogger(this.declaredClass).error(e)}))}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight().catch((e=>{f(e)||l.getLogger(this.declaredClass).error(e)}))}_setLayersForFeature(e){const t=this.layer;e.layer=t,e.sourceLayer=t}_createGraphicHit(e,t){return this._setLayersForFeature(t),u(t.geometry)&&(t.geometry.spatialReference=this.view.spatialReference),{type:"graphic",graphic:t,layer:this.layer,mapPoint:e}}};e([r()],ce.prototype,"_serviceOptions",void 0),e([r()],ce.prototype,"_proxy",void 0),e([r()],ce.prototype,"_pipelineIsUpdating",void 0),e([r()],ce.prototype,"_effectiveRenderer",void 0),e([r()],ce.prototype,"_aggregateValueRanges",void 0),e([r()],ce.prototype,"_commandsQueue",void 0),e([r()],ce.prototype,"featureEffectView",void 0),e([r()],ce.prototype,"labelsVisible",null),e([r({readOnly:!0})],ce.prototype,"queryMode",null),e([r()],ce.prototype,"renderingConfigHash",null),e([r()],ce.prototype,"tileRenderer",void 0),e([r()],ce.prototype,"updating",void 0),ce=e([s("esri.views.2d.layers.FeatureLayerView2D")],ce);const de=ce;export{de as default};
