/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{J as e}from"./jsonMap.js";import{getJsonType as t}from"../geometry/support/jsonUtils.js";const i=new e({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"}),N={UNIT_METER:9001,UNIT_GERMAN_METER:9031,UNIT_FOOT:9002,UNIT_SURVEY_FOOT:9003,UNIT_CLARKE_FOOT:9005,UNIT_FATHOM:9014,UNIT_NAUTICAL_MILE:9030,UNIT_SURVEY_CHAIN:9033,UNIT_SURVEY_LINK:9034,UNIT_SURVEY_MILE:9035,UNIT_KILOMETER:9036,UNIT_CLARKE_YARD:9037,UNIT_CLARKE_CHAIN:9038,UNIT_CLARKE_LINK:9039,UNIT_SEARS_YARD:9040,UNIT_SEARS_FOOT:9041,UNIT_SEARS_CHAIN:9042,UNIT_SEARS_LINK:9043,UNIT_BENOIT_1895A_YARD:9050,UNIT_BENOIT_1895A_FOOT:9051,UNIT_BENOIT_1895A_CHAIN:9052,UNIT_BENOIT_1895A_LINK:9053,UNIT_BENOIT_1895B_YARD:9060,UNIT_BENOIT_1895B_FOOT:9061,UNIT_BENOIT_1895B_CHAIN:9062,UNIT_BENOIT_1895B_LINK:9063,UNIT_INDIAN_FOOT:9080,UNIT_INDIAN_1937_FOOT:9081,UNIT_INDIAN_1962_FOOT:9082,UNIT_INDIAN_1975_FOOT:9083,UNIT_INDIAN_YARD:9084,UNIT_INDIAN_1937_YARD:9085,UNIT_INDIAN_1962_YARD:9086,UNIT_INDIAN_1975_YARD:9087,UNIT_FOOT_1865:9070,UNIT_RADIAN:9101,UNIT_DEGREE:9102,UNIT_ARCMINUTE:9103,UNIT_ARCSECOND:9104,UNIT_GRAD:9105,UNIT_GON:9106,UNIT_MICRORADIAN:9109,UNIT_ARCMINUTE_CENTESIMAL:9112,UNIT_ARCSECOND_CENTESIMAL:9113,UNIT_MIL6400:9114,UNIT_BRITISH_1936_FOOT:9095,UNIT_GOLDCOAST_FOOT:9094,UNIT_INTERNATIONAL_CHAIN:109003,UNIT_INTERNATIONAL_LINK:109004,UNIT_INTERNATIONAL_YARD:109001,UNIT_STATUTE_MILE:9093,UNIT_SURVEY_YARD:109002,UNIT_50KILOMETER_LENGTH:109030,UNIT_150KILOMETER_LENGTH:109031,UNIT_DECIMETER:109005,UNIT_CENTIMETER:109006,UNIT_MILLIMETER:109007,UNIT_INTERNATIONAL_INCH:109008,UNIT_US_SURVEY_INCH:109009,UNIT_INTERNATIONAL_ROD:109010,UNIT_US_SURVEY_ROD:109011,UNIT_US_NAUTICAL_MILE:109012,UNIT_UK_NAUTICAL_MILE:109013,UNIT_SQUARE_INCHES:"esriSquareInches",UNIT_SQUARE_FEET:"esriSquareFeet",UNIT_SQUARE_YARDS:"esriSquareYards",UNIT_ACRES:"esriAcres",UNIT_SQUARE_MILES:"esriSquareMiles",UNIT_SQUARE_MILLIMETERS:"esriSquareMillimeters",UNIT_SQUARE_CENTIMETERS:"esriSquareCentimeters",UNIT_SQUARE_DECIMETERS:"esriSquareDecimeters",UNIT_SQUARE_METERS:"esriSquareMeters",UNIT_ARES:"esriAres",UNIT_HECTARES:"esriHectares",UNIT_SQUARE_KILOMETERS:"esriSquareKilometers"},r=new e({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});function I(e){const{geometries:i,deviationUnit:N,maxDeviation:I}=e.toJSON(),s={maxDeviation:I};return i&&i.length&&(s.geometries=JSON.stringify({geometryType:t(i[0]),geometries:i}),s.sr=JSON.stringify(i[0].spatialReference)),r.write(N,s,"deviationUnit"),s}const s=new e({preserveShape:"preserve-shape"});function _(e){const{polylines:t,lengthUnit:i,geodesic:N,calculationType:r}=e.toJSON(),I={};I.polylines=JSON.stringify(t);const _=e.polylines[0].spatialReference;return I.sr=_.wkid?_.wkid:JSON.stringify(_.toJSON()),i&&(I.lengthUnit=i),N&&(I.geodesic=N),r&&(I.calculationType=s.toJSON(r)),I}const T=new e({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),o=new e({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});function n(e){const{geometries:i,bevelRatio:N,offsetDistance:r,offsetHow:I,offsetUnit:s}=e.toJSON(),_={bevelRatio:N,offsetDistance:r};return i&&i.length&&(_.geometries=JSON.stringify({geometryType:t(i[0]),geometries:i}),_.sr=JSON.stringify(i[0].spatialReference)),I&&(_.offsetHow=T.toJSON(I)),s&&(_.offsetUnit=o.toJSON(s)),_}const U=new e({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});function E(e){const{geometries1:i,geometries2:N,relation:r,relationParameter:I}=e.toJSON(),s={};if(i&&i.length){s.geometries1=JSON.stringify({geometryType:t(i[0]),geometries:i});const e=i[0].spatialReference;s.sr=e.wkid?e.wkid:JSON.stringify(e)}return N&&N.length>0&&(s.geometries2=JSON.stringify({geometryType:t(N[0]),geometries:N})),r&&(s.relation=U.toJSON(r)),I&&(s.relationParam=I),s}const R=new e({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});function a(e){const{extendHow:t,polylines:i,trimExtendTo:N}=e.toJSON(),r={};return r.extendHow=R.toJSON(t),i&&i.length&&(r.polylines=JSON.stringify(i),r.sr=JSON.stringify(i[0].spatialReference)),N&&(r.trimExtendTo=JSON.stringify(N)),r}export{i as c,I as g,_ as l,n as o,E as r,a as t,N as u};
