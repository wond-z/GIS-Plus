/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import e from"../core/Accessor.js";import{b as o}from"../core/lang.js";import{c as s}from"./asyncUtils.js";import{HandleOwnerMixin as r}from"../core/HandleOwner.js";import{i,a as p}from"./maybe.js";import{eachAlwaysValues as a,throwIfAborted as n,whenOrAbort as m}from"../core/promiseUtils.js";import{initial as l,watch as c}from"../core/reactiveUtils.js";import{property as y}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as d}from"../core/accessorSupport/decorators/subclass.js";import j from"../geometry/Polygon.js";import{initializeProjection as u,canProjectWithoutEngine as h,project as g}from"../geometry/projection.js";import{a as b}from"./normalizeUtilsSync.js";import{f as S}from"./typeUtils.js";import{b as f}from"./featureConversionUtils.js";import{O as _}from"./OptimizedFeature.js";import{F as v}from"./FeatureStore.js";import{Q as w}from"./QueryEngine.js";import{m as U,h as C}from"./elevationInfoUtils.js";import{s as E}from"./utils6.js";import{s as k,g as P}from"./RightAngleSnappingHint.js";import{c as F,m as L}from"./queryEngineUtils.js";import{g as D,a as R,b as O}from"./symbologySnappingCandidates.js";import"../core/Handles.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./metadata.js";import"./object.js";import"./Logger.js";import"../config.js";import"./string.js";import"./ArrayPool.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/Error.js";import"./WatchUpdatingTracking.js";import"./writer.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"./reader.js";import"../geometry/SpatialReference.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"./extentUtils.js";import"./zmUtils.js";import"./mathUtils.js";import"./vec3.js";import"./common.js";import"./unitUtils.js";import"./jsonMap.js";import"./projectionEllipsoid.js";import"./SimpleObservable.js";import"./mat4.js";import"../geometry/Multipoint.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../geometry/Polyline.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry/support/jsonUtils.js";import"./normalizeUtilsCommon.js";import"./OptimizedFeatureSet.js";import"../core/Evented.js";import"./aaBoundingBox.js";import"./BoundsStore.js";import"./PooledRBush.js";import"./quickselect.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./centroid.js";import"./MemCache.js";import"../geometry/support/normalizeUtils.js";import"./simplify.js";import"../geometry.js";import"./utils4.js";import"./utils5.js";import"./QueryEngineResult.js";import"./quantizationUtils.js";import"./ItemCache.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./utils13.js";import"./generateRendererUtils.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../Color.js";import"./colorUtils.js";import"./enumeration.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../symbols/Symbol.js";import"./projectionSupport.js";import"./json.js";import"./SnappingCandidate.js";import"./utils21.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"./QueryEngineCapabilities.js";import"./timeSupport.js";import"../layers/support/FieldsIndex.js";import"./Scheduler.js";import"./ObservableValue.js";import"./debugFlags2.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils2.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils3.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../core/Collection.js";import"./shared.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../core/Loadable.js";import"../core/Promise.js";import"./locale.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../core/Clonable.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./jsonUtils.js";import"./parser.js";import"./mat4f32.js";import"../symbols/support/cimSymbolUtils.js";import"./utils7.js";import"./SnappingManager.js";import"./vec2.js";import"./vec2f64.js";import"./Settings2.js";import"./geometry2dUtils.js";import"./viewUtils.js";import"../views/interactive/snapping/SnappingOptions.js";import"../views/interactive/snapping/FeatureSnappingLayerSource.js";import"./VertexSnappingCandidate.js";import"./PointSnappingHint.js";import"./LRUCache.js";let M=class extends(r(e)){constructor(t){super(t),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0}get updating(){return this.updatingHandles.updating}get _hasZ(){const t=this.view;return i(t)&&"3d"===t.type&&"map-notes"!==this.layerSource.layer.type}get _snappingElevationAligner(){const{view:t}=this,{layer:e}=this.layerSource,o=i(t)&&"3d"===t.type;return o&&"map-notes"!==e.type?D(o,{elevationInfo:e.elevationInfo,alignPointsInFeatures:async(o,s)=>(await m(t.whenLayerView(e),s)).elevationAlignPointsInFeatures(o,s),spatialReference:t.spatialReference}):D()}get _snappingElevationFilter(){const{view:t}=this,e=i(t)&&"3d"===t.type&&"map-notes"!==this.layerSource.layer.type;return R(e)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:e}=this.layerSource,o=i(t)&&"3d"===t.type,s=this._extrudedPolygonSymbolsCount>0;return o&&"map-notes"!==e.type&&s?O(s,(async(o,s)=>{const r=await t.whenLayerView(e);return n(s),r.queryForSymbologySnapping({candidates:o,spatialReference:t.spatialReference},s)})):O()}destroy(){for(const t of this._pendingAdds)t.task.abort();this._pendingAdds.length=0,this._mapSources((t=>this._destroySource(t)))}initialize(){this.updatingHandles.add((()=>this.getGraphicsLayers()),(t=>{this.updatingHandles.removeHandles("graphics-collections");for(const e of t)this._addMany(e.graphics.toArray()),this.handles.add([e.on("graphic-update",(t=>this._onGraphicUpdate(t))),this.updatingHandles.addOnCollectionChange((()=>e.graphics),(t=>this._onGraphicsChanged(t)))],"graphics-collections")}),l);const{view:t}=this,{layer:e}=this.layerSource;i(t)&&"3d"===t.type&&"map-notes"!==e.type&&this.addHandles([t.elevationProvider.on("elevation-change",(({context:t})=>{U(t,e.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()})),c((()=>e.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),l)])}async fetchCandidates(t,e){const{point:o,coordinateHelper:s,elevationInfo:r}=t,i=await a(this._mapSources((o=>this._fetchCandidatesForSource(o,t,e))));n(e);const p=s.hasZ()?C:r,m=this._getGroundElevation,l=i.flat().map((t=>F(t,s,p,m)));return k(o,l,s),l}get _getGroundElevation(){return L(this.view)}async _fetchCandidatesForSource(t,e,o){const s=P(e),r=await t.queryEngine.executeQueryForSnapping(s,o);n(o);const i=await this._snappingElevationAligner.alignCandidates(r.candidates,o);n(o);const p=await this._symbologySnappingFetcher.fetch(i,o);n(o);const a=0===p.length?i:[...i,...p];return this._snappingElevationFilter.filter(s,a)}refresh(){}_onGraphicUpdate(t){if(this.getGraphicsLayers().some((e=>e.graphics.includes(t.graphic))))switch(t.property){case"geometry":case"visible":this._remove(t.graphic),this._addMany([t.graphic])}}_onGraphicsChanged(t){for(const e of t.removed)this._remove(e);this._addMany(t.added)}_addMany(t){const e=[],o=new Map;for(const s of t)p(s.geometry)||(this._needsInitializeProjection(s.geometry.spatialReference)?(e.push(s.geometry.spatialReference),o.set(s.uid,s)):this._add(s));this._createPendingAdd(e,o)}_createPendingAdd(t,e){if(!t.length)return;const r=s((async o=>{await u(t.map((t=>({source:t,dest:this.spatialReference}))),{signal:o}),this._markLoadedSpatialReferences(t);for(const[,t]of e)this._add(t)}));this.updatingHandles.addPromise(r.promise);const i={task:r,graphics:e},p=()=>o(this._pendingAdds,i);r.promise.then(p,p),this._pendingAdds.push(i)}_markLoadedSpatialReferences(t){for(const e of t)null!=e.wkid&&this._loadedWkids.add(e.wkid),null!=e.wkt&&this._loadedWkts.add(e.wkt)}_add(t){if(p(t.geometry)||!t.visible)return;let e=t.geometry;if("mesh"===e.type)return;"extent"===e.type&&(e=j.fromExtent(e));const o=this._ensureSource(e.type);if(p(o))return;const s=this._createOptimizedFeature(t.uid,e);p(s)||(o.featureStore.add(s),E(t.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(t){return!(null!=t.wkid&&this._loadedWkids.has(t.wkid)||null!=t.wkt&&this._loadedWkts.has(t.wkt)||h(t,this.spatialReference))}_createOptimizedFeature(t,e){const o=g(b(e),this.spatialReference);if(!o)return null;const s=this._ensureGeometryHasZ(o),r=f(s,this._hasZ,!1);return new _(r,{[x]:t},null,t)}_ensureGeometryHasZ(t){if(!this._hasZ)return t;const e=t=>{for(;t.length<3;)t.push(0)},o=t.clone();switch(o.hasZ=!0,o.type){case"point":o.z=o.z??0;break;case"multipoint":o.points.forEach(e);break;case"polyline":o.paths.forEach((t=>t.forEach(e)));break;case"polygon":o.rings.forEach((t=>t.forEach(e)))}return o}_ensureSource(t){const e=this._sources[t];if(i(e))return e;const o=this._createSource(t);return this._sources[t]=o,o}_createSource(t){const e=S.toJSON(t),o=this._hasZ,s=new v({geometryType:e,hasZ:o,hasM:!1});return{featureStore:s,queryEngine:new w({featureStore:s,fields:[{name:x,type:"esriFieldTypeOID",alias:x}],geometryType:e,hasM:!1,hasZ:o,objectIdField:x,spatialReference:this.spatialReference,scheduler:i(this.view)&&"3d"===this.view.type?this.view.resourceController.scheduler:null}),type:t}}_remove(t){this._mapSources((e=>this._removeFromSource(e,t)));for(const e of this._pendingAdds)e.graphics.delete(t.uid),0===e.graphics.size&&e.task.abort()}_removeFromSource(t,e){const o=e.uid;t.featureStore.has(o)&&(t.featureStore.removeById(e.uid),E(e.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(t){t.queryEngine.destroy(),this._sources[t.type]=null}_mapSources(t){const{point:e,polygon:o,polyline:s,multipoint:r}=this._sources,p=[];return i(e)&&p.push(t(e)),i(o)&&p.push(t(o)),i(s)&&p.push(t(s)),i(r)&&p.push(t(r)),p}};t([y()],M.prototype,"getGraphicsLayers",void 0),t([y({constructOnly:!0})],M.prototype,"layerSource",void 0),t([y({constructOnly:!0})],M.prototype,"spatialReference",void 0),t([y({constructOnly:!0})],M.prototype,"view",void 0),t([y({readOnly:!0})],M.prototype,"updating",null),t([y({readOnly:!0})],M.prototype,"availability",void 0),t([y()],M.prototype,"_hasZ",null),t([y()],M.prototype,"_snappingElevationAligner",null),t([y()],M.prototype,"_snappingElevationFilter",null),t([y()],M.prototype,"_symbologySnappingFetcher",null),t([y()],M.prototype,"_extrudedPolygonSymbolsCount",void 0),t([y()],M.prototype,"_getGroundElevation",null),M=t([d("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],M);const x="OBJECTID";export{M as GraphicsSnappingSource};
