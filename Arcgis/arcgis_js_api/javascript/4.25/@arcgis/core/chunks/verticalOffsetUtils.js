/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{i as t}from"./maybe.js";import{h as s}from"./mat3.js";import{c as e}from"./mat3f64.js";import{c as i,t as r,j as a,m as o}from"./mat4.js";import{c as h}from"./mat4f64.js";import{c as n}from"./quat.js";import{c as f}from"./quatf64.js";import{d as l,p as _,a as m,b}from"./vec3.js";import{b as p}from"./vec3f32.js";import{c}from"./sphere.js";class u{constructor(){this._transform=h(),this._transformInverse=new M({value:this._transform},i,h),this._transformInverseTranspose=new M(this._transformInverse,r,h),this._transformTranspose=new M({value:this._transform},r,h),this._transformInverseRotation=new M({value:this._transform},s,e)}_invalidateLazyTransforms(){this._transformInverse.invalidate(),this._transformInverseTranspose.invalidate(),this._transformTranspose.invalidate(),this._transformInverseRotation.invalidate()}get transform(){return this._transform}get inverse(){return this._transformInverse.value}get inverseTranspose(){return this._transformInverseTranspose.value}get inverseRotation(){return this._transformInverseRotation.value}get transpose(){return this._transformTranspose.value}setTransformMatrix(t){a(this._transform,t)}multiplyTransform(t){o(this._transform,this._transform,t)}set(t){a(this._transform,t),this._invalidateLazyTransforms()}setAndInvalidateLazyTransforms(t,s){this.setTransformMatrix(t),this.multiplyTransform(s),this._invalidateLazyTransforms()}}class M{constructor(t,s,e){this._original=t,this._update=s,this._dirty=!0,this._transform=e()}invalidate(){this._dirty=!0}get value(){return this._dirty&&(this._update(this._transform,this._original.value),this._dirty=!1),this._transform}}const O=l(),v=l(),z=l(),T=new class{constructor(t=0){this.offset=t,this.sphere=c(),this.tmpVertex=l()}applyToVertex(t,s,e){const i=this.objectTransform.transform;let r=i[0]*t+i[4]*s+i[8]*e+i[12],a=i[1]*t+i[5]*s+i[9]*e+i[13],o=i[2]*t+i[6]*s+i[10]*e+i[14];const h=this.offset/Math.sqrt(r*r+a*a+o*o);r+=r*h,a+=a*h,o+=o*h;const n=this.objectTransform.inverse;return this.tmpVertex[0]=n[0]*r+n[4]*a+n[8]*o+n[12],this.tmpVertex[1]=n[1]*r+n[5]*a+n[9]*o+n[13],this.tmpVertex[2]=n[2]*r+n[6]*a+n[10]*o+n[14],this.tmpVertex}applyToMinMax(t,s){const e=this.offset/Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]+=t[0]*e,t[1]+=t[1]*e,t[2]+=t[2]*e;const i=this.offset/Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]);s[0]+=s[0]*i,s[1]+=s[1]*i,s[2]+=s[2]*i}applyToAabb(t){const s=this.offset/Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]+=t[0]*s,t[1]+=t[1]*s,t[2]+=t[2]*s;const e=this.offset/Math.sqrt(t[3]*t[3]+t[4]*t[4]+t[5]*t[5]);return t[3]+=t[3]*e,t[4]+=t[4]*e,t[5]+=t[5]*e,t}applyToBoundingSphere(t){const s=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),e=this.offset/s;return this.sphere[0]=t[0]+t[0]*e,this.sphere[1]=t[1]+t[1]*e,this.sphere[2]=t[2]+t[2]*e,this.sphere[3]=t[3]+t[3]*this.offset/s,this.sphere}};function g(s){return t(s)?(T.offset=s,T):null}const x=new class{constructor(t=0){this.componentLocalOriginLength=0,this._tmpVertex=l(),this._mbs=c(),this._obb={center:l(),halfSize:p(),quaternion:null},this._totalOffset=0,this._offset=0,this._resetOffset(t)}_resetOffset(t){this._offset=t,this._totalOffset=t}set offset(t){this._resetOffset(t)}get offset(){return this._offset}set componentOffset(t){this._totalOffset=this._offset+t}set localOrigin(t){this.componentLocalOriginLength=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2])}applyToVertex(t,s,e){const i=t,r=s,a=e+this.componentLocalOriginLength,o=this._totalOffset/Math.sqrt(i*i+r*r+a*a);return this._tmpVertex[0]=t+i*o,this._tmpVertex[1]=s+r*o,this._tmpVertex[2]=e+a*o,this._tmpVertex}applyToAabb(t){const s=t[0],e=t[1],i=t[2]+this.componentLocalOriginLength,r=t[3],a=t[4],o=t[5]+this.componentLocalOriginLength,h=s*r<0?0:Math.min(Math.abs(s),Math.abs(r)),n=e*a<0?0:Math.min(Math.abs(e),Math.abs(a)),f=i*o<0?0:Math.min(Math.abs(i),Math.abs(o)),l=Math.sqrt(h*h+n*n+f*f);if(l<this._totalOffset)return t[0]-=s<0?this._totalOffset:0,t[1]-=e<0?this._totalOffset:0,t[2]-=i<0?this._totalOffset:0,t[3]+=r>0?this._totalOffset:0,t[4]+=a>0?this._totalOffset:0,t[5]+=o>0?this._totalOffset:0,t;const _=Math.max(Math.abs(s),Math.abs(r)),m=Math.max(Math.abs(e),Math.abs(a)),b=Math.max(Math.abs(i),Math.abs(o)),p=Math.sqrt(_*_+m*m+b*b),c=this._totalOffset/p,u=this._totalOffset/l;return t[0]+=s*(s>0?c:u),t[1]+=e*(e>0?c:u),t[2]+=i*(i>0?c:u),t[3]+=r*(r<0?c:u),t[4]+=a*(a<0?c:u),t[5]+=o*(o<0?c:u),t}applyToMbs(t){const s=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),e=this._totalOffset/s;return this._mbs[0]=t[0]+t[0]*e,this._mbs[1]=t[1]+t[1]*e,this._mbs[2]=t[2]+t[2]*e,this._mbs[3]=t[3]+t[3]*this._totalOffset/s,this._mbs}applyToObb(t){const s=t.center,e=this._totalOffset/Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]);this._obb.center[0]=s[0]+s[0]*e,this._obb.center[1]=s[1]+s[1]*e,this._obb.center[2]=s[2]+s[2]*e,_(this._obb.halfSize,t.halfSize,t.quaternion),m(this._obb.halfSize,this._obb.halfSize,t.center);const i=this._totalOffset/Math.sqrt(this._obb.halfSize[0]*this._obb.halfSize[0]+this._obb.halfSize[1]*this._obb.halfSize[1]+this._obb.halfSize[2]*this._obb.halfSize[2]);return this._obb.halfSize[0]+=this._obb.halfSize[0]*i,this._obb.halfSize[1]+=this._obb.halfSize[1]*i,this._obb.halfSize[2]+=this._obb.halfSize[2]*i,b(this._obb.halfSize,this._obb.halfSize,t.center),n(d,t.quaternion),_(this._obb.halfSize,this._obb.halfSize,d),this._obb.halfSize[0]*=this._obb.halfSize[0]<0?-1:1,this._obb.halfSize[1]*=this._obb.halfSize[1]<0?-1:1,this._obb.halfSize[2]*=this._obb.halfSize[2]<0?-1:1,this._obb.quaternion=t.quaternion,this._obb}};function S(s){return t(s)?(x.offset=s,x):null}const y=new class{constructor(t=0){this.offset=t,this.tmpVertex=l()}applyToVertex(t,s,e){const i=t+this.localOrigin[0],r=s+this.localOrigin[1],a=e+this.localOrigin[2],o=this.offset/Math.sqrt(i*i+r*r+a*a);return this.tmpVertex[0]=t+i*o,this.tmpVertex[1]=s+r*o,this.tmpVertex[2]=e+a*o,this.tmpVertex}applyToAabb(t){for(let s=0;s<3;++s)O[s]=t[0+s]+this.localOrigin[s],v[s]=t[3+s]+this.localOrigin[s],z[s]=O[s];const s=this.applyToVertex(O[0],O[1],O[2]);for(let e=0;e<3;++e)t[e]=s[e],t[e+3]=s[e];const e=s=>{const e=this.applyToVertex(s[0],s[1],s[2]);for(let s=0;s<3;++s)t[s+0]=Math.min(t[s+0],e[s]),t[s+3]=Math.max(t[s+3],e[s])};for(let t=1;t<8;++t){for(let s=0;s<3;++s)z[s]=0==(t&1<<s)?O[s]:v[s];e(z)}let i=0;for(let t=0;t<3;++t)O[t]*v[t]<0&&(i|=1<<t);if(0!==i&&7!==i)for(let t=0;t<8;++t)if(0==(i&t)){for(let s=0;s<3;++s)i[s]?z[s]=0:z[s]=0!=(t&1<<s)?O[s]:v[s];e(z)}for(let s=0;s<3;++s)t[s+0]-=this.localOrigin[s],t[s+3]-=this.localOrigin[s];return t}};function q(s){return t(s)?(y.offset=s,y):null}const V="terrain",d=f();export{u as I,V as T,q as a,S as b,g};
