/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{i as t,u as e,l as n,a as s}from"./maybe.js";import a from"../layers/support/PixelBlock.js";import{a as i}from"./stretchRendererUtils.js";const r={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]},o=[.299,.587,.114];function f(t,e=256){e=Math.min(e,256);const{size:n,counts:s}=t,a=new Uint8Array(n),i=s.reduce(((t,n)=>t+n/e),0);let r=0,o=0,f=0,l=i;for(let t=0;t<n;t++)if(f+=s[t],!(t<n-1&&f+s[t+1]<l)){for(;r<e-1&&l<f;)r++,l+=i;for(let e=o;e<=t;e++)a[e]=r;o=t+1}for(let t=o;t<n;t++)a[t]=e-1;return a}function l(t){const{minCutOff:e,maxCutOff:n,gamma:s,pixelType:a}=t,i=t.outMin||0,r=t.outMax||255;if(!["u8","u16","s8","s16"].includes(a))return null;const o=e.length;let f,l,u=0;"s8"===a?u=-127:"s16"===a&&(u=-32767);let m=256;["u16","s16"].includes(a)&&(m=65536);const c=[],h=r-i;for(f=0;f<o;f++)c[f]=n[f]-e[f],n[f],e[f];const g=s&&s.length>=o,p=[];if(g)for(f=0;f<o;f++)s[f]>1?s[f]>2?p[f]=6.5+(s[f]-2)**2.5:p[f]=6.5+100*(2-s[f])**4:p[f]=1;let x;const M=[];let d,y,b;if(g)for(f=0;f<o;f++){for(b=[],l=0;l<m;l++)d=l+u,x=(d-e[f])/c[f],y=1,s[f]>1&&(y-=(1/h)**(x*p[f])),d<n[f]&&d>e[f]?b[l]=Math.floor(y*h*x**(1/s[f]))+i:d>=n[f]?b[l]=r:b[l]=i;M[f]=b}else for(f=0;f<o;f++){for(b=[],l=0;l<m;l++)d=l+u,d<=e[f]?b[l]=i:d>=n[f]?b[l]=r:b[l]=Math.floor((d-e[f])/c[f]*h)+i;M[f]=b}if(null!=t.contrastOffset){const e=function(t,e){const n=Math.min(Math.max(t,-100),100),s=Math.min(Math.max(e??0,-100),100);let a=0,i=0;const r=new Uint8Array(256);for(a=0;a<256;a++)n>0&&n<100?i=(200*a-25500+510*s)/(2*(100-n))+128:n<=0&&n>-100?i=(200*a-25500+510*s)*(100+n)/2e4+128:100===n?(i=200*a-25500+256*(100-n)+510*s,i=i>0?255:0):-100===n&&(i=128),r[a]=i>255?255:i<0?0:i;return r}(t.contrastOffset,t.brightnessOffset);for(f=0;f<o;f++)for(b=M[f],l=0;l<m;l++)b[l]=e[b[l]]}return{lut:M,offset:u}}function u(t,e,n){const s=[];for(let a=0;a<e.length;a++){let i=0,r=0,f=0;"min"in e[a]?({min:i,max:r,avg:f}=e[a]):[i,r,f]=e[a];let l=f??0;"u8"!==t&&(l=255*(l-i)/(r-i)),n&&(l*=o[a]),s.push(m(l))}return s}function m(t){if(t<=0||t>=255)return 1;let e=0;150!==t&&(e=t<=150?45*Math.cos(.01047*t):17*Math.sin(.021*t));const n=t+e,s=Math.log(t/255),a=Math.log(n/255);if(0===a)return 1;const i=s/a;return isNaN(i)?1:Math.min(9.9,Math.max(.01,i))}function c(t){if(s(t)||!t.pixels?.length)return null;t.statistics||t.updateStatistics();const{pixels:e,mask:a,pixelType:i,statistics:r}=t,o=t.width*t.height,f=e.length;let l,u,m,c,h;const g=[],p=[];let x,M,d,y,b,O,C,k,z,A;const v=256;for(c=0;c<f;c++){if(x=new Uint32Array(v),d=e[c],"u8"===i)if(l=-.5,u=255.5,a)for(h=0;h<o;h++)a[h]&&x[d[h]]++;else for(h=0;h<o;h++)x[d[h]]++;else{if(n(r),l=r[c].minValue,u=r[c].maxValue,m=(u-l)/v,M=new Uint32Array(257),a)for(h=0;h<o;h++)a[h]&&M[Math.floor((d[h]-l)/m)]++;else for(h=0;h<o;h++)M[Math.floor((d[h]-l)/m)]++;for(h=0;h<255;h++)x[h]=M[h];x[255]=M[255]+M[256]}for(g.push({min:l,max:u,size:v,counts:x}),y=0,b=0,k=0,h=0;h<v;h++)y+=x[h],b+=h*x[h];for(z=b/y,h=0;h<v;h++)k+=x[h]*(h-z)**2;A=Math.sqrt(k/(y-1)),m=(u-l)/v,O=(z+.5)*m+l,C=A*m,p.push({min:l,max:u,avg:O,stddev:C})}return{statistics:p,histograms:g}}function h(t){const e=[];for(let n=0;n<t.length;n++){const{min:s,max:a,size:i,counts:r}=t[n];let o=0,f=0;for(let t=0;t<i;t++)o+=r[t],f+=t*r[t];const l=f/o;let u=0;for(let t=0;t<i;t++)u+=r[t]*(t-l)**2;const m=(a-s)/i,c=(l+.5)*m+s,h=Math.sqrt(u/(o-1))*m;e.push({min:s,max:a,avg:c,stddev:h})}return e}function g(s,a){const{pixelBlock:o,bandIds:l,returnHistogramLut:u,rasterInfo:m}=a;let h=null,g=null,p=s.stretchType;if("number"==typeof p&&(p=i[p]),s.dra)if("minMax"===p&&t(o)&&o.statistics)h=o.statistics.map((t=>[t.minValue,t.maxValue,0,0]));else{const e=c(o);h=t(e)?e.statistics:null,g=t(e)?e.histograms:null}else h=s.statistics?.length>0?s.statistics:e(m.statistics),g=s.histograms||e(m.histograms);"percentClip"!==p&&"histogramEqualization"!==p||g?.length||(p="minMax");const x=h?.length||g?.length||m.bandCount,M=[],d=[];let y,b,O,C,k,z,A,v,w,U,E,L;switch(h&&!Array.isArray(h[0])&&(h=h.map((t=>[t.min,t.max,t.avg,t.stddev]))),p){case"none":{const t=r[m.pixelType]||r.f32;for(v=0;v<x;v++)M[v]=t[0],d[v]=t[1]}break;case"minMax":for(n(h),v=0;v<x;v++)M[v]=h[v][0],d[v]=h[v][1];break;case"standardDeviation":for(n(h),v=0;v<x;v++)M[v]=h[v][2]-s.numberOfStandardDeviations*h[v][3],d[v]=h[v][2]+s.numberOfStandardDeviations*h[v][3],M[v]<h[v][0]&&(M[v]=h[v][0]),d[v]>h[v][1]&&(d[v]=h[v][1]);break;case"histogramEqualization":for(n(g),v=0;v<x;v++)M[v]=g[v].min,d[v]=g[v].max;break;case"percentClip":for(n(g),v=0;v<g.length;v++){for(y=g[v],k=new Uint32Array(y.size),C=[...y.counts],C.length>=20&&(C[0]=C[1]=C[2]=C[C.length-1]=C[C.length-2]=0),O=0,b=(y.max-y.min)/y.size,A=-.5===y.min&&1===b?.5:0,w=0;w<y.size;w++)O+=C[w],k[w]=O;for(z=(s.minPercent||0)*O/100,w=0;w<y.size;w++)if(k[w]>z){M[v]=y.min+b*(w+A);break}for(z=(1-(s.maxPercent||0)/100)*O,w=y.size-2;w>=0;w--)if(k[w]<z){d[v]=y.min+b*(w+2-A);break}}break;default:for(n(h),v=0;v<x;v++)M[v]=h[v][0],d[v]=h[v][1]}return"histogramEqualization"===p?(n(g),E=g[0].size||256,U=0,u&&(L=g.map((t=>f(t))))):(E=s.max||255,U=s.min||0),function(t,e){if(null==e||0===e.length)return t;const n=Math.max.apply(null,e),{minCutOff:s,maxCutOff:a,outMin:i,outMax:r,histogramLut:o}=t;return s.length===e.length||s.length<=n?t:{minCutOff:e.map((t=>s[t])),maxCutOff:e.map((t=>a[t])),histogramLut:o?e.map((t=>o[t])):null,outMin:i,outMax:r}}({minCutOff:M,maxCutOff:d,outMax:E,outMin:U,histogramLut:L},l)}function p(t,e){if(s(t)||!t.pixels?.length)return t;const{mask:n,width:i,height:r,pixels:o}=t,{minCutOff:f,maxCutOff:l,gamma:u}=e,m=e.outMin||0,c=e.outMax||255,h=i*r,g=e.outputPixelType||"u8",p=t.pixels.map((()=>a.createEmptyBand(g,h))),x=p.length;let M,d,y,b,O;const C=c-m,k=[];for(M=0;M<x;M++)k[M]=l[M]-f[M],l[M],f[M];const z=u&&u.length>=x,A=[];if(z)for(M=0;M<x;M++)u[M]>1?u[M]>2?A[M]=6.5+(u[M]-2)**2.5:A[M]=6.5+100*(2-u[M])**4:A[M]=1;if(z)if(null!=n){for(d=0;d<h;d++)if(n[d])for(M=0;M<x;M++)y=o[M][d],O=(y-f[M])/k[M],b=1,u[M]>1&&(b-=(1/C)**(O*A[M])),y<l[M]&&y>f[M]?p[M][d]=Math.floor(b*C*O**(1/u[M]))+m:y>=l[M]?p[M][d]=c:p[M][d]=m}else for(d=0;d<h;d++)for(M=0;M<x;M++)y=o[M][d],O=(y-f[M])/k[M],b=1,u[M]>1&&(b-=(1/C)**(O*A[M])),y<l[M]&&y>f[M]?p[M][d]=Math.floor(b*C*O**(1/u[M]))+m:y>=l[M]?p[M][d]=c:p[M][d]=m;else if(null!=n){for(d=0;d<h;d++)if(n[d])for(M=0;M<x;M++)y=o[M][d],y<l[M]&&y>f[M]?p[M][d]=Math.floor((y-f[M])/k[M]*C)+m:y>=l[M]?p[M][d]=c:p[M][d]=m}else for(d=0;d<h;d++)for(M=0;M<x;M++)y=o[M][d],y<l[M]&&y>f[M]?p[M][d]=Math.floor((y-f[M])/k[M]*C)+m:y>=l[M]?p[M][d]=c:p[M][d]=m;const v=new a({width:i,height:r,mask:n,pixels:p,pixelType:g});return v.updateStatistics(),v}export{u as a,f as b,l as c,h as d,c as e,g,p as s};
