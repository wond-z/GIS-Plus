/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"./object.js";import{i as t,g as s}from"./maybe.js";import"./Logger.js";import"./ensureType.js";import"../core/lang.js";import"../core/Error.js";import{subclass as r}from"../core/accessorSupport/decorators/subclass.js";import{d as o}from"./diffUtils.js";import{b as i}from"./heatmapUtils.js";import{k as p}from"./definitions.js";import{B as a}from"./BaseProcessor.js";import{g as m}from"./tileUtils.js";import"../config.js";import"./string.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"../core/Accessor.js";import"../core/Handles.js";import"./get.js";import"./ArrayPool.js";import"../core/accessorSupport/decorators/property.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/promiseUtils.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"./mathUtils.js";import"./vec3.js";import"./common.js";import"./screenUtils.js";import"./vec4f64.js";import"../core/HandleOwner.js";import"./WatchUpdatingTracking.js";import"../core/reactiveUtils.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../rest/support/Query.js";import"../geometry.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"./jsonMap.js";import"../geometry/support/jsonUtils.js";import"../TimeExtent.js";import"./timeUtils.js";import"./enumeration.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./FullTextSearch.js";import"../core/Clonable.js";import"../rest/support/StatisticDefinition.js";import"./TileKey2.js";class n{constructor(e,t){this.offset=e,this.extent=t}}let l=class extends a{constructor(){super(...arguments),this.type="heatmap",this._tileKeyToFeatureSets=new Map}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))])}async update(e,t){const s=t.schema.processors[0];"heatmap"===s.type&&o(this._schema,s)&&(e.mesh=!0,this._schema=s)}onTileUpdate(e){for(const t of e.removed)this._tileKeyToFeatureSets.delete(t.key.id)}onTileClear(e){return this._tileKeyToFeatureSets.delete(e.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:{clear:!0}})}async onTileMessage(e,r,o){this._tileKeyToFeatureSets.has(e.key.id)||this._tileKeyToFeatureSets.set(e.key.id,new Map);const a=this._tileKeyToFeatureSets.get(e.key.id);if(t(r.addOrUpdate)&&r.addOrUpdate.hasFeatures&&a.set(r.addOrUpdate.instance,r),r.end){const t=[],r=function(e){const t=e.key,s=new Map,r=256,o=p,i=e.tileInfoView.tileInfo.isWrappable;return s.set(m(t,-1,-1,i).id,new n([-o,-o],[o-r,o-r,o,o])),s.set(m(t,0,-1,i).id,new n([0,-o],[0,o-r,o,o])),s.set(m(t,1,-1,i).id,new n([o,-o],[0,o-r,r,o])),s.set(m(t,-1,0,i).id,new n([-o,0],[o-r,0,o,o])),s.set(m(t,1,0,i).id,new n([o,0],[0,0,r,o])),s.set(m(t,-1,1,i).id,new n([-o,o],[o-r,0,o,r])),s.set(m(t,0,1,i).id,new n([0,o],[0,0,o,r])),s.set(m(t,1,1,i).id,new n([o,o],[0,0,r,r])),s}(e);this._tileKeyToFeatureSets.forEach(((o,i)=>{if(i===e.key.id)o.forEach((e=>s(e.addOrUpdate,(e=>t.push(e)))));else if(r.has(i)){const e=r.get(i),[p,a]=e.offset;o.forEach((e=>s(e.addOrUpdate,(e=>{const s=e.transform(p,a,1,1);t.push(s)}))))}}));const a=i(t,this._schema.mesh,512,512),l={tileKey:e.key.id,intensityInfo:a},c=[a.matrix];return this.remoteClient.invoke("tileRenderer.onTileData",l,{...o,transferList:c})}}onTileError(e,t,s){return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:e.id,error:t},s)}};l=e([r("esri.views.2d.layers.features.processors.HeatmapProcessor")],l);const c=l;export{c as default};
