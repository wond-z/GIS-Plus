/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{i as e,a as n,e as r}from"./maybe.js";import{s as t,h as s,e as o}from"./screenUtils.js";import{d as a,l as c,c as l,h as i,b as u,m as d,g as p,a as m}from"./vec3.js";import{projectPoint as f}from"../geometry/projection.js";import{h as E,c as S,f as g}from"./plane.js";import{c as y,h as j}from"./ray.js";import{c as x}from"./vector.js";import{d as R,b as v}from"./elevationInfoUtils.js";import{f as I}from"./ray2.js";import{n as H,S as b,I as U}from"./Intersector.js";import{T as h}from"./verticalOffsetUtils.js";import{E as O}from"./dragEventPipeline.js";function T(e,n){return C(e,(()=>n))}function w(e){return C(e,(e=>e.plane))}function C(r,o){const c=a(),l=a();let i=!1;return a=>{const u=o(a);if("start"===a.action){const n=t(a.screenStart,s(j.get())),o=I(r.state.camera,n,B);e(o)&&(i=E(u,o,c))}if(!i)return null;const d=t(a.screenEnd,s(j.get())),p=I(r.state.camera,d,B);return n(p)?null:E(u,p,l)?{...a,renderStart:c,renderEnd:l,plane:u,ray:p}:null}}function D(r,t,s,a=null,c=null){return function(r,t,s,a=null,c=null){let l=null;return i=>{if("start"===i.action&&(l=r.sceneIntersectionHelper.intersectElevationFromScreen(o(i.screenStart.x,i.screenStart.y),t,s,c),e(l)&&e(a)&&!f(l,l,a)))return null;if(n(l))return null;const u=r.sceneIntersectionHelper.intersectElevationFromScreen(o(i.screenEnd.x,i.screenEnd.y),t,s,c);return e(u)?e(a)&&!f(u,u,a)?null:{...i,mapStart:l,mapEnd:u}:null}}(r,s,R(t,r,s),a,c)}function M(e,n,r,t=null,s=null){return D(e,r,v(n),t,s)}function N(n,r,t,s){const o=r.toMap(n.screenStart,{include:[t]});return e(o)?M(r,t,o,s):null}function G(e,n,r){let t=null;const s=new O;return s.next(T(e,function(e,n){const r=q,t=z,s=S();e.renderCoordsHelper.worldUpAtPosition(n,r);const o=i(s,r,u(t,n,e.state.camera.eye));return i(o,o,r),g(n,o,s)}(e,n))).next(function(e,n){const r=a(),t=c(n);e.renderCoordsHelper.worldUpAtPosition(n,r);const s=a(),o=a(),i=s=>(u(s,s,n),x(r,s,s),"global"===e.viewingMode&&c(s)*Math.sign(d(r,s))<.001-t&&u(s,p(s,r,.001),n),m(s,s,n),s);return e=>(e.renderStart=i(l(s,e.renderStart)),e.renderEnd=i(l(o,e.renderEnd)),e)}(e,n)).next(P(e,r)).next((e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,t=e})),e=>(t=null,s.execute(e),t)}function P(n,r){const t=n.renderCoordsHelper;return n=>{const s=t.fromRenderCoords(n.renderStart,r),o=t.fromRenderCoords(n.renderEnd,r);return e(s)&&e(o)?{...n,mapStart:s,mapEnd:o}:null}}var A;function F(n){let r=null;return t=>{switch(t.action){case"start":r=n.disableDisplay();break;case"end":case"cancel":e(r)&&(r.remove(),r=null)}return t}}function k(s,c=null){const l=H(s.state.viewingMode);l.options.selectionMode=!0,l.options.store=b.MIN,l.options.hud=!1;const i=o(),u={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},d=a(),p=r(c,s.spatialReference),m=e=>{s.map.ground&&s.map.ground.opacity<1?u.exclude.add(h):u.exclude.delete(h),s.sceneIntersectionHelper.intersectIntersectorScreen(t(e,i),l,u);const n=l.results.min;let r;if(n.getIntersectionPoint(d))r=n.intersector===U.TERRAIN?A.GROUND:A.OTHER;else{if(!l.results.ground.getIntersectionPoint(d))return null;r=A.GROUND}return{location:s.renderCoordsHelper.fromRenderCoords(d,p),surfaceType:r}};let f;return r=>{if("start"===r.action){const n=m(r.screenStart);f=e(n)?n.location:null}if(n(f))return null;const t=m(r.screenEnd);return e(t)&&e(t.location)?{...r,mapStart:f,mapEnd:t.location,surfaceType:t.surfaceType}:null}}!function(e){e[e.GROUND=0]="GROUND",e[e.OTHER=1]="OTHER"}(A||(A={}));const q=a(),z=a(),B=y();export{A as S,k as a,D as b,G as c,N as d,w as e,P as f,M as g,F as h,T as s};
