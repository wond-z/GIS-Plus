/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{h as t}from"./object.js";import{L as r}from"./Logger.js";import{i,e as s,u as n,a as l}from"./maybe.js";import{t as o,a}from"./screenUtils.js";import{sqlAnd as u}from"../core/sql.js";import{d as p}from"./diffUtils.js";import{v as f}from"./labelingInfo.js";import{c as d,b as c}from"./enums4.js";import{D as y}from"./Utils18.js";import{b as m}from"./utils19.js";import{g}from"./visualVariablesUtils2.js";import{createSymbolSchema as b}from"./createSymbolSchema.js";import{R as x}from"./cimAnalyzer.js";import{Y as h}from"./definitions.js";import"./shapingUtils.js";import"../geometry/Polygon.js";import"./mathUtils.js";import"../geometry/Extent.js";import"../geometry/SpatialReference.js";import"./alignmentUtils.js";import"./vec2f32.js";import"./number2.js";import"./ExpandedCIM.js";import"../core/urlUtils.js";import"../portal/Portal.js";import"./persistableUrlUtils.js";import"../request.js";import"../portal/PortalQueryParams.js";import{g as v}from"./capabilities2.js";import{b as T,c as E}from"./clusterUtils.js";import{t as S}from"./util.js";function w(e,t){return Math.max(e,t)}h.metrics,new x(0,0,24,24);const F=r.getLogger("esri.views.2d.layers.features.support.rendererUtils"),V=e=>{if(!("visualVariables"in e)||!e.visualVariables||!e.visualVariables.length)return e;const t=e.clone(),r=t.visualVariables.map((e=>I(e)?z(e):e));return t.visualVariables=r,t};function I(e){return("size"===e.type||"color"===e.type||"opacity"===e.type)&&null!=e.stops}function z(e){return e.stops=(t=e.type,(r=e.stops).length<=8?r:(F.warn(`Found ${r.length} Visual Variable stops, but MapView only supports 8. Displayed stops will be simplified.`),r.length>16?function(e,t){const[r,...i]=t,s=i.pop(),n=i[0].value,l=i[i.length-1].value,a=(l-n)/6,u=[];for(let r=n;r<l;r+=a){let s=0;for(;r>=i[s].value;)s++;const n=i[s],l=t[s-1],a=r-l.value,p=n.value===l.value?1:a/(n.value-l.value);if("color"===e){const e=i[s],n=t[s-1],l=e.color.clone();l.r=j(n.color.r,l.r,p),l.g=j(n.color.g,l.g,p),l.b=j(n.color.b,l.b,p),l.a=j(n.color.a,l.a,p),u.push({value:r,color:l,label:e.label})}else if("size"===e){const e=i[s],n=t[s-1],l=o(e.size),a=j(o(n.size),l,p);u.push({value:r,size:a,label:e.label})}else{const e=i[s],n=j(t[s-1].opacity,e.opacity,p);u.push({value:r,opacity:n,label:e.label})}}return[r,...u,s]}(t,r):function(e){const[t,...r]=e,i=r.pop();for(;r.length>6;){let e=0,t=0;for(let i=1;i<r.length;i++){const s=r[i-1],n=r[i],l=Math.abs(n.value-s.value);l>t&&(t=l,e=i)}r.splice(e,1)}return[t,...r,i]}(r))),e;var t,r}function j(e,t,r){return(1-r)*e+r*t}function O(){if(t("heatmap-force-raster"))return"raster";const{supportsTextureFloat:e,supportsTextureHalfFloat:r,supportsColorBufferFloat:i,supportsColorBufferFloatBlend:s,supportsColorBufferHalfFloat:n}=v("2d");return e&&i&&s||r&&n?"symbol":t("heatmap-allow-raster-fallback")?"raster":"none"}function M(r){if(!r)return!0;switch(r.type){case"dot-density":if(!v("2d").supportsTextureFloat)return F.error(new e("webgl-missing-extension","Missing WebGL extension OES_Texture_Float which is required for DotDensity")),!1;break;case"heatmap":{const r=O();if("none"===r||"raster"===r&&!t("heatmap-force-raster")){const t=v("2d"),i=["supportsTextureFloat","supportsTextureHalfFloat","supportsColorBufferFloat","supportsColorBufferFloatBlend","supportsColorBufferHalfFloat"].filter((e=>!t[e])).join(", ");if("none"===r)return F.errorOnce(new e("webgl-missing-extension",`Missing WebGL${t.type} requirements for Heatmap: ${i}`)),!1;"raster"===r&&F.warnOnce(`Missing WebGL${t.type} requirements for accelerated Heatmap: ${i}. Feature support may be limited.`)}break}}return!0}const L=r.getLogger("esri.views.2d.layers.features.schemaUtils");function N(e,t){let r=0,s=0,n=c.DEFAULT;if(i(e)){if(s=function(e,t){if(!("visualVariables"in e))return 0;if(!e.hasVisualVariables("size"))return 0;const r=e.getVisualVariablesForType("size");if(!r[0])return 0;const i=r[0];if(t&&"cluster_count"===i.field&&"cluster"===t.type)return t.clusterMaxSize;if("outline"===i.target)return 0;if("stops"===i.transformationType)return i.stops.map((e=>e.size)).reduce(w,0);if("clamped-linear"===i.transformationType){let e=-1/0,t=-1/0;return e="number"==typeof i.maxSize?i.maxSize:i.maxSize.stops.map((e=>e.size)).reduce(w,0),t="number"==typeof i.minSize?i.minSize:i.minSize.stops.map((e=>e.size)).reduce(w,0),Math.max(e,t)}return"real-world-size"===i.transformationType?30:void 0}(e,t),"visualVariables"in e&&(r=function(e){if(!e)return d.NONE;let t=0;for(const r of e)if("size"===r.type){const e=g(r);t|=e,"outline"===r.target&&(t|=e<<4)}else"color"===r.type?t|=d.COLOR:"opacity"===r.type?t|=d.OPACITY:"rotation"===r.type&&(t|=d.ROTATION);return t}(e.visualVariables||[]),"dot-density"===e.type&&(n=c.DOT_DENSITY)),"heatmap"===e.type&&(n=c.HEATMAP),"dictionary"===e.type)return{maxVVSize:s,vvFlags:r,symbologyType:c.DEFAULT};if("pie-chart"===e.type)return{maxVVSize:s,vvFlags:r,symbologyType:c.PIE_CHART};if(n!==c.DOT_DENSITY&&n!==c.HEATMAP){const t=e.getSymbols();"backgroundFillSymbol"in e&&e.backgroundFillSymbol&&t.push(e.backgroundFillSymbol);let r=!0,i=!0;for(const e of t)if("cim"===e.type&&(i=!1),"simple-fill"===e.type||"picture-fill"===e.type){const t=e.outline,s=t&&"none"!==t.style&&"solid"!==t.style,n="simple-fill"===e.type&&"none"!==e.style&&"solid"!==e.style,l="picture-fill"===e.type||n||s;s&&(r=!1),l&&(i=!1)}r?n=i?c.OUTLINE_FILL_SIMPLE:c.OUTLINE_FILL:i&&(n=c.SIMPLE)}}return{vvFlags:r,maxVVSize:s,symbologyType:n}}let U=null;function B(e){if(t("esri-2d-update-debug")){const t=R(e,!0);console.debug("Created new schema",t),console.debug("Schema diff",p(U,t)),U=t}return R(e)}function R(t,r=!1){try{const s=function(t,r=!1){const s=new Array;return s.push(function(t,r,s=!1){const n={indexCount:0,fields:{}},o="featureReduction"in t&&t.featureReduction,a=o?"aggregate":"feature";if("sublayers"in t){const r={type:"subtype",subtypeField:t.subtypeField,renderers:{},symbologyType:c.DEFAULT},l={type:"subtype",mapping:{},target:"feature"},o={type:"subtype",classes:{}},u={type:"symbol",target:"feature",aggregateFields:[],attributes:n,storage:l,mesh:{matcher:r,aggregateMatcher:null,labels:o,sortKey:null}},p=new Set;let f=0;for(const{renderer:u,subtypeCode:d,labelingInfo:y,labelsVisible:m}of t.sublayers){const t={symbologyType:c.DEFAULT,vvFlags:0,maxVVSize:0},g=q(n,a,u,t,s),b=_(n,a,u),x=m&&y;if("visualVariables"in u&&u.visualVariables&&u.visualVariables.length)throw new e("ValidationError","Visual variables are currently not supported for subtype layers");if("dictionary"===g.type)throw new e("ValidationError","Dictionary renderer is not supported in subtype layers");if("subtype"===g.type)throw new e("ValidationError","Nested subtype renderers is not supported");if(i(b)&&"subtype"===b.type)throw new e("ValidationError","Nested subtype storage is not supported");if(i(b)&&i(b.attributeMapping))throw new e("ValidationError","Non-visual-variable attributes are not supported in subtype layers");if("heatmap"===g.type)throw new e("ValidationError","Heatmaps are not supported in subtype layers");if("pie-chart"===g.type)throw new e("ValidationError","Pie-charts are not supported in subtype layers");if(p.has(d))throw new e("ValidationError","Subtype codes for sublayers must be unique");p.add(d),r.renderers[d]=g,l.mapping[d]=b,x&&(o.classes[d]=x.map((e=>J(n,e,"feature",f++,t,s))))}return u}if("heatmap"===t.renderer.type&&"raster"===O()){const{radius:e,fieldOffset:r,field:i}=t.renderer;return{type:"heatmap",aggregateFields:[],attributes:n,target:a,storage:null,mesh:{radius:e,fieldOffset:r,field:A(n,{target:a,field:i,resultType:"numeric"}).field}}}const u=function(t,r,i){const s="featureReduction"in r&&r.featureReduction;if(!s)return{fields:[],labels:[],matcher:null,rendererOverride:null};const n=[];let l=null,o=S(r.geometryType),a=[],u=null;if(s)switch(s.type){case"selection":return L.error(new e("ValidationError","Mapview does not support `selection` reduction type",s)),{fields:[],labels:[],matcher:null,rendererOverride:null};case"cluster":case"binning":if(n.push(...s.fields??[]),"cluster"===s.type?o="esriGeometryPoint":"binning"===s.type&&(o="esriGeometryPolygon"),s.renderer&&!s.renderer.authoringInfo?.isAutoGenerated){if("cluster"===s.type){const{renderer:e}=T(s.renderer,s,null);u=e}else u=s.renderer;const e=N(s.renderer,s);l=q(null,"aggregate",s.renderer,e,i),a=s&&s.labelsVisible&&s.labelingInfo||[]}else if("cluster"===s.type){if(u=E(n,r.renderer,s,null,!0),s.symbol){const e=N(u,s);l={type:"simple",symbol:b(s.symbol,e,i),symbologyType:e.symbologyType}}a=s&&s.labelsVisible&&s.labelingInfo||[]}}return function(e,t){const r={mesh:!0,storage:!0};for(const i of t){const{name:t,onStatisticField:s,onStatisticExpression:n,statisticType:l}=i;let o=null,a=null;const u="numeric",p="feature";n?a=H(e,{type:"expression",target:p,valueExpression:n.expression,resultType:u}).fieldIndex:o=H(e,{type:"field",target:p,field:s,resultType:u}).field,H(e,{type:"statistic",target:"aggregate",name:t,context:r,inField:o,inFieldIndex:a,statisticType:l})}}(t,n),{labels:f(a,"binning"===s.type?"esriGeometryPolygon":o),matcher:l,fields:n,rendererOverride:u}}(n,t,s),p=S(t.geometryType),d=u.rendererOverride??t.renderer,y=N(d,o),m=q(n,a,d,y,s),g=_(n,a,d),x=function(t,r,s){if(i(s)||l(r)||!r.length)return null;r.length>1&&L.warn(`Layer rendering currently only supports ordering by 1 orderByInfo, but found ${r.length}. All but the first will be discarded`);const n=r[0],o="ascending"===n.order?"asc":"desc";return n.field?{field:n.field,order:o}:n.valueExpression?{fieldIndex:H(t,{type:"expression",target:"feature",valueExpression:n.valueExpression,resultType:"numeric"}).fieldIndex,order:o}:(L.error(new e("ValidationError","Expected to find a field or valueExpression for OrderByInfo",n)),null)}(n,t.orderBy,o),h=t.labelsVisible&&t.labelingInfo||[],v=f(h,p);let w=0;const F=[...v.map((e=>J(n,e,"feature",w++,y,s))),...u.labels.map((e=>J(n,e,"aggregate",w++,y,s)))];return{type:"symbol",target:a,attributes:n,aggregateFields:u.fields,storage:g,mesh:{matcher:m,labels:{type:"simple",classes:F},aggregateMatcher:u.matcher,sortKey:x}}}(t)),s}(t,r),n=function(e){return"heatmap"===e.renderer?.type&&"raster"===O()?{type:"heatmap"}:{type:"symbol"}}(t),o={};s.map((r=>function(t,r,i){switch(i.target){case"feature":return void D(t,P(r),i);case"aggregate":{if(!("featureReduction"in r))return;const s=r.featureReduction;switch(s.type){case"selection":throw new e("ValidationError","Mapview does not support `selection` reduction type",s);case"binning":return D(t,P(r),i),void function(e,t,r,i){e.aggregate||(e.aggregate={name:"aggregate",type:"bin",filters:null,input:"feature",params:{fixedBinLevel:t.fixedBinLevel,fields:(t.fields??[]).map((e=>({...e.toJSON(),type:k(e,r)})))},attributes:{}}),C(e.aggregate,i.attributes.fields)}(t,s,r.fields.map((e=>e.toJSON())),i);case"cluster":return D(t,P(r),i),void function(e,t,r,i){e.aggregate||(e.aggregate={name:"aggregate",type:"cluster",input:"feature",filters:null,attributes:{},params:{clusterRadius:a(t.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(a(t.clusterMaxSize)/64),fields:(t.fields??[])?.map((e=>({...e.toJSON(),type:k(e,r)})))}}),C(e.aggregate,i.attributes.fields)}(t,s,r.fields.map((e=>e.toJSON())),i)}}}}(o,t,r)));const p=i(t.subtypeCode)?`${t.subtypeField} = ${t.subtypeCode}`:null;return{source:{definitionExpression:u(t.definitionExpression,p),fields:t.fields.map((e=>e.toJSON())),gdbVersion:t.gdbVersion,historicMoment:t.historicMoment?.getTime(),outFields:t.availableFields,pixelBuffer:t.pixelBuffer,spatialReference:t.spatialReference.toJSON(),timeExtent:t.timeExtent?.toJSON(),customParameters:t.customParameters},attributes:{fields:{},indexCount:0},processors:s,tileRenderer:n,targets:o}}catch(e){if("ValidationError"===e.fieldName)return L.error(e),null;throw e}}function C(e,t){for(const r in t){const i=t[r];if(i.target!==e.name)continue;const s=e.attributes[r];s?(s.context.mesh=s.context.mesh||i.context.mesh,s.context.storage=s.context.storage||i.context.storage):e.attributes[r]=i}return e}function P(e){return[n(e.filter)?.toJSON()??null,n(n(e.featureEffect)?.filter)?.toJSON()??null]}function D(e,t,r){return e.feature||(e.feature={name:"feature",input:"source",filters:t,attributes:{}}),C(e.feature,r.attributes.fields),e}function k(t,r){const{onStatisticExpression:i,onStatisticField:s,statisticType:n}=t;switch(n){case"min":case"max":case"avg":case"avg_angle":case"sum":case"count":return"esriFieldTypeDouble";case"mode":{if(i){const{returnType:r}=i;return r?"string"===r?"esriFieldTypeString":"esriFieldTypeDouble":(L.error(new e("ValidationError","Unable to infer type of aggregateField with onStatisticExpression. ReturnType is not defined",t)),"esriFieldTypeString")}const n=r.find((e=>e.name===s));return n?n.type:(L.error(new e("ValidationError","Unable to infer type of aggregateField with onStatisticExpression. ReturnType is not defined",t)),"esriFieldTypeString")}}}function A(e,t){return t.field?H(e,{...t,type:"field",field:t.field}):t.valueExpression?H(e,{...t,type:"expression",valueExpression:t.valueExpression}):{field:null,fieldIndex:null}}function H(e,t){switch(t.type){case"expression":{const r=t.valueExpression;if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"label-expression":{const r=JSON.stringify(t.label);if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"field":{const r=t.field;return"aggregate"===t.target&&e.fields[r]||(e.fields[r]={...t,name:r}),{field:r}}case"statistic":return e.fields[t.name]={...t},{field:t.name}}}function J(e,t,r,i,s,n=!1){const l=H(e,{type:"label-expression",target:r,context:{mesh:!0},resultType:"string",label:{labelExpression:t.labelExpression,labelExpressionInfo:t.labelExpressionInfo?{expression:t.labelExpressionInfo.expression}:null,symbol:!!t.symbol,where:t.where}}),{fieldIndex:o}=l;return{...b(t,s,n),fieldIndex:o,target:r,index:i}}function _(e,t,r){let s;switch(r.type){case"simple":case"class-breaks":case"unique-value":case"dictionary":s={visualVariables:!0,attributes:null};break;default:s=m(r).getStorageSpec(r)}return function(e,t,r,s){if(l(r))return null;const{visualVariables:n,attributes:o}=r;let a=null;n&&"visualVariables"in s&&(a=function(e,t,r){if(!r||!r.length)return[];const i={storage:!0},s="numeric";return function(e){return e.map((e=>I(e)?z(e.clone()):e))}(r).map((r=>{const n=y(r.type),{field:l,fieldIndex:o}=A(e,{target:t,valueExpression:r.valueExpression,field:r.field,context:i,resultType:s});switch(r.type){case"size":return"$view.scale"===r.valueExpression?null:{type:"size",binding:n,field:l,fieldIndex:o,normalizationField:A(e,{target:t,field:r.normalizationField,context:i,resultType:s}).field,valueRepresentation:r.valueRepresentation??null};case"color":return{type:"color",binding:n,field:l,fieldIndex:o,normalizationField:A(e,{target:t,field:r.normalizationField,context:i,resultType:s}).field};case"opacity":return{type:"opacity",binding:n,field:l,fieldIndex:o,normalizationField:A(e,{target:t,field:r.normalizationField,context:i,resultType:s}).field};case"rotation":return{type:"rotation",binding:n,field:l,fieldIndex:o}}})).filter((e=>e))}(e,t,s.visualVariables));const u=i(a)?4:0;let p=null;return i(o)&&(p=o.map(((r,i)=>{const{field:s,fieldIndex:n}=A(e,{valueExpression:r.valueExpression,field:r.field,resultType:"numeric",target:t});return{binding:i+u,field:s,fieldIndex:n}}))),{type:"simple",target:t,attributeMapping:p,vvMapping:a}}(e,t,s,r)}function q(t,r,i,n,l=!1){const o=s(t,{indexCount:0,fields:{}});switch(i.type){case"simple":case"dot-density":return function(e,t,r,i=!1){const s=t.getSymbols(),n=s.length?s[0]:null;return{type:"simple",symbol:b(n,r,i),symbologyType:r.symbologyType}}(0,i,n,l);case"class-breaks":return function(e,t,r,i,s=!1){const n=r.backgroundFillSymbol,{field:l,fieldIndex:o}=A(e,{target:t,field:r.field,valueExpression:r.valueExpression,resultType:"numeric",context:{mesh:!0,use:"renderer.field"}}),a=r.normalizationType,u="log"===a?"esriNormalizeByLog":"percent-of-total"===a?"esriNormalizeByPercentOfTotal":"field"===a?"esriNormalizeByField":null,p=r.classBreakInfos.map((e=>({symbol:b(e.symbol,i,s),min:e.minValue,max:e.maxValue}))).sort(((e,t)=>e.min-t.min));return{type:"interval",attributes:e.fields,field:l,fieldIndex:o,backgroundFillSymbol:b(n,i,s),defaultSymbol:b(r.defaultSymbol,i,s),intervals:p,normalizationField:r.normalizationField,normalizationTotal:r.normalizationTotal,normalizationType:u,isMaxInclusive:r.isMaxInclusive,symbologyType:i.symbologyType}}(o,r,i,n,l);case"unique-value":return function(t,r,i,s,n=!1){const l=[],o=i.backgroundFillSymbol,a={target:r,context:{mesh:!0},resultType:"string"};if(i.field&&"string"!=typeof i.field)throw new e("ValidationError","Expected renderer.field to be a string",i);const{field:u,fieldIndex:p}=A(t,{...a,field:i.field,valueExpression:i.valueExpression});for(const e of i.uniqueValueInfos)l.push({value:""+e.value,symbol:b(e.symbol,s,n)});return{type:"map",attributes:t.fields,field:u,fieldIndex:p,field2:A(t,{...a,field:i.field2}).field,field3:A(t,{...a,field:i.field3}).field,fieldDelimiter:i.fieldDelimiter,backgroundFillSymbol:b(o,s),defaultSymbol:b(i.defaultSymbol,s),map:l,symbologyType:s.symbologyType}}(o,r,i,n,l);case"dictionary":return function(e,t,r,i=!1){return{type:"dictionary",config:t.config,fieldMap:t.fieldMap,scaleExpression:t.scaleExpression,url:t.url,symbolOptions:r,symbologyType:r.symbologyType}}(0,i,n,l);case"heatmap":return function(e,t,r,i=!1){const s=t.getSymbols(),n=s.length?s[0]:null;return{type:"heatmap",symbol:b(n,r,i),symbologyType:r.symbologyType}}(0,i,n,l);case"pie-chart":return function(e,t,r,i=!1){const s=t.getSymbols(),n=s[0],l=s.length>1?s[1]:null;return{type:"pie-chart",markerSymbol:b(n,r,i),fillSymbol:b(l,r,i),symbologyType:r.symbologyType}}(0,i,n,l)}}export{q as a,B as b,N as c,M as i,V as s};
