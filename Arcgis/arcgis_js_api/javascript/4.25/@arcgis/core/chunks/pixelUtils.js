/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{a as t,i as e,u as n}from"./maybe.js";import l from"../layers/support/PixelBlock.js";var i,o;function s(t){return e(t)&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function r(t,e){if(!e?.length||!s(t))return t;const n=t.pixels.length;return e&&e.some((t=>t>=n))||1===n&&1===e.length&&0===e[0]?t:n!==e.length||e.some(((t,e)=>t!==e))?new l({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function a(t){if(!t?.length||t.some((t=>!s(t))))return null;if(1===t.length)return e(t[0])?t[0].clone():null;const n=t,{width:i,height:o,pixelType:r}=n[0];if(n.some((t=>t.width!==i||t.height!==o)))return null;const a=n.map((({mask:t})=>t)).filter((t=>null!=t));let h=null;a.length&&(h=new Uint8Array(i*o),h.set(a[0]),a.length>1&&g(a.slice(1),h));const f=[];n.forEach((({pixels:t})=>f.push(...t)));const c=n.map((({statistics:t})=>t)).filter((t=>t?.length)),u=[];return c.forEach((t=>u.push(...t))),new l({pixelType:r,width:i,height:o,mask:h,pixels:f,statistics:u.length?u:null})}function h(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let l=0;n[0][0]<0&&(l=n[0][0]);const i=Math.max(256,n[n.length-1][0]-l+1),o=new Uint8Array(4*i),s=[];let r,a=0,h=0;const f=5===n[0].length;if(i>65536)return n.forEach((t=>{s[t[0]-l]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:s,offset:l,alphaSpecified:f};if(t.fillUnspecified)for(r=n[h],a=r[0]-l;a<i;a++)o[4*a]=r[1],o[4*a+1]=r[2],o[4*a+2]=r[3],o[4*a+3]=f?r[4]:255,a===r[0]-l&&(r=h===n.length-1?r:n[++h]);else for(a=0;a<n.length;a++)r=n[a],h=4*(r[0]-l),o[h]=r[1],o[h+1]=r[2],o[h+2]=r[3],o[h+3]=f?r[4]:255;return{indexedColormap:o,offset:l,alphaSpecified:f}}function f(t,n){if(!s(t))return t;if(!n||!n.indexedColormap&&!n.indexed2DColormap)return t;const l=t.clone(),i=l.pixels;let o=l.mask;const r=l.width*l.height;if(1!==i.length)return t;const{indexedColormap:a,indexed2DColormap:h,offset:f,alphaSpecified:c}=n;let u=0;const p=i[0],x=new Uint8Array(p.length),m=new Uint8Array(p.length),d=new Uint8Array(p.length);let g,y=0;if(a){const t=a.length-1;if(e(o))for(u=0;u<r;u++)o[u]&&(y=4*(p[u]-f),y<f||y>t?o[u]=0:(x[u]=a[y],m[u]=a[y+1],d[u]=a[y+2],o[u]=a[y+3]));else{for(o=new Uint8Array(r),u=0;u<r;u++)y=4*(p[u]-f),y<f||y>t?o[u]=0:(x[u]=a[y],m[u]=a[y+1],d[u]=a[y+2],o[u]=a[y+3]);l.mask=o}}else if(h)if(e(o))for(u=0;u<r;u++)o[u]&&(g=h[p[u]],x[u]=g[0],m[u]=g[1],d[u]=g[2],o[u]=g[3]);else{for(o=new Uint8Array(r),u=0;u<r;u++)g=h[p[u]],x[u]=g[0],m[u]=g[1],d[u]=g[2],o[u]=g[3];l.mask=o}return l.pixels=[x,m,d],l.statistics=null,l.pixelType="u8",l.maskIsAlpha=c,l}function c(t,e){if(!s(t))return null;const{pixels:n,mask:i}=t,o=n.length;let r=e.lut;const{offset:a}=e;r&&1===r[0].length&&(r=n.map((()=>r)));const h=[],f=e.outputPixelType||"u8";for(let t=0;t<o;t++){const e=u(n[t],i,r[t],a||0,f);h.push(e)}const c=new l({width:t.width,height:t.height,pixels:h,mask:i,pixelType:f});return c.updateStatistics(),c}function u(t,e,n,i,o){const s=t.length,r=l.createEmptyBand(o,s);if(e)for(let l=0;l<s;l++)e[l]&&(r[l]=n[t[l]-i]);else for(let e=0;e<s;e++)r[e]=n[t[e]-i];return r}function p(t,e){if(!s(t))return null;const n=t.clone(),{pixels:l}=n,i=n.width*n.height,o=e.length,r=Math.floor(o/2),a=e[Math.floor(r)],h=l[0];let f,c,u,p,x,m,d=!1;const g=new Uint8Array(i),y=new Uint8Array(i),w=new Uint8Array(i);let k=n.mask;const M=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(i),k.fill(M?255:1),n.mask=k),x=0;x<i;x++)if(k[x]){for(f=h[x],d=!1,m=r,c=a,u=0,p=o-1;p-u>1;){if(f===c.value){d=!0;break}f>c.value?u=m:p=m,m=Math.floor((u+p)/2),c=e[Math.floor(m)]}d||(f===e[u].value?(c=e[u],d=!0):f===e[p].value?(c=e[p],d=!0):f<e[u].value?(d=!1,c=null):f>e[u].value&&(f<e[p].value?(c=e[u],d=!0):p===o-1?(d=!1,c=null):(c=e[p],d=!0))),d?(g[x]=c.mappedColor[0],y[x]=c.mappedColor[1],w[x]=c.mappedColor[2],k[x]=c.mappedColor[3]):g[x]=y[x]=w[x]=k[x]=0}return n.pixels=[g,y,w],n.mask=k,n.pixelType="u8",n.maskIsAlpha=M,n}function x(t,e){if(!s(t))return null;const{width:n,height:i}=t,{inputRanges:o,outputValues:r,outputPixelType:a,noDataRanges:h,allowUnmatched:f}=e,c=t.pixels[0],u=l.createEmptyBand(a,c.length);f&&u.set(c);const p=t.mask,x=o.length/2;for(let t=0;t<i;t++)for(let e=0;e<n;e++){const l=t*n+e;if(!p||p[l]){const t=c[l];for(let e=x-1;e>=0;e--)if(t>=o[2*e]&&t<=o[2*e+1]){u[l]=r[e];break}}}let m=p;if(h?.length){m=new Uint8Array(n*i),p&&m.set(p);for(let t=0;t<i;t++)for(let e=0;e<n;e++){const l=t*n+e;if(!p||p[l]){const t=c[l];for(let e=0;e<x;e+=2)if(t>=h[e]&&t<=h[e+1]){u[l]=0,m[l]=0;break}}}}return new l({width:n,height:i,pixelType:a,pixels:[u],mask:m})}function m(t,e,n,l){const i=null!=n&&n.length>=2?new Set(n):null,o=1===n?.length?n[0]:null,s=!!e?.length;for(let n=0;n<t.length;n++)if(l[n]){const r=t[n];if(s){let t=!1;for(let n=0;n<e.length;n+=2)if(r>=e[n]&&r<=e[n+1]){t=!0;break}t||(l[n]=0)}l[n]&&(r===o||i?.has(r))&&(l[n]=0)}}function d(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][l]){n=!0;break}n||(e[l]=0)}}function g(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][l]){n=!0;break}n&&(e[l]=0)}}function y(t,e){if(!s(t))return null;const{width:n,height:i,pixels:o}=t,r=n*i,a=new Uint8Array(r);t.mask?a.set(t.mask):a.fill(255);const h=o.length,{includedRanges:f,noDataValues:c,outputPixelType:p,matchAll:x,lookup:y}=e;if(y){const t=[];for(let e=0;e<h;e++){const n=u(o[e],a,y.lut,y.offset||0,"u8");t.push(n)}1===t.length?a.set(t[0]):x?d(t,a):g(t,a)}else if(x){const t=[];for(let e=0;e<h;e++){const n=new Uint8Array(r);n.set(a),m(o[e],f,c,n),t.push(n)}1===t.length?a.set(t[0]):d(t,a)}else for(let t=0;t<h;t++)m(o[t],f,c,a);return new l({width:n,height:i,pixelType:p,pixels:o,mask:a})}function w(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,o=t.includes("s")?-i/2:0,s=l.createEmptyBand(t,i);for(let t=0;t<e.length;t++){const l=n[t],i=Math.ceil(e[2*t]-o),r=Math.floor(e[2*t+1]-o);for(let t=i;t<=r;t++)s[t]=l}return{lut:s,offset:o}}function k(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const l=t.includes("16")?65536:256,i=t.includes("s")?-l/2:0,o=new Uint8Array(l);if(e)for(let t=0;t<e.length;t++){const n=Math.ceil(e[2*t]-i),l=Math.floor(e[2*t+1]-i);for(let t=n;t<=l;t++)o[t]=255}if(n)for(let t=0;t<n.length;t++)o[n[t]-i]=0;return{lut:o,offset:i}}function M(e,n){if(!e||0===e.length)return null;const l=e.find((t=>t.pixelBlock));if(!l||t(l.pixelBlock))return null;const i=(l.extent.xmax-l.extent.xmin)/l.pixelBlock.width,o=(l.extent.ymax-l.extent.ymin)/l.pixelBlock.height,s=.01*Math.min(i,o),r=e.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,r.map((t=>t.extent.xmin))),h=Math.min.apply(null,r.map((t=>t.extent.ymin))),f=Math.max.apply(null,r.map((t=>t.extent.xmax))),c=Math.max.apply(null,r.map((t=>t.extent.ymax))),u={x:Math.round((n.xmin-a)/i),y:Math.round((c-n.ymax)/o)},p={width:Math.round((f-a)/i),height:Math.round((c-h)/o)},x={width:Math.round((n.xmax-n.xmin)/i),height:Math.round((n.ymax-n.ymin)/o)};return Math.round(p.width/l.pixelBlock.width)*Math.round(p.height/l.pixelBlock.height)!==r.length||u.x<0||u.y<0||p.width<x.width||p.height<x.height?null:{extent:n,pixelBlock:U(r.map((t=>t.pixelBlock)),p,{clipOffset:u,clipSize:x})}}function A(t,e,n,l,i,o){const{width:s,height:r}=n.block,{x:a,y:h}=n.offset,{width:f,height:c}=n.mosaic,u=function(t,e,n,l,i,o,s,r){return{xmin:i<=n*t?0:i<n*t+t?i-n*t:t,ymin:o<=l*e?0:o<l*e+e?o-l*e:e,xmax:i+s<=n*t?0:i+s<n*t+t?i+s-n*t:t,ymax:o+r<=l*e?0:o+r<l*e+e?o+r-l*e:e}}(s,r,l,i,a,h,f,c);let p=0,x=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth??0,e=s*o.resolutionX,n=o.startX+l*e,i=n+e;n<t&&i>t?x=o.rightPadding:n>=t&&(p=o.leftMargin-o.rightPadding,x=0)}if(u.xmax-=x,"number"!=typeof e)for(let n=u.ymin;n<u.ymax;n++){const o=(i*r+n-h)*f+(l*s-a)+p,c=n*s;for(let n=u.xmin;n<u.xmax;n++)t[o+n]=e[c+n]}else for(let n=u.ymin;n<u.ymax;n++){const o=(i*r+n-h)*f+(l*s-a)+p;for(let n=u.xmin;n<u.xmax;n++)t[o+n]=e}}function U(i,o,r={}){const{clipOffset:a,clipSize:h,alignmentInfo:f,blockWidths:c}=r;if(c)return function(i,o,r){const a=i.find((t=>e(t)));if(t(a))return null;const h=i.some((t=>!e(t)||!!t.mask)),{width:f,height:c}=o,u=h?new Uint8Array(f*c):null,{blockWidths:p}=r,x=[],m=a.getPlaneCount(),d=l.getPixelArrayConstructor(a.pixelType);if(h)for(let t=0,e=0;t<i.length;e+=p[t],t++){const l=i[t];if(!s(l))continue;const o=n(l.mask);for(let n=0;n<c;n++)for(let i=0;i<p[t];i++)u[n*f+i+e]=null==o?255:o[n*l.width+i]}for(let t=0;t<m;t++){const e=new d(f*c);for(let n=0,l=0;n<i.length;l+=p[n],n++){const o=i[n];if(!s(o))continue;const r=o.pixels[t];if(null!=r)for(let t=0;t<c;t++)for(let i=0;i<p[n];i++)e[t*f+i+l]=r[t*o.width+i]}x.push(e)}const g=new l({width:f,height:c,mask:u,pixels:x,pixelType:a.pixelType});return g.updateStatistics(),g}(i,o,{blockWidths:c});const u=i.find((t=>s(t)));if(t(u))return null;const p=h?h.width:o.width,x=h?h.height:o.height,m=u.width,d=u.height,g=o.width/m,y=o.height/d,w={offset:a||{x:0,y:0},mosaic:h||o,block:{width:m,height:d}},k=u.pixelType,M=l.getPixelArrayConstructor(k),U=u.pixels.length,T=[];let C,b,S;for(let t=0;t<U;t++){b=new M(p*x);for(let e=0;e<y;e++)for(let n=0;n<g;n++){const l=i[e*g+n];s(l)&&(C=l.pixels[t],A(b,C,w,n,e,f))}T.push(b)}if(i.some((n=>t(n)||e(n.mask)&&n.mask.length>0))){S=new Uint8Array(p*x);for(let t=0;t<y;t++)for(let n=0;n<g;n++){const l=i[t*g+n],o=e(l)?l.mask:null;e(o)?A(S,o,w,n,t,f):A(S,l?1:0,w,n,t,f)}}const B=new l({width:p,height:x,pixels:T,pixelType:k,mask:S});return B.updateStatistics(),B}function T(t,e,n){if(!s(t))return null;const{width:l,height:i}=t,o=e.x,r=e.y,a=n.width+o,h=n.height+r;if(o<0||r<0||a>l||h>i)return t;if(0===o&&0===r&&a===l&&h===i)return t;t.mask||(t.mask=new Uint8Array(l*i));const f=t.mask;for(let t=0;t<i;t++){const e=t*l;for(let n=0;n<l;n++)f[e+n]=t<r||t>=h||n<o||n>=a?0:1}return t.updateStatistics(),t}function C(t){if(0===t.size)return 0;let e=0,n=-1,l=0;const i=t.keys();let o=i.next();for(;!o.done;)l=t.get(o.value),l>e&&(n=o.value,e=l),o=i.next();return n}function b(t,e,n){if(0===n)return;const l=t.get(e);1===l?t.delete(e):t.set(e,l-1)}function S(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function B(t,e,i){let{x:o,y:r}=e;const{width:a,height:h}=i;if(0===o&&0===r&&h===t.height&&a===t.width)return t;const{width:f,height:c}=t,u=Math.max(0,r),p=Math.max(0,o),x=Math.min(o+a,f),m=Math.min(r+h,c);if(x<0||m<0||!s(t))return null;o=Math.max(0,-o),r=Math.max(0,-r);const{pixels:d}=t,g=a*h,y=d.length,w=[];for(let e=0;e<y;e++){const n=d[e],i=l.createEmptyBand(t.pixelType,g);for(let t=u;t<m;t++){const e=t*f;let l=(t+r-u)*a+o;for(let t=p;t<x;t++)i[l++]=n[e+t]}w.push(i)}const k=new Uint8Array(g),M=n(t.mask);for(let t=u;t<m;t++){const e=t*f;let n=(t+r-u)*a+o;for(let t=p;t<x;t++)k[n++]=M?M[e+t]:1}const A=new l({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function P(t,n=!0){if(!s(t))return null;const{pixels:i,width:o,height:r,mask:a,pixelType:h}=t,f=[],c=Math.round(o/2),u=Math.round(r/2),p=r-1,x=o-1;for(let t=0;t<i.length;t++){const e=i[t],s=l.createEmptyBand(h,c*u);let a=0;for(let t=0;t<r;t+=2)for(let l=0;l<o;l+=2){const i=e[t*o+l];if(n){const n=l===x?i:e[t*o+l+1],r=t===p?i:e[t*o+l+o],h=l===x?r:t===p?n:e[t*o+l+o+1];s[a++]=(i+n+r+h)/4}else s[a++]=i}f.push(s)}let m=null;if(e(a)){m=new Uint8Array(c*u);let t=0;for(let e=0;e<r;e+=2)for(let l=0;l<o;l+=2){const i=a[e*o+l];if(n){const n=l===x?i:a[e*o+l+1],s=e===p?i:a[e*o+l+o],r=l===x?s:e===p?n:a[e*o+l+o+1];m[t++]=i*n*s*r?1:0}else m[t++]=i}}return new l({width:c,height:u,pixelType:h,pixels:f,mask:m})}function v(t,e,n){if(!s(t))return null;const{width:l,height:i}=e;let{width:o,height:r}=t;const a=new Map,h={x:0,y:0},f=null==n?1:1+n;let c=t;for(let t=0;t<f;t++){const n=Math.ceil(o/l),s=Math.ceil(r/i);for(let o=0;o<s;o++){h.y=o*i;for(let i=0;i<n;i++){h.x=i*l;const n=B(c,h,e);a.set(`${t}/${o}/${i}`,n)}}t<f-1&&(c=P(c)),o=Math.round(o/2),r=Math.round(r/2)}return a}function _(t,e,n,l,i=.5){const{width:o,height:s}=t,{width:r,height:a}=e,h=l.cols,f=l.rows,c=Math.ceil(r/h-.1/h),u=Math.ceil(a/f-.1/f);let p,x,m,d,g,y,w;const k=c*h,M=k*u*f,A=new Float32Array(M),U=new Float32Array(M),T=new Uint32Array(M),C=new Uint32Array(M);let b,S,B=0;for(let t=0;t<u;t++)for(let e=0;e<c;e++){p=12*(t*c+e),x=n[p],m=n[p+1],d=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let n=0;n<f;n++){B=(t*f+n)*k+e*h,S=(n+.5)/f;for(let t=0;t<n;t++)b=(t+.5)/h,A[B+t]=(x*b+m*S+d)*o-i,U[B+t]=(g*b+y*S+w)*s-i,T[B+t]=Math.round(A[B+t]),C[B+t]=Math.round(U[B+t])}p+=6,x=n[p],m=n[p+1],d=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let n=0;n<f;n++){B=(t*f+n)*k+e*h,S=(n+.5)/f;for(let t=n;t<h;t++)b=(t+.5)/h,A[B+t]=(x*b+m*S+d)*o-i,U[B+t]=(g*b+y*S+w)*s-i,T[B+t]=Math.round(A[B+t]),C[B+t]=Math.round(U[B+t])}}return{offsets_x:A,offsets_y:U,offsets_xi:T,offsets_yi:C,gridWidth:k}}function E(t,e){const{coefficients:n,spacing:l}=e,{offsets_x:i,offsets_y:o,gridWidth:s}=_(t,t,n,{rows:l[0],cols:l[1]},.5),{width:r,height:a}=t,h=new Float32Array(r*a),f=180/Math.PI;for(let t=0;t<a;t++)for(let e=0;e<r;e++){const n=t*s+e,l=0===t?n:n-s,c=t===a-1?n:n+s,u=i[l]-i[c],p=o[c]-o[l];if(isNaN(u)||isNaN(p))h[t*r+e]=90;else{let n=Math.atan2(p,u)*f;n=(360+n)%360,h[t*r+e]=n}}return h}function W(t,i,o,r,a="nearest"){if(!s(t))return null;"majority"===a&&(t=function(t){if(!s(t))return null;const e=t.clone(),{width:l,height:i,pixels:o}=t,r=o[0],a=e.pixels[0],h=n(t.mask);for(let t=2;t<i-1;t++){const e=new Map;for(let n=t-2;n<t+2;n++)for(let t=0;t<4;t++){const i=n*l+t;S(e,r[i],h?h[i]:1)}a[t*l]=C(e),a[t*l+1]=a[t*l+2]=a[t*l];let n=3;for(;n<l-1;n++){let i=(t-2)*l+n+1;S(e,r[i],h?h[i]:1),i=(t-1)*l+n+1,S(e,r[i],h?h[i]:1),i=t*l+n+1,S(e,r[i],h?h[i]:1),i=(t+1)*l+n+1,S(e,r[i],h?h[i]:1),i=(t-2)*l+n-3,b(e,r[i],h?h[i]:1),i=(t-1)*l+n-3,b(e,r[i],h?h[i]:1),i=t*l+n-3,b(e,r[i],h?h[i]:1),i=(t+1)*l+n-3,b(e,r[i],h?h[i]:1),a[t*l+n]=C(e)}a[t*l+n+1]=a[t*l+n]}for(let t=0;t<l;t++)a[t]=a[l+t]=a[2*l+t],a[(i-1)*l+t]=a[(i-2)*l+t];return e.updateStatistics(),e}(t));const{pixels:h,mask:f,pixelType:c}=t,u=t.width,p=t.height,x=l.getPixelArrayConstructor(c),m=h.length,{width:d,height:g}=i;let y=!1;for(let t=0;t<o.length;t+=3)-1===o[t]&&-1===o[t+1]&&-1===o[t+2]&&(y=!0);const{offsets_x:w,offsets_y:k,offsets_xi:M,offsets_yi:A,gridWidth:U}=_({width:u,height:p},i,o,r,"majority"===a?0:.5);let T;const B=(t,e,n)=>{const l=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let i=0;i<g;i++){T=i*U;for(let o=0;o<d;o++){if(w[T]<0||k[T]<0)t[i*d+o]=0;else if(n)t[i*d+o]=e[M[T]+A[T]*u];else{const n=Math.floor(w[T]),s=Math.floor(k[T]),r=Math.ceil(w[T]),a=Math.ceil(k[T]),h=w[T]-n,c=k[T]-s;if(!f||f[n+s*u]&&f[n+s*u]&&f[n+a*u]&&f[r+a*u]){const f=(1-h)*e[n+s*u]+h*e[r+s*u],p=(1-h)*e[n+a*u]+h*e[r+a*u];t[i*d+o]=(1-c)*f+c*p+l}else t[i*d+o]=e[M[T]+A[T]*u]}T++}}},P=[];let v;for(let t=0;t<m;t++)v=new x(d*g),B(v,h[t],"nearest"===a||"majority"===a),P.push(v);const E=new l({width:d,height:g,pixelType:c,pixels:P});if(e(f))E.mask=new Uint8Array(d*g),B(E.mask,f,!0);else if(y){E.mask=new Uint8Array(d*g);for(let t=0;t<d*g;t++)E.mask[t]=w[t]<0||k[t]<0?0:1}return E.updateStatistics(),E}!function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"}(i||(i={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(o||(o={}));export{o as M,i as N,h as a,T as b,f as c,W as d,r as e,a as f,E as g,k as h,s as i,y as j,w as k,c as l,U as m,x as n,B as o,M as p,p as r,v as s};
