/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{J as t}from"./jsonMap.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import{JSONSupport as a}from"../core/JSONSupport.js";import{t as s,f as o}from"./colorRamps.js";import r from"../symbols/Symbol.js";import{L as i}from"./Logger.js";const u=new t({classBreaksDef:"class-breaks-definition",uniqueValueDef:"unique-value-definition"});let c=class extends a{constructor(){super(...arguments),this.baseSymbol=null,this.colorRamp=null,this.type=null}};e([l({type:r,json:{write:!0}})],c.prototype,"baseSymbol",void 0),e([l({types:s,json:{read:{reader:o},write:!0}})],c.prototype,"colorRamp",void 0),e([l({json:{read:u.read,write:u.write}})],c.prototype,"type",void 0),c=e([n("esri.rest.support.ClassificationDefinition")],c);const f=c,p=new t({esriClassifyEqualInterval:"equal-interval",esriClassifyManual:"manual",esriClassifyNaturalBreaks:"natural-breaks",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",esriClassifyDefinedInterval:"defined-interval"}),d=new t({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"});let m=class extends f{constructor(){super(...arguments),this.breakCount=null,this.classificationField=null,this.classificationMethod=null,this.normalizationField=null,this.normalizationType=null,this.type="class-breaks-definition"}set standardDeviationInterval(e){"standard-deviation"===this.classificationMethod&&this._set("standardDeviationInterval",e)}set definedInterval(e){"defined-interval"===this.classificationMethod&&this._set("definedInterval",e)}};e([l({json:{write:!0}})],m.prototype,"breakCount",void 0),e([l({json:{write:!0}})],m.prototype,"classificationField",void 0),e([l({type:String,json:{read:p.read,write:p.write}})],m.prototype,"classificationMethod",void 0),e([l({json:{write:!0}})],m.prototype,"normalizationField",void 0),e([l({json:{read:d.read,write:d.write}})],m.prototype,"normalizationType",void 0),e([l({value:null,json:{write:!0}})],m.prototype,"standardDeviationInterval",null),e([l({value:null,json:{write:!0}})],m.prototype,"definedInterval",null),e([l()],m.prototype,"type",void 0),m=e([n("esri.rest.support.ClassBreaksDefinition")],m);const h=m,b=i.getLogger("esri.rest.support.generateRendererUtils");function y(e,t){return Number(e.toFixed(t))}function v(e){const t=M(e),l=[],n=t.uniqueValues.length;for(let e=0;e<n;e++){const n=t.uniqueValues[e],a=t.valueFrequency[e],s=n.toString();l.push({value:n,count:a,label:s})}return{uniqueValues:l}}function V(e){const{normalizationTotal:t}=e,l=function(e){const t=e.definition,{classificationMethod:l,breakCount:n,normalizationType:a,definedInterval:s}=t,o=[];let r=e.values;if(0===r.length)return[];r=r.sort(((e,t)=>e-t));const i=r[0],u=r[r.length-1];if("equal-interval"===l)if(r.length>=n){const e=(u-i)/n;let t=i;for(let l=1;l<n;l++){const n=y(i+l*e,6);o.push({minValue:t,maxValue:n,label:g(t,n,a)}),t=n}o.push({minValue:t,maxValue:u,label:g(t,u,a)})}else r.forEach((e=>{o.push({minValue:e,maxValue:e,label:g(e,e,a)})}));else if("natural-breaks"===l){const t=M(r),l=e.valueFrequency||t.valueFrequency,s=function(e,t,l){const n=e.length,a=[];l>n&&(l=n);for(let e=0;e<l;e++)a.push(Math.round(e*n/l-1));a.push(n-1);let s=j(a,e,t,l);return function(e,t,l,n,a,s){let o=0,r=0,i=0,u=0,c=!0;for(let f=0;f<2&&c;f++){0===f&&(c=!1);for(let f=0;f<s-1;f++)for(;l[f+1]+1!==l[f+2];){l[f+1]=l[f+1]+1;const s=x(f,l,n,a);i=s.sbMean,o=s.sbSdcm;const p=x(f+1,l,n,a);if(u=p.sbMean,r=p.sbSdcm,!(o+r<t[f]+t[f+1])){l[f+1]=l[f+1]-1;break}t[f]=o,t[f+1]=r,e[f]=i,e[f+1]=u,c=!0}for(let f=s-1;f>0;f--)for(;l[f]!==l[f-1]+1;){l[f]=l[f]-1;const s=x(f-1,l,n,a);i=s.sbMean,o=s.sbSdcm;const p=x(f,l,n,a);if(u=p.sbMean,r=p.sbSdcm,!(o+r<t[f-1]+t[f])){l[f]=l[f]+1;break}t[f-1]=o,t[f]=r,e[f-1]=i,e[f]=u,c=!0}}return c}(s.mean,s.sdcm,a,e,t,l)&&(s=j(a,e,t,l)),a}(t.uniqueValues,l,n);let c=i;for(let e=1;e<n;e++)if(t.uniqueValues.length>e){const l=y(t.uniqueValues[s[e]],6);o.push({minValue:c,maxValue:l,label:g(c,l,a)}),c=l}o.push({minValue:c,maxValue:u,label:g(c,u,a)})}else if("quantile"===l)if(r.length>=n&&i!==u){let e=i,t=Math.ceil(r.length/n),l=0;for(let s=1;s<n;s++){let i=t+l-1;i>r.length&&(i=r.length-1),i<0&&(i=0),o.push({minValue:e,maxValue:r[i],label:g(e,r[i],a)}),e=r[i],l+=t,t=Math.ceil((r.length-l)/(n-s))}o.push({minValue:e,maxValue:u,label:g(e,u,a)})}else{let e=-1;for(let t=0;t<r.length;t++){const l=r[t];l!==e&&(e=l,o.push({minValue:e,maxValue:l,label:g(e,l,a)}),e=l)}}else if("standard-deviation"===l){const e=function(e){let t=0;for(let l=0;l<e.length;l++)t+=e[l];return t/=e.length,t}(r),t=function(e,t){let l=0;for(let n=0;n<e.length;n++){const a=e[n];l+=(a-t)*(a-t)}return l/=e.length,Math.sqrt(l)}(r,e);if(0===t)o.push({minValue:r[0],maxValue:r[0],label:g(r[0],r[0],a)});else{const l=function(e,t,l,n,a){let s=Math.max(n-e,t-n)/a/l;return s=s>=1?1:s>=.5?.5:.25,s}(i,u,n,e,t),s=l*t;let r=0,c=i;for(let t=n;t>=1;t--){const l=y(e-(t-.5)*s,6);o.push({minValue:c,maxValue:l,label:g(c,l,a)}),c=l,r++}let f=y(e+.5*s,6);o.push({minValue:c,maxValue:f,label:g(c,f,a)}),c=f,r++;for(let t=1;t<=n;t++)f=r===2*n?u:y(e+(t+.5)*s,6),o.push({minValue:c,maxValue:f,label:g(c,f,a)}),c=f,r++}}else if("defined-interval"===l){if(!s)return o;const e=r[0],t=r[r.length-1],l=Math.ceil((t-e)/s);let n=e;for(let t=1;t<l;t++){const l=y(e+t*s,6);o.push({minValue:n,maxValue:l,label:g(n,l,a)}),n=l}o.push({minValue:n,maxValue:t,label:g(n,t,a)})}return o}(e);return{classBreaks:l,normalizationTotal:t}}function g(e,t,l){let n=null;return n=e===t?l&&"percent-of-total"===l?e+"%":e.toString():l&&"percent-of-total"===l?e+"% - "+t+"%":e+" - "+t,n}function M(e){const t=[],l=[];let n=Number.MIN_VALUE,a=1,s=-1;for(let o=0;o<e.length;o++){const r=e[o];r===n?(a++,l[s]=a):null!==r&&(t.push(r),n=r,a=1,l.push(a),s++)}return{uniqueValues:t,valueFrequency:l}}function j(e,t,l,n){let a=[],s=[],o=[],r=0;const i=[],u=[];for(let a=0;a<n;a++){const n=x(a,e,t,l);i.push(n.sbMean),u.push(n.sbSdcm),r+=u[a]}let c,f=r,p=!0;for(;p||r<f;){p=!1,a=[];for(let t=0;t<n;t++)a.push(e[t]);for(let l=0;l<n;l++)for(let a=e[l]+1;a<=e[l+1];a++)if(c=t[a],l>0&&a!==e[l+1]&&Math.abs(c-i[l])>Math.abs(c-i[l-1]))e[l]=a;else if(l<n-1&&e[l]!==a-1&&Math.abs(c-i[l])>Math.abs(c-i[l+1])){e[l+1]=a-1;break}f=r,r=0,s=[],o=[];for(let a=0;a<n;a++){s.push(i[a]),o.push(u[a]);const n=x(a,e,t,l);i[a]=n.sbMean,u[a]=n.sbSdcm,r+=u[a]}}if(r>f){for(let t=0;t<n;t++)e[t]=a[t],i[t]=s[t],u[t]=o[t];r=f}return{mean:i,sdcm:u}}function x(e,t,l,n){let a=0,s=0;for(let o=t[e]+1;o<=t[e+1];o++){const e=n[o];a+=l[o]*e,s+=e}s<=0&&b.warn("Exception in Natural Breaks calculation");const o=a/s;let r=0;for(let a=t[e]+1;a<=t[e+1];a++)r+=n[a]*(l[a]-o)**2;return{sbMean:o,sbSdcm:r}}export{h as C,f as a,v as b,V as c};
