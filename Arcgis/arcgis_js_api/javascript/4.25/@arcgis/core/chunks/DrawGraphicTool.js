/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import"./object.js";import o from"../core/Evented.js";import{HandleOwnerMixin as i}from"../core/HandleOwner.js";import{m as r}from"./handleUtils.js";import{s as n,i as a,a as l,d as s,u as p,g as c,e as h}from"./maybe.js";import{z as u,d,c as y}from"./quantityUtils.js";import{watch as m,syncAndInitial as f}from"../core/reactiveUtils.js";import{e as g,g as v}from"./unitUtils.js";import{property as w}from"../core/accessorSupport/decorators/property.js";import{clone as x,e as _}from"../core/lang.js";import"./ensureType.js";import{subclass as O}from"../core/accessorSupport/decorators/subclass.js";import T from"../layers/GraphicsLayer.js";import{c as M}from"./elevationInfoUtils.js";import"../geometry.js";import{z as b,d as G}from"./vec3.js";import S from"../geometry/Circle.js";import{simplify as V,distance as z}from"../geometry/geometryEngine.js";import I,{m as j,i as R,n as C}from"../geometry/Polygon.js";import{j as P}from"../geometry/SpatialReference.js";import{m as U,c as L}from"./surfaceCoordinateSystems.js";import k from"../geometry/Multipoint.js";import D from"../geometry/Polyline.js";import E from"../geometry/Point.js";import{I as A}from"./dragEventPipeline.js";import Z from"../views/interactive/sketch/SketchLabelOptions.js";import H from"../views/interactive/sketch/SketchTooltipOptions.js";import{S as q,a as N,b as B,T as F}from"./automaticLengthMeasurementUtils.js";import{a as J}from"./automaticAreaMeasurementUtils.js";function K(e,t){const o=new E({x:e[0],y:e[1],spatialReference:t});return e.length>2&&(o.z=e[2]),o}function Q(e,t,o){const i=new D({paths:e,spatialReference:t});return o&&j(i),i}function W(e,t,o,i=!0){const r=x(e);r.forEach((e=>{const t=e[0],o=e[e.length-1];_(t,o)&&1!==e.length||e.push(e[0])}));let n=new I({rings:r,spatialReference:t});return n.rings.forEach((e=>{R(e,!1,!1)||e.reverse()})),o&&j(n),i&&n.isSelfIntersecting&&P(t)&&(n=V(n)),n}function X(e,t,o){const i=t.mapToLocalMultiple(e),r=[],a={x:i[0].x,y:i[0].y},l=i[1].x,s=i[1].y,p=Math.round(l-a.x),c=Math.round(s-a.y),h=Math.max(Math.abs(p),Math.abs(c));if(o){const e={x:a.x+h,y:a.y+h},t={x:a.x-h,y:a.y-h};r.push(U(e.x,t.y),U(t.x,t.y),U(t.x,e.y),U(e.x,e.y))}else{const e={x:p>0?a.x+h:a.x-h,y:c>0?a.y+h:a.y-h};r.push(U(a.x,a.y),U(e.x,a.y),U(e.x,e.y),U(a.x,e.y))}return Y(W([n(r.map((e=>t.localToMap(e))))],t.spatialReference,t.doUnnormalization,!0),r,t)}function Y(e,t,o){const i=$(t[3],t[2],o),r=$(t[1],t[2],o),n=$(t[0],t[1],o),l=$(t[0],t[3],o);return{geometry:e,midpoints:a(i)&&a(r)&&a(n)&&a(l)?{top:i,right:r,bottom:n,left:l}:null}}function $(e,t,o){te[0]=e.x,te[1]=e.y,te[2]=0,oe[0]=t.x,oe[1]=t.y,oe[2]=0,b(te,te,oe,.5),ee.x=te[0],ee.y=oe[1],ee.z=oe[2];const i=o.localToMap(ee);return a(i)?K(i,o.spatialReference):null}const ee=U(0,0,0),te=G(),oe=G();function ie(e,t,o,i){const r=t.mapToLocalMultiple(e);let n=null,a=null;if(o)n=r[0],a=r[1];else{const e=r[0],t=r[1],o=Math.round(t.x-e.x),i=Math.round(t.y-e.y),l=Math.max(Math.abs(o),Math.abs(i));n=U(o>0?e.x+l/2:e.x-l/2,i>0?e.y+l/2:e.y-l/2),a=U(Math.abs(o)>Math.abs(i)?n.x-l/2:n.x,Math.abs(o)>Math.abs(i)?n.y:n.y-l/2)}const s=t.localToMap(n),p=t.localToMap(a);if(l(s)||l(p))return null;t.doUnnormalization&&C([[s,p]],t.spatialReference);const c=K(s,t.spatialReference),h=K(p,t.spatialReference),u=g(t.spatialReference);let d=0;if(P(t.spatialReference))d=u*z(c,h,null);else{const e=n.x-a.x,t=n.y-a.y;d=u*Math.sqrt(e*e+t*t)*(i||1)}const y=new S({center:c,radius:d,radiusUnit:"meters",spatialReference:t.spatialReference});return{geometry:W(y.rings,y.spatialReference,!1),center:c,edge:h}}let re=class extends q{constructor(e){super(e),this.type="draw-point"}};e([w()],re.prototype,"type",void 0),e([w()],re.prototype,"elevation",void 0),re=e([O("esri.views.interactive.tooltip.DrawPointTooltipInfo")],re);let ne=class extends q{constructor(e){super(e),this.type="draw-polyline"}};e([w()],ne.prototype,"type",void 0),e([w()],ne.prototype,"elevation",void 0),e([w()],ne.prototype,"totalLength",void 0),e([w()],ne.prototype,"viewType",void 0),ne=e([O("esri.views.interactive.tooltip.DrawPolylineTooltipInfo")],ne);let ae=class extends q{constructor(e){super(e),this.type="draw-polygon"}};e([w()],ae.prototype,"type",void 0),e([w()],ae.prototype,"elevation",void 0),e([w()],ae.prototype,"area",void 0),e([w()],ae.prototype,"viewType",void 0),ae=e([O("esri.views.interactive.tooltip.DrawPolygonTooltipInfo")],ae);let le=class extends q{constructor(e){super(e),this.type="draw-rectangle",this.xSize=u,this.ySize=u,this.area=d}};e([w()],le.prototype,"type",void 0),e([w()],le.prototype,"xSize",void 0),e([w()],le.prototype,"ySize",void 0),e([w()],le.prototype,"area",void 0),le=e([O("esri.views.interactive.tooltip.DrawRectangleTooltipInfo")],le);let se=class extends q{constructor(e){super(e),this.type="draw-circle",this.radius=null,this.xSize=null,this.ySize=null,this.area=d}};e([w()],se.prototype,"type",void 0),e([w()],se.prototype,"radius",void 0),e([w()],se.prototype,"xSize",void 0),e([w()],se.prototype,"ySize",void 0),e([w()],se.prototype,"area",void 0),se=e([O("esri.views.interactive.tooltip.DrawCircleTooltipInfo")],se);let pe=class extends(i(o.EventedMixin(A))){constructor(e){super(e),this._graphic=null,this._createOperationGeometry=null,this.defaultZ=0,this.geometryType=null,this.hasZ=!0,this.labelOptions=new Z,this.mode=null,this.snappingManager=null,this.snapToScene=!1,this.tooltip=null,this.tooltipOptions=new H}initialize(){this.internalGraphicsLayer=new T({listMode:"hide",internal:!0}),this.view.map.layers.add(this.internalGraphicsLayer),this.drawOperation=this.makeDrawOperation(),this.handles.add([this.drawOperation.on("vertex-add",(e=>this.onVertexAdd(e))),this.drawOperation.on("vertex-remove",(e=>this.onVertexRemove(e))),this.drawOperation.on("vertex-update",(e=>this.onVertexUpdate(e))),this.drawOperation.on("cursor-update",(e=>this.onCursorUpdate(e))),this.drawOperation.on("complete",(e=>this.onComplete(e))),m((()=>this.tooltipOptions.enabled),(e=>{this.tooltip=e?new F({view:this.view,info:this._tooltipInfo}):s(this.tooltip)}),f),m((()=>this._tooltipInfo),(e=>{a(this.tooltip)&&(this.tooltip.info=e)}),f)]),this.finishToolCreation()}destroy(){this.drawOperation=s(this.drawOperation),this.tooltip=s(this.tooltip),this._destroyAllVisualisations(),this.view.map.remove(this.internalGraphicsLayer),this.internalGraphicsLayer=s(this.internalGraphicsLayer),this._set("view",null)}get _defaultElevation(){return y(this.defaultZ,"meters")}get canRedo(){return this.drawOperation.canRedo}get canUndo(){return this.drawOperation.canUndo}set centered(e){this._set("centered",e),this._updateGraphic()}set enabled(e){this.drawOperation.interactive=e,this._set("enabled",e)}set forceUniformSize(e){this._set("forceUniformSize",e),this._updateGraphic()}get graphic(){return this._graphic}set graphicSymbol(e){this._set("graphicSymbol",e),a(this._graphic)&&(this._graphic.symbol=e)}get updating(){return this.drawOperation?.updating??!1}completeCreateOperation(){this.drawOperation.complete()}onInputEvent(e){this.drawOperation.onInputEvent(e)}redo(){this.drawOperation.redo()}reset(){}undo(){this.drawOperation.undo()}_createGraphic(e){this._graphic=new t({...this.graphicProperties,geometry:e,symbol:this.graphicSymbol}),this.internalGraphicsLayer.add(this._graphic),this.handles.add(this.initializeGraphic(this._graphic)),this.notifyChange("graphic"),this.handles.add(r((()=>{a(this._graphic)&&(this.internalGraphicsLayer.remove(this._graphic),this._graphic=s(this._graphic))})),ce)}_destroyAllVisualisations(){this.handles.remove(he.outline),this.handles.remove(he.regularVertices),this.handles.remove(he.activeVertex),this.handles.remove(ce)}_getCreateOperationGeometry(e={operationComplete:!1}){if(null==this.drawOperation||0===this.drawOperation.numVertices)return null;const t=this.drawOperation.stagedVertex,o=this.drawOperation.committedVertices,i=o.slice();a(t)&&i.push(this.drawOperation.coordinateHelper.pointToArray(t));const r=a(t)?this.drawOperation.coordinateHelper.pointToArray(t):o.splice(-1)[0],l={regularVertices:null,activeVertex:null,full:null,outline:null,circle:null,rectangle:null},s=i.length,p=this.view.spatialReference,c="3d"===this.view.type&&"global"===this.view.viewingMode;switch(this.geometryType){case"point":l.regularVertices=o,l.activeVertex=r,l.full=this.drawOperation.coordinateHelper.arrayToPoint(i[0]);break;case"multipoint":l.regularVertices=o,l.activeVertex=r,s>0&&(l.full=function(e,t){return new k({points:e,spatialReference:t})}(i,p));break;case"polyline":l.regularVertices=o,l.activeVertex=r,s>0&&(l.full=Q([i],p,c));break;case"polygon":l.regularVertices=o,l.activeVertex=r,s>0&&(l.full=W([i],p,c,!0));break;case"circle":if(s>0){const t=L(this.view,i[0]);if(1===s&&e.operationComplete){const e=i[0],o=t.makeMapPoint(e[0]+de*this.view.resolution,e[1]);l.circle=ie([e,o],t,!0),l.full=a(l.circle)?l.circle.geometry:null}else 2===s&&(this.forceUniformSize?(l.circle=ie(i,t,this.centered),l.full=a(l.circle)?l.circle.geometry:null):(l.rectangle=function(e,t,o){const i=t.mapToLocalMultiple(e),r=i[0],l=i[1],s=Math.round(l.x-r.x),p=Math.round(l.y-r.y),c=U(o?r.x:r.x+s/2,o?r.y:r.y+p/2),h=o?s:s/2,u=o?p:p/2,d=[],y=2*Math.PI/60;function m(e){const t=Math.cos(e),o=Math.sin(e);return U(h*t+c.x,u*o+c.y)}for(let e=0;e<60;e++)d.push(m(e*y));d.push(d[0]);const{spatialReference:f,doUnnormalization:g}=t,v=W([n(d.map((e=>t.localToMap(e))))],f,g,!1),w=t.localToMap(m(Math.PI/2)),x=t.localToMap(m(0)),_=t.localToMap(m(-Math.PI/2)),O=t.localToMap(m(Math.PI));return{geometry:v,midpoints:a(w)&&a(x)&&a(_)&&a(O)?{top:K(w,f),right:K(x,f),bottom:K(_,f),left:K(O,f)}:null}}(i,t,this.centered),l.full=l.rectangle.geometry))}break;case"rectangle":if(s>0){const t=L(this.view,i[0]);if(1===s&&e.operationComplete){const e=i[0],o=t.makeMapPoint(e[0]+de*this.view.resolution,e[1]);l.rectangle=X([e,o],t,!0),l.full=l.rectangle.geometry}else 2===s&&(l.rectangle=this.forceUniformSize?X(i,t,this.centered):function(e,t,o){let i=t.mapToLocalMultiple(e);if(1===i.length){const e=48,t=i[0];i=[U(t.x-e,t.y+e),U(t.x+e,t.y-e),U(t.x+e,t.y-e),U(t.x-e,t.y+e)]}const r=[],a={x:i[0].x,y:i[0].y},l={x:i[1].x,y:i[1].y};if(o){const e=Math.round(l.x-a.x),t=Math.round(l.y-a.y);r.push(U(a.x-e,a.y-t),U(l.x,a.y-t),U(l.x,l.y),U(a.x-e,l.y))}else r.push(U(a.x,a.y),U(l.x,a.y),U(l.x,l.y),U(a.x,l.y));return Y(W([n(r.map((e=>t.localToMap(e))))],t.spatialReference,t.doUnnormalization,!0),r,t)}(i,t,this.centered),l.full=l.rectangle.geometry)}break;default:return null}switch(this.geometryType){case"point":case"multipoint":break;case"polyline":case"polygon":s>1&&(l.outline=Q([i],p,c));break;case"circle":case"rectangle":a(l.full)&&"polygon"===l.full.type&&(l.outline=W(l.full.rings,p,c))}return l}initializeGraphic(e){return null}onComplete(e){this._updateGraphic();let t=null;if(this.drawOperation.isCompleted){const e=this._getCreateOperationGeometry({operationComplete:!0});a(e)&&(l(this._graphic)?this._createGraphic(e.full):this._graphic.geometry=e.full,t=p(this._graphic).clone())}this._createOperationGeometry=null,this.emit("complete",{graphic:t,...e})}onCursorUpdate(e){this._updateGraphic(),this.emit("cursor-update",e)}onDeactivate(){this.drawOperation.isCompleted||this.drawOperation.cancel()}onVertexAdd(e){this._updateGraphic(),this.emit("vertex-add",e)}onVertexRemove(e){this._updateGraphic(),this.emit("vertex-remove",e)}onVertexUpdate(e){this._updateGraphic(),this.emit("vertex-update",e)}_updateGraphic(){const e=this._getCreateOperationGeometry();this._createOperationGeometry=e,l(e)?this._destroyAllVisualisations():(a(e.outline)?this.handles.add(this.onOutlineChanged(e.outline),he.outline):this.handles.remove(he.outline),a(e.regularVertices)?this.handles.add(this.onRegularVerticesChanged(e.regularVertices),he.regularVertices):this.handles.remove(he.regularVertices),a(e.activeVertex)?this.handles.add(this.onActiveVertexChanged(e.activeVertex),he.activeVertex):this.handles.remove(he.activeVertex),a(e.full)?l(this._graphic)?this._createGraphic(e.full):this._graphic.geometry=e.full:this.handles.remove(ce))}get _tooltipInfo(){const{drawOperation:e}=this;if(!e)return null;switch(this.geometryType){case"point":return this._drawPointTooltipInfo;case"polyline":return this._drawPolylineTooltipInfo;case"polygon":return this._drawPolygonTooltipInfo;case"rectangle":return this._drawRectangleTooltipInfo;case"circle":return this._drawCircleTooltipInfo;default:return null}}get _drawPointTooltipInfo(){const e=c(this.graphic,(e=>e.geometry));return l(e)||"point"!==e.type||"2d"===this.view.type&&0===this.defaultZ?null:new re({tooltipOptions:this.tooltipOptions,elevation:this._elevationTooltipDetail})}get _drawPolylineTooltipInfo(){const e=this._createOperationGeometry,t=a(e)?e.full:null;if(l(t)||"polyline"!==t.type)return null;const o=N(t,this._elevationMode);return new ne({tooltipOptions:this.tooltipOptions,elevation:this._elevationTooltipDetail,totalLength:h(o,u),viewType:this.view.type})}get _drawPolygonTooltipInfo(){const e=this._createOperationGeometry,t=a(e)?e.full:null;if(l(t)||"polygon"!==t.type)return null;const o=J(t,this._elevationMode);return new ae({tooltipOptions:this.tooltipOptions,elevation:this._elevationTooltipDetail,area:h(o,d),viewType:this.view.type})}get _drawRectangleTooltipInfo(){return l(this.drawOperation)?null:new le({tooltipOptions:this.tooltipOptions,xSize:h(this._xSize,u),ySize:h(this._ySize,u),area:h(this._fullGeometryArea,d)})}get _drawCircleTooltipInfo(){if(l(this.drawOperation))return null;const e=this.forceUniformSize;return new se({tooltipOptions:this.tooltipOptions,radius:e?h(this._circleRadius,u):null,xSize:e?null:h(this._xSize,u),ySize:e?null:h(this._ySize,u),area:h(this._fullGeometryArea,d)})}get _circleRadius(){const e=this._createOperationGeometry;return a(e)&&a(e.circle)&&a(e.circle.center)&&a(e.circle.edge)?B(e.circle.center,e.circle.edge,this._elevationMode):null}get _xSize(){const e=this._createOperationGeometry;if(l(e)||l(e.rectangle))return null;const{midpoints:t}=e.rectangle;return a(t)?B(t.left,t.right,this._elevationMode):null}get _ySize(){const e=this._createOperationGeometry;if(l(e)||l(e.rectangle))return null;const{midpoints:t}=e.rectangle;return a(t)?B(t.top,t.bottom,this._elevationMode):null}get _fullGeometryArea(){const e=this._createOperationGeometry,t=a(e)?e.full:null;return l(t)||"polygon"!==t.type?null:J(t,this._elevationMode)}get _elevationTooltipDetail(){return{mode:this.drawOperation.elevationInfo.mode,...this._vertexTooltipElevation}}get _vertexTooltipElevation(){const{tooltipOptions:e,view:t,drawOperation:o}=this;if(l(o))return this._defaultElevation;const i=o.stagedVertex??o.lastVertex;if(l(i)||"2d"===t.type)return this._defaultElevation;const r={mode:e.elevation.mode,offset:0},n=M(t,i,o.elevationInfo,r)*v(i.spatialReference);return y(n,"meters")}get _elevationMode(){return this.drawOperation.isDraped?"on-the-ground":"absolute-height"}};e([w()],pe.prototype,"_createOperationGeometry",void 0),e([w()],pe.prototype,"_defaultElevation",null),e([w({value:!0})],pe.prototype,"centered",null),e([w({nonNullable:!0})],pe.prototype,"defaultZ",void 0),e([w()],pe.prototype,"drawOperation",void 0),e([w({value:!0})],pe.prototype,"enabled",null),e([w({value:!0})],pe.prototype,"forceUniformSize",null),e([w({constructOnly:!0})],pe.prototype,"geometryType",void 0),e([w()],pe.prototype,"graphic",null),e([w({constructOnly:!0})],pe.prototype,"graphicProperties",void 0),e([w()],pe.prototype,"graphicSymbol",null),e([w({constructOnly:!0})],pe.prototype,"hasZ",void 0),e([w({constructOnly:!0,type:Z})],pe.prototype,"labelOptions",void 0),e([w({constructOnly:!0})],pe.prototype,"mode",void 0),e([w()],pe.prototype,"snappingManager",void 0),e([w()],pe.prototype,"snapToScene",void 0),e([w()],pe.prototype,"tooltip",void 0),e([w({constructOnly:!0,type:H})],pe.prototype,"tooltipOptions",void 0),e([w({readOnly:!0})],pe.prototype,"type",void 0),e([w({readOnly:!0})],pe.prototype,"updating",null),e([w({constructOnly:!0,nonNullable:!0})],pe.prototype,"view",void 0),e([w()],pe.prototype,"_tooltipInfo",null),e([w()],pe.prototype,"_drawPointTooltipInfo",null),e([w()],pe.prototype,"_drawPolylineTooltipInfo",null),e([w()],pe.prototype,"_drawPolygonTooltipInfo",null),e([w()],pe.prototype,"_drawRectangleTooltipInfo",null),e([w()],pe.prototype,"_drawCircleTooltipInfo",null),e([w()],pe.prototype,"_circleRadius",null),e([w()],pe.prototype,"_xSize",null),e([w()],pe.prototype,"_ySize",null),e([w()],pe.prototype,"_fullGeometryArea",null),e([w()],pe.prototype,"_elevationTooltipDetail",null),e([w()],pe.prototype,"_vertexTooltipElevation",null),e([w()],pe.prototype,"_elevationMode",null),pe=e([O("esri.views.draw.DrawGraphicTool")],pe);const ce="create-operation-graphic",he={outline:"outline-visual",regularVertices:"regular-vertices-visual",activeVertex:"active-vertex-visual"};function ue(e){switch(e){case"point":case"polyline":case"polygon":case"multipoint":return e;case"circle":case"rectangle":return"segment";default:return null}}const de=48;export{pe as D,ue as g};
