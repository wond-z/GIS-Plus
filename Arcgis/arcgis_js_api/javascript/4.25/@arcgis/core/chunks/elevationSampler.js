/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{i as t}from"./maybe.js";import{open as r}from"../core/workers/workers.js";import{d as o}from"./vec3.js";import{f as e}from"./ray.js";import{i as s}from"./triangle.js";import i from"./ElevationSamplerWorker.js";import{ElevationSamplerBase as m}from"../layers/support/ElevationSampler.js";import"../core/Error.js";import"../core/lang.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"../core/promiseUtils.js";import"../core/workers/Connection.js";import"./handleUtils.js";import"./Queue.js";import"../core/workers/RemoteClient.js";import"../kernel.js";import"../core/urlUtils.js";import"./assets.js";import"../request.js";import"../intl.js";import"./number.js";import"./jsonMap.js";import"./locale.js";import"./messages.js";import"./nextTick.js";import"./common.js";import"./byteSizeEstimations.js";import"./mat3f64.js";import"./mat4f64.js";import"./quatf64.js";import"./vec2f64.js";import"./vec4f64.js";import"./lineSegment.js";import"./mathUtils.js";import"./PooledRBush.js";import"../core/scheduling.js";import"./quickselect.js";import"./georeference.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"../geometry/SpatialReference.js";import"./tslib.es6.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./get.js";import"./utils.js";import"./metadata.js";import"./ArrayPool.js";import"../core/accessorSupport/decorators/subclass.js";import"./tracking.js";import"./ensureType.js";import"../core/accessorSupport/decorators/property.js";import"./watch.js";import"./writer.js";import"./Ellipsoid.js";import"./mat4.js";import"./mat3.js";import"../geometry/projection.js";import"./SimpleObservable.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"./reader.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"./pe.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./quat.js";import"./axisAngleDegrees.js";import"./BufferView.js";import"./vec2.js";import"./vec32.js";import"./projection.js";import"../geometry.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";async function p(o,e){const s=await(++n,l&&(clearTimeout(l),l=0),c||(c=r("ElevationSamplerWorker").catch((()=>null)),c)),i=await a.createIndex(o,s);return function(r){--n,t(r)&&0===n&&(l=setTimeout((()=>{r.close(),c=null,l=0}),u))}(s),new j(o,i,e)}class j extends m{constructor(r,o,e){super(),this._rindex=o,this.demResolution={min:0,max:0},this.spatialReference=r.spatialReference.clone(),this.extent=r.extent.clone(),this.noDataValue=t(e)&&e.noDataValue||0}elevationAt(t,r){let o=Number.NEGATIVE_INFINITY;return e([t,r,0],[0,0,-1],g),this._rindex.search({minX:t,maxX:t,minY:r,maxY:r},(t=>{s(t,g,y)&&y[2]>o&&(o=y[2])})),o===Number.NEGATIVE_INFINITY?this.noDataValue:o}}const a=new i;let n=0,c=null,l=0;const u=1e4,g=e([0,0,0],[0,0,-1]),y=o();export{p as create};
