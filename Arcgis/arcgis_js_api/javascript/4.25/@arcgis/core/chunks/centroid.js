/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{a as t}from"./maybe.js";function n(t,n){return t?n?4:3:n?3:2}function e(e,l,s,c,f){if(t(l)||!l.lengths.length)return null;const i="upperLeft"===f?.originPosition?-1:1;e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0);const T=e.coords,h=[],g=s?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:E,coords:m}=l,b=n(s,c);let F=0;for(const t of E){const n=r(g,m,F,t,s,c,i);n&&h.push(n),F+=t*b}if(h.sort(((t,n)=>{let e=i*t[2]-i*n[2];return 0===e&&s&&(e=t[4]-n[4]),e})),h.length){let t=6*h[0][2];T[0]=h[0][0]/t,T[1]=h[0][1]/t,s&&(t=6*h[0][4],T[2]=0!==t?h[0][3]/t:0),(T[0]<g[0]||T[0]>g[1]||T[1]<g[2]||T[1]>g[3]||s&&(T[2]<g[4]||T[2]>g[5]))&&(T.length=0)}if(!T.length){const t=l.lengths[0]?function(t,e,r,l,s){const c=n(l,s);let f=0,i=0+c,T=0,h=0,g=0,E=0;for(let n=0,e=r-1;n<e;n++,f+=c,i+=c){const n=t[f],e=t[f+1],r=t[f+2],s=t[i],c=t[i+1],m=t[i+2],b=l?o(n,e,r,s,c,m):I(n,e,s,c);if(b)if(T+=b,l){const t=N(n,e,r,s,c,m);h+=b*t[0],g+=b*t[1],E+=b*t[2]}else{const t=u(n,e,s,c);h+=b*t[0],g+=b*t[1]}}return T>0?l?[h/T,g/T,E/T]:[h/T,g/T]:r>0?l?[t[0],t[1],t[2]]:[t[0],t[1]]:null}(m,0,E[0],s,c):null;if(!t)return null;T[0]=t[0],T[1]=t[1],s&&t.length>2&&(T[2]=t[2])}return e}function r(t,e,r,I,o,u,N=1){const l=n(o,u);let s=r,c=r+l,f=0,i=0,T=0,h=0,g=0;for(let n=0,r=I-1;n<r;n++,s+=l,c+=l){const n=e[s],r=e[s+1],I=e[s+2],u=e[c],N=e[c+1],l=e[c+2];let E=n*N-u*r;h+=E,f+=(n+u)*E,i+=(r+N)*E,o&&(E=n*l-u*I,T+=(I+l)*E,g+=E),n<t[0]&&(t[0]=n),n>t[1]&&(t[1]=n),r<t[2]&&(t[2]=r),r>t[3]&&(t[3]=r),o&&(I<t[4]&&(t[4]=I),I>t[5]&&(t[5]=I))}if(h*N>0&&(h*=-1),g*N>0&&(g*=-1),!h)return null;const E=[f,i,.5*h];return o&&(E[3]=T,E[4]=.5*g),E}function I(t,n,e,r){const I=e-t,o=r-n;return Math.sqrt(I*I+o*o)}function o(t,n,e,r,I,o){const u=r-t,N=I-n,l=o-e;return Math.sqrt(u*u+N*N+l*l)}function u(t,n,e,r){return[t+.5*(e-t),n+.5*(r-n)]}function N(t,n,e,r,I,o){return[t+.5*(r-t),n+.5*(I-n),e+.5*(o-e)]}export{e as g};
