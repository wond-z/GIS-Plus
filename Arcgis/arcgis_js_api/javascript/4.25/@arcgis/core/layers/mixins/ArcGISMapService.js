/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import t from"../../request.js";import{throwIfAborted as r}from"../../core/promiseUtils.js";import{urlToObject as e}from"../../core/urlUtils.js";import{V as o}from"../../chunks/Version.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/ensureType.js";import{r as p}from"../../chunks/reader.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import n from"../../geometry/Extent.js";import l from"../../geometry/SpatialReference.js";import{i as u,p as c}from"../../chunks/commonProperties.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/maybe.js";import"../../kernel.js";import"../../core/Error.js";import"../../chunks/Logger.js";import"../../chunks/string.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/tracking.js";import"../../geometry/Geometry.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ArrayPool.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../TimeExtent.js";import"../../chunks/timeUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../support/timeUtils.js";import"../../chunks/ElevationInfo.js";import"../../chunks/jsonMap.js";import"../support/fieldUtils.js";import"../../chunks/arcadeOnDemand.js";import"../../geometry.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/unitConversionUtils.js";import"../../chunks/lengthUtils.js";import"../../chunks/unitUtils.js";import"../../chunks/projectionEllipsoid.js";import"../../chunks/opacityUtils.js";const m=m=>{let y=class extends m{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesPromise=null,this._allLayersAndTablesMap=null}readCapabilities(s,t){const r=t.capabilities&&t.capabilities.split(",").map((s=>s.toLowerCase().trim()));if(!r)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const e=this.type,i=r.includes("data"),p=r.includes("query"),a=r.includes("map"),n=!!t.exportTilesAllowed,l=r.includes("tilemap"),u="tile"!==e&&!!t.supportsDynamicLayers,c="tile"!==e&&(!t.tileInfo||u),m="tile"!==e&&(!t.tileInfo||u),y="tile"!==e,h=t.cimVersion&&o.parse(t.cimVersion),d=h?.since(1,4)??!1,j=h?.since(2,0)??!1;return{operations:{supportsExportMap:a,supportsExportTiles:n,supportsIdentify:p,supportsQuery:i,supportsTileMap:l},exportMap:a?{supportsArcadeExpressionForLabeling:d,supportsSublayersChanges:y,supportsDynamicLayers:u,supportsSublayerVisibility:c,supportsSublayerDefinitionExpression:m,supportsCIMSymbols:j}:null,exportTiles:n?{maxExportTilesCount:+t.maxExportTilesCount}:null}}readVersion(s,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("capabilities")||t.hasOwnProperty("tables")?10:t.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),r}async fetchSublayerInfo(s,t){return await this.fetchAllLayersAndTables(t),this._allLayersAndTablesMap?.get(s)}async fetchAllLayersAndTables(s){await this.load(s),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=t(e(this.url).path+"/layers",{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((s=>{this._allLayersAndTablesMap=new Map;for(const t of s.data.layers)this._allLayersAndTablesMap.set(t.id,t);return{result:s.data}}),(s=>({error:s}))));const o=await this._allLayersAndTablesPromise;if(r(s),"result"in o)return o.result;throw o.error}};return s([i({readOnly:!0})],y.prototype,"capabilities",void 0),s([p("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],y.prototype,"readCapabilities",null),s([i({json:{read:{source:"copyrightText"}}})],y.prototype,"copyright",void 0),s([i({type:n})],y.prototype,"fullExtent",void 0),s([i(u)],y.prototype,"id",void 0),s([i({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],y.prototype,"legendEnabled",void 0),s([i(c)],y.prototype,"popupEnabled",void 0),s([i({type:l})],y.prototype,"spatialReference",void 0),s([i({readOnly:!0})],y.prototype,"version",void 0),s([p("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],y.prototype,"readVersion",null),y=s([a("esri.layers.mixins.ArcGISMapService")],y),y};export{m as ArcGISMapService};
