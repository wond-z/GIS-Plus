/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{id as r}from"../../kernel.js";import e from"../../request.js";import{r as s}from"../../chunks/asyncUtils.js";import o from"../../core/Error.js";import{L as i}from"../../chunks/Logger.js";import{d as a,a as l,i as p}from"../../chunks/maybe.js";import{throwIfAborted as m,isAbortError as n,throwIfAbortError as c}from"../../core/promiseUtils.js";import{normalize as u,hasSamePortal as d}from"../../core/urlUtils.js";import{property as h}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/ensureType.js";import{r as j}from"../../chunks/reader.js";import{subclass as y}from"../../core/accessorSupport/decorators/subclass.js";import{w as g}from"../../chunks/writer.js";import f from"../../portal/Portal.js";import I from"../../portal/PortalItem.js";import k from"../../portal/PortalUser.js";import"../../chunks/object.js";import"../../config.js";import"../../chunks/string.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/ArrayPool.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/JSONSupport.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../chunks/locale.js";import"../../portal/PortalQueryParams.js";import"../../chunks/jsonMap.js";import"../../portal/PortalQueryResult.js";import"../../chunks/assets.js";import"../../portal/PortalItemResource.js";import"../../portal/PortalRating.js";import"../../portal/PortalFolder.js";import"../../portal/PortalGroup.js";const P=P=>{let v=class extends P{constructor(){super(...arguments),this.resourceReferences={portalItem:null,paths:[]},this.userHasEditingPrivileges=!0}destroy(){this.portalItem=a(this.portalItem)}set portalItem(t){t!==this._get("portalItem")&&(this.removeOrigin("portal-item"),this._set("portalItem",t))}readPortalItem(t,r,e){if(r.itemId)return new I({id:r.itemId,portal:e&&e.portal})}writePortalItem(t,r){t&&t.id&&(r.itemId=t.id)}async loadFromPortal(t,r){if(this.portalItem&&this.portalItem.id)try{const e=await import("../../chunks/layersLoader.js").then((t=>t.l));return m(r),await e.load({instance:this,supportedTypes:t.supportedTypes,validateItem:t.validateItem,supportsData:t.supportsData,layerModuleTypeMap:t.layerModuleTypeMap},r)}catch(t){throw n(t)||i.getLogger(this.declaredClass).warn(`Failed to load layer (${this.title}, ${this.id}) portal item (${this.portalItem.id})\n  ${t}`),t}}async finishLoadEditablePortalLayer(t){this._set("userHasEditingPrivileges",await this._fetchUserHasEditingPrivileges(t).catch((t=>(c(t),!0))))}async _fetchUserHasEditingPrivileges(t){const e=this.url?r?.findCredential(this.url):null;if(!e)return!0;const s=w.credential===e?w.user:await this._fetchEditingUser(t);return w.credential=e,w.user=s,l(s)||null==s.privileges||s.privileges.includes("features:user:edit")}async _fetchEditingUser(t){const o=this.portalItem?.portal?.user;if(o)return o;const i=r.findServerInfo(this.url??"");if(!i?.owningSystemUrl)return null;const a=`${i.owningSystemUrl}/sharing/rest`,l=f.getDefault();if(l&&l.loaded&&u(l.restUrl)===u(a))return l.user;const m=`${a}/community/self`,n=p(t)?t.signal:null,c=await s(e(m,{authMode:"no-prompt",query:{f:"json"},signal:n}));return c.ok?k.fromJSON(c.value.data):null}read(t,r){r&&(r.layer=this),super.read(t,r)}write(t,r){const e=r&&r.portal,s=this.portalItem&&this.portalItem.id&&(this.portalItem.portal||f.getDefault());return e&&s&&!d(s.restUrl,e.restUrl)?(r.messages&&r.messages.push(new o("layer:cross-portal",`The layer '${this.title} (${this.id})' cannot be persisted because it refers to an item on a different portal than the one being saved to. To save, set layer.portalItem to null or save to the same portal as the item associated with the layer`,{layer:this})),null):super.write(t,{...r,layer:this})}};return t([h({type:I})],v.prototype,"portalItem",null),t([j("web-document","portalItem",["itemId"])],v.prototype,"readPortalItem",null),t([g("web-document","portalItem",{itemId:{type:String}})],v.prototype,"writePortalItem",null),t([h({clonable:!1})],v.prototype,"resourceReferences",void 0),t([h({readOnly:!0})],v.prototype,"userHasEditingPrivileges",void 0),v=t([y("esri.layers.mixins.PortalLayer")],v),v},w={credential:null,user:null};export{P as PortalLayer};
