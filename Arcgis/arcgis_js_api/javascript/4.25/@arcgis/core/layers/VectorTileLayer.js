/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t,{p as r}from"../request.js";import{c as s}from"../chunks/asyncUtils.js";import i from"../core/Error.js";import{h as o,j as l,clone as n}from"../core/lang.js";import{u as a}from"../chunks/maybe.js";import{M as p}from"../chunks/MultiOriginJSONSupport.js";import{throwIfAborted as u,isAbortError as c,throwIfAbortError as h}from"../core/promiseUtils.js";import{urlToObject as m,objectToQuery as y,isAbsolute as d,join as f,addQueryParameters as g,getOrigin as S,isProtocolRelative as j,removeTrailingSlash as w,normalize as x,removeFile as v,getAppBaseUrl as k}from"../core/urlUtils.js";import{property as U}from"../core/accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import{r as _}from"../chunks/reader.js";import{subclass as I}from"../core/accessorSupport/decorators/subclass.js";import{w as b}from"../chunks/writer.js";import T from"../geometry/Extent.js";import P from"../geometry/SpatialReference.js";import R from"./Layer.js";import{APIKeyMixin as L}from"./mixins/APIKeyMixin.js";import{ArcGISCachedService as O}from"./mixins/ArcGISCachedService.js";import{A as M}from"../chunks/ArcGISService.js";import{BlendLayer as A}from"./mixins/BlendLayer.js";import{CustomParametersMixin as E}from"./mixins/CustomParametersMixin.js";import{O as D}from"../chunks/OperationalLayer.js";import{PortalLayer as N}from"./mixins/PortalLayer.js";import{ScaleRangeLayer as C}from"./mixins/ScaleRangeLayer.js";import{L as B}from"../chunks/Logger.js";import q from"./support/TileInfo.js";import F from"../config.js";import{r as V,T as z}from"../chunks/TilemapCache.js";import{T as $}from"../chunks/TileKey2.js";import{c as K}from"../chunks/jsonContext.js";import{e as G}from"../chunks/persistableUrlUtils.js";import{S as W}from"../chunks/StyleRepository.js";import{g as J}from"../chunks/capabilities2.js";import"../kernel.js";import"../chunks/object.js";import"../chunks/string.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../chunks/ArrayPool.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../core/JSONSupport.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../chunks/Ellipsoid.js";import"../geometry.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../chunks/jsonMap.js";import"../geometry/support/jsonUtils.js";import"../core/Evented.js";import"../core/Identifiable.js";import"../core/Loadable.js";import"../core/Promise.js";import"../chunks/unitUtils.js";import"../chunks/projectionEllipsoid.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/common.js";import"./support/LOD.js";import"../chunks/TileKey.js";import"../chunks/byteSizeEstimations.js";import"../core/HandleOwner.js";import"../chunks/WatchUpdatingTracking.js";import"../core/reactiveUtils.js";import"../chunks/LRUCache.js";import"../chunks/MemCache.js";import"../chunks/arcgisLayerUrl.js";import"../chunks/jsonUtils.js";import"../chunks/parser.js";import"../chunks/colorUtils.js";import"../chunks/screenUtils.js";import"../chunks/mat4f32.js";import"../chunks/mat4.js";import"../chunks/_commonjsHelpers.js";import"../chunks/commonProperties.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../support/timeUtils.js";import"../chunks/ElevationInfo.js";import"./support/fieldUtils.js";import"../chunks/arcadeOnDemand.js";import"../chunks/unitConversionUtils.js";import"../chunks/lengthUtils.js";import"../chunks/opacityUtils.js";import"../portal/Portal.js";import"../chunks/locale.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../portal/PortalItem.js";import"../chunks/assets.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../chunks/StyleDefinition.js";import"../chunks/enums.js";import"../chunks/enums2.js";import"../chunks/enums3.js";import"../chunks/VertexElementDescriptor.js";import"../Color.js";import"../chunks/colorUtils2.js";import"../chunks/unitBezier.js";import"../chunks/GeometryUtils.js";import"../chunks/Geometry.js";import"../chunks/definitions.js";import"../chunks/context-util.js";let Q=null;class H{constructor(e,t){this._spriteSource=e,this._maxTextureSize=t,this.devicePixelRatio=1,this._spriteImageFormat="png",this._isRetina=!1,this._spritesData={},this.image=null,this.width=null,this.height=null,this.loadStatus="not-loaded","url"===e.type&&e.spriteFormat&&(this._spriteImageFormat=e.spriteFormat),e.pixelRatio&&(this.devicePixelRatio=e.pixelRatio),this.baseURL=e.spriteUrl}get spriteNames(){const e=[];for(const t in this._spritesData)e.push(t);return e.sort(),e}getSpriteInfo(e){return this._spritesData?this._spritesData[e]:null}async load(e){if(this.baseURL){this.loadStatus="loading";try{await this._loadSprites(e),this.loadStatus="loaded"}catch{this.loadStatus="failed"}}else this.loadStatus="failed"}async _loadSprites(e){this._isRetina=this.devicePixelRatio>1.15;const{width:t,height:r,data:s,json:o}=await this._getSpriteData(this._spriteSource,e),l=Object.keys(o);if(!l||0===l.length||!s)return this._spritesData=this.image=null,void(this.width=this.height=0);this._spritesData=o,this.width=t,this.height=r;const n=Math.max(this._maxTextureSize,4096);if(t>n||r>n){const e=`Sprite resource for style ${this.baseURL} is bigger than the maximum allowed of ${n} pixels}`;throw B.getLogger("esri.layers.support.SpriteSource").error(e),new i("SpriteSource",e)}let a;for(let e=0;e<s.length;e+=4)a=s[e+3]/255,s[e]=s[e]*a,s[e+1]=s[e+1]*a,s[e+2]=s[e+2]*a;this.image=s}async _getSpriteData(e,r){if("image"===e.type){let t,r;if(this.devicePixelRatio<1.15){if(!e.spriteSource1x)throw new i("SpriteSource","no image data provided for low resolution sprites!");t=e.spriteSource1x.image,r=e.spriteSource1x.json}else{if(!e.spriteSource2x)throw new i("SpriteSource","no image data provided for high resolution sprites!");t=e.spriteSource2x.image,r=e.spriteSource2x.json}return"width"in t&&"height"in t&&"data"in t&&(o(t.data)||l(t.data))?{width:t.width,height:t.height,data:new Uint8Array(t.data),json:r}:{...Y(t),json:r}}const s=m(this.baseURL),n=s.query?"?"+y(s.query):"",a=this._isRetina?"@2x":"",p=`${s.path}${a}.${this._spriteImageFormat}${n}`,u=`${s.path}${a}.json${n}`,[c,h]=await Promise.all([t(u,r),t(p,{responseType:"image",...r})]);return{...Y(h.data),json:c.data}}}function Y(e){const t=document.createElement("canvas"),r=t.getContext("2d");t.width=e.width,t.height=e.height,r.drawImage(e,0,0,e.width,e.height);const s=r.getImageData(0,0,e.width,e.height);return{width:e.width,height:e.height,data:new Uint8Array(s.data)}}class X{constructor(e){this.url=e}async fetchTileIndex(){return this._tileIndexPromise||(this._tileIndexPromise=t(this.url).then((e=>e.data.index))),this._tileIndexPromise}async dataKey(e,t){const r=await this.fetchTileIndex();return u(t),this._getIndexedDataKey(r,e)}_getIndexedDataKey(e,t){const r=[t];if(t.level<0||t.row<0||t.col<0||t.row>>t.level>0||t.col>>t.level>0)return null;let s=t;for(;0!==s.level;)s=new $(s.level-1,s.row>>1,s.col>>1,s.world),r.push(s);let i,o,l=e,n=r.pop();if(1===l)return n;for(;r.length;)if(i=r.pop(),o=(1&i.col)+((1&i.row)<<1),l){if(0===l[o]){n=null;break}if(1===l[o]){n=i;break}n=i,l=l[o]}return n}}class Z{constructor(e,t){this._tilemap=e,this._tileIndexUrl=t}async fetchTileIndex(e){return this._tileIndexPromise||(this._tileIndexPromise=t(this._tileIndexUrl,{query:{...e?.query}}).then((e=>e.data.index))),this._tileIndexPromise}dataKey(e,t){const{level:r,row:s,col:i}=e,o=new $(e);return this._tilemap.fetchAvailabilityUpsample(r,s,i,o,t).then((()=>(o.world=e.world,o))).catch((e=>{if(c(e))throw e;return null}))}}const ee=new Map;class te{constructor(e,t,r){this.tilemap=null,this.tileInfo=null,this.capabilities=null,this.fullExtent=null,this.name=e,this.sourceUrl=t;const s=m(this.sourceUrl),i=n(r),o=i.tiles;if(s)for(let e=0;e<o.length;e++){const t=m(o[e]);t&&(d(t.path)||(t.path=f(s.path,t.path)),o[e]=g(t.path,{...s.query,...t.query}))}this.tileServers=o;const l=r.capabilities&&r.capabilities.split(",").map((e=>e.toLowerCase().trim())),a=!0===r?.exportTilesAllowed,p=!0===l?.includes("tilemap"),u=a&&r.hasOwnProperty("maxExportTilesCount")?r.maxExportTilesCount:0;this.capabilities={operations:{supportsExportTiles:a,supportsTileMap:p},exportTiles:a?{maxExportTilesCount:+u}:null},this.tileInfo=V(i.tileInfo,i,null,{ignoreMinMaxLOD:!0});const c=r.tileMap?g(f(s.path,r.tileMap),s.query):null;p?(this.type="vector-tile",this.tilemap=new Z(new z({layer:{parsedUrl:s,tileInfo:this.tileInfo,type:"vector-tile",tileServers:this.tileServers}}),c)):c&&(this.tilemap=new X(c)),this.fullExtent=T.fromJSON(r.fullExtent)}destroy(){}async getRefKey(e,t){return this.tilemap?.dataKey(e,t)??e}requestTile(e,r,s,i){return function(e,r,s,i,o){return function(e,r){const s=ee.get(e);if(s)return s.then((e=>n(e)));const i=t(e,{responseType:"array-buffer",...r}).then((({data:t})=>(ee.delete(e),t))).catch((t=>{throw ee.delete(e),t}));return ee.set(e,i),i}(e.replace(/\{z\}/gi,r.toString()).replace(/\{y\}/gi,s.toString()).replace(/\{x\}/gi,i.toString()),o)}(this.tileServers[r%this.tileServers.length],e,r,s,i)}isCompatibleWith(e){const t=this.tileInfo,r=e.tileInfo;if(!t.spatialReference.equals(r.spatialReference))return!1;if(!t.origin.equals(r.origin))return!1;if(Math.round(t.dpi)!==Math.round(r.dpi))return!1;const s=t.lods,i=r.lods,o=Math.min(s.length,i.length);for(let e=0;e<o;e++){const t=s[e],r=i[e];if(t.level!==r.level||Math.round(t.scale)!==Math.round(r.scale))return!1}return!0}}const re=F.defaults&&F.defaults.io.corsEnabledServers;function se(e){if(!e)return;const t=S(e);re&&!re.includes(t)&&re.push(t)}function ie(...e){let t;for(let r=0;r<e.length;++r)if(j(e[r])){if(t){const s=t.split("://")[0];t=s+":"+e[r].trim()}}else t=d(e[r])?e[r]:f(t,e[r]);return w(t)}async function oe(e,r,s,i,o){let l,n,a;if(u(o),"string"==typeof s){const e=x(s);se(e),a=await t(e,{...o,responseType:"json",query:{f:"json",...o?.query}}),a.ssl&&(l&&(l=l.replace(/^http:/i,"https:")),n&&(n=n.replace(/^http:/i,"https:"))),l=e,n=e}else a={data:s},l=s.jsonUrl||null,n=i;const p=a.data;if(le(p))return e.styleUrl=l||null,async function(e,t,r,s){const i=r?v(r):k();e.styleBase=i,e.style=t,e.styleUrl&&se(e.styleUrl),t["sprite-format"]&&"webp"===t["sprite-format"].toLowerCase()&&(e.spriteFormat="webp");const o=[];if(t.sources&&t.sources.esri){const r=t.sources.esri;r.url?await oe(e,"esri",ie(i,r.url),void 0,s):o.push(oe(e,"esri",r,i,s))}for(const r of Object.keys(t.sources))"esri"!==r&&"vector"===t.sources[r].type&&(t.sources[r].url?o.push(oe(e,r,ie(i,t.sources[r].url),void 0,s)):t.sources[r].tiles&&o.push(oe(e,r,t.sources[r],i,s)));await Promise.all(o)}(e,p,n,o);if(!le(p))return e.sourceUrl?ne(e,p,n,!1,r,o):(e.sourceUrl=l||null,ne(e,p,n,!0,r,o));throw new Error("You must specify the URL or the JSON for a service or for a style.")}function le(e){return!!e.sources}async function ne(e,t,r,s,i,o){const l=r?w(r)+"/":k(),n=function(e,t){if(e.hasOwnProperty("tileInfo"))return e;const r={xmin:-20037507.067161843,ymin:-20037507.067161843,xmax:20037507.067161843,ymax:20037507.067161843,spatialReference:{wkid:102100}};let s=78271.51696400007,i=295828763.7957775;const o=[],l=e.hasOwnProperty("minzoom")?+e.minzoom:0,n=e.hasOwnProperty("maxzoom")?+e.maxzoom:22;for(let e=0;e<=n;e++)e>=l&&o.push({level:e,scale:i,resolution:s}),s/=2,i/=2;for(const r of e.tiles)se(ie(t,r));return{capabilities:"TilesOnly",initialExtent:r,fullExtent:r,minScale:0,maxScale:0,tiles:e.tiles,tileInfo:{rows:512,cols:512,dpi:96,format:"pbf",origin:{x:-20037508.342787,y:20037508.342787},lods:o,spatialReference:{wkid:102100}}}}(t,l),a=new te(i,g(l,o?.query),n);if(!s&&e.primarySourceName in e.sourceNameToSource){const t=e.sourceNameToSource[e.primarySourceName];if(!t.isCompatibleWith(a))return;null!=a.fullExtent&&(null!=t.fullExtent?t.fullExtent.union(a.fullExtent):t.fullExtent=a.fullExtent.clone()),t.tileInfo.lods.length<a.tileInfo.lods.length&&(t.tileInfo=a.tileInfo)}if(s?(e.sourceBase=l,e.source=t,e.validatedSource=n,e.primarySourceName=i,e.sourceUrl&&se(e.sourceUrl)):se(l),e.sourceNameToSource[i]=a,!e.style){if(null==t.defaultStyles)throw new Error;return"string"==typeof t.defaultStyles?oe(e,"",ie(l,t.defaultStyles,"root.json"),void 0,o):oe(e,"",t.defaultStyles,ie(l,"root.json"),o)}}function ae(e,t){if(e===t)return!0;if(null==e&&null!=t)return!1;if(null!=e&&null==t)return!1;if(null==e||null==t)return!1;if(!e.spatialReference.equals(t.spatialReference)||e.dpi!==t.dpi)return!1;const r=e.origin,s=t.origin;if(Math.abs(r.x-s.x)>=1e-6||Math.abs(r.y-s.y)>=1e-6)return!1;let i,o;e.lods[0].scale>t.lods[0].scale?(i=e,o=t):(o=e,i=t);for(let e=i.lods[0].scale;e>=o.lods[o.lods.length-1].scale-1e-6;e/=2)if(Math.abs(e-o.lods[0].scale)<1e-6)return!0;return!1}function pe(e,t){if(e===t)return e;if(null==e&&null!=t)return t;if(null!=e&&null==t)return e;if(null==e||null==t)return null;const r=e.size[0],s=e.format,i=e.dpi,o={x:e.origin.x,y:e.origin.y},l=e.spatialReference.toJSON(),n=e.lods[0].scale>t.lods[0].scale?e.lods[0]:t.lods[0],a=e.lods[e.lods.length-1].scale<=t.lods[t.lods.length-1].scale?e.lods[e.lods.length-1]:t.lods[t.lods.length-1],p=n.scale,u=n.resolution,c=a.scale,h=[];let m=p,y=u,d=0;for(;m>c;)h.push({level:d,resolution:y,scale:m}),d++,m/=2,y/=2;return new q({size:[r,r],dpi:i,format:s||"pbf",origin:o,lods:h,spatialReference:l})}let ue=class extends(A(C(O(M(D(N(E(L(p(R)))))))))){constructor(...e){super(...e),this._spriteSourceMap=new Map,this.currentStyleInfo=null,this.style=null,this.isReference=null,this.operationalLayerType="VectorTileLayer",this.type="vector-tile",this.url=null,this.showCollisionBoxes="none",this.path=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){if(this.sourceNameToSource)for(const e of Object.values(this.sourceNameToSource))e?.destroy();this._spriteSourceMap.clear()}async prefetchResources(e){await this.loadSpriteSource(globalThis.devicePixelRatio||1,e)}load(e){const r=this.loadFromPortal({supportedTypes:["Vector Tile Service"],supportsData:!1},e).catch(h).then((async()=>{if(!this.portalItem||!this.portalItem.id)return;const r=`${this.portalItem.itemUrl}/resources/styles/root.json`;(await t(r,{...e,query:{f:"json",...this.customParameters,token:this.apiKey}})).data&&this.read({url:r},K(this.portalItem))})).catch(h).then((()=>this._loadStyle(e)));return this.addResolvingPromise(r),Promise.resolve(this)}get attributionDataUrl(){const e=this.currentStyleInfo,t=e&&e.serviceUrl&&m(e.serviceUrl);if(!t)return null;const r=this._getDefaultAttribution(t.path);return r?g(r,{...this.customParameters,token:this.apiKey}):null}get capabilities(){const e=this.primarySource;return e?e.capabilities:{operations:{supportsExportTiles:!1,supportsTileMap:!1},exportTiles:null}}get fullExtent(){return this.primarySource?.fullExtent||null}get parsedUrl(){return this.serviceUrl?m(this.serviceUrl):null}get serviceUrl(){return this.currentStyleInfo&&this.currentStyleInfo.serviceUrl||null}get spatialReference(){return this.tileInfo&&this.tileInfo.spatialReference||null}get styleUrl(){return this.currentStyleInfo&&this.currentStyleInfo.styleUrl||null}writeStyleUrl(e,t){e&&j(e)&&(e=`https:${e}`);const s=a(r(e));t.styleUrl=G(e,s)}get tileInfo(){const e=[];for(const t in this.sourceNameToSource)e.push(this.sourceNameToSource[t]);let t=this.primarySource?.tileInfo||new q;if(e.length>1)for(let r=0;r<e.length;r++)ae(t,e[r].tileInfo)&&(t=pe(t,e[r].tileInfo));return t}readVersion(e,t){return t.version?parseFloat(t.version):parseFloat(t.currentVersion)}async loadSpriteSource(e=1,t){if(!this._spriteSourceMap.has(e)){const r=J("2d").maxTextureSize,s=this.currentStyleInfo?.spriteUrl?g(this.currentStyleInfo.spriteUrl,{...this.customParameters,token:this.apiKey}):null,i=new H({type:"url",spriteUrl:s,pixelRatio:e,spriteFormat:this.currentStyleInfo?.spriteFormat},r);await i.load(t),this._spriteSourceMap.set(e,i)}return this._spriteSourceMap.get(e)}async setSpriteSource(e,t){if(!e)return null;const r=J("2d").maxTextureSize,s=e.spriteUrl,i=s?g(s,{...this.customParameters,token:this.apiKey}):null;if(!i&&"url"===e.type)return null;const o=new H(e,r);try{await o.load(t);const r=e.pixelRatio||1;return this._spriteSourceMap.clear(),this._spriteSourceMap.set(r,o),i&&this.currentStyleInfo&&(this.currentStyleInfo.spriteUrl=i),this.emit("spriteSource-change",{spriteSource:o}),o}catch(e){h(e)}return null}async loadStyle(e,t){const r=e||this.style||this.url;return this._loadingTask&&"string"==typeof r&&this.url===r||(this._loadingTask?.abort(),this._loadingTask=s((e=>(this._spriteSourceMap.clear(),this._getSourceAndStyle(r,{signal:e}))),t)),this._loadingTask.promise}getStyleLayerId(e){return this.styleRepository.getStyleLayerId(e)}getStyleLayerIndex(e){return this.styleRepository.getStyleLayerIndex(e)}getPaintProperties(e){return n(this.styleRepository.getPaintProperties(e))}setPaintProperties(e,t){const r=this.styleRepository.isPainterDataDriven(e);this.styleRepository.setPaintProperties(e,t);const s=this.styleRepository.isPainterDataDriven(e);this.emit("paint-change",{layer:e,paint:t,isDataDriven:r||s})}getStyleLayer(e){return n(this.styleRepository.getStyleLayer(e))}setStyleLayer(e,t){this.styleRepository.setStyleLayer(e,t),this.emit("style-layer-change",{layer:e,index:t})}deleteStyleLayer(e){this.styleRepository.deleteStyleLayer(e),this.emit("delete-style-layer",{layer:e})}getLayoutProperties(e){return n(this.styleRepository.getLayoutProperties(e))}setLayoutProperties(e,t){this.styleRepository.setLayoutProperties(e,t),this.emit("layout-change",{layer:e,layout:t})}setStyleLayerVisibility(e,t){this.styleRepository.setStyleLayerVisibility(e,t),this.emit("style-layer-visibility-change",{layer:e,visibility:t})}getStyleLayerVisibility(e){return this.styleRepository.getStyleLayerVisibility(e)}write(e,t){return t?.origin&&!this.styleUrl?(t.messages&&t.messages.push(new i("vectortilelayer:unsupported",`VectorTileLayer (${this.title}, ${this.id}) with style defined by JSON only are not supported`,{layer:this})),null):super.write(e,t)}getTileUrl(e,t,r){return null}async _getSourceAndStyle(e,t){if(!e)throw new Error("invalid style!");const r=await async function(e,t){const r={source:null,sourceBase:null,sourceUrl:null,validatedSource:null,style:null,styleBase:null,styleUrl:null,sourceNameToSource:{},primarySourceName:"",spriteFormat:"png"},[s,i]="string"==typeof e?[e,null]:[null,e.jsonUrl];await oe(r,"esri",e,i,t);const o={layerDefinition:r.validatedSource,url:s,serviceUrl:r.sourceUrl,style:r.style,styleUrl:r.styleUrl,spriteUrl:r.style.sprite&&ie(r.styleBase,r.style.sprite),spriteFormat:r.spriteFormat,glyphsUrl:r.style.glyphs&&ie(r.styleBase,r.style.glyphs),sourceNameToSource:r.sourceNameToSource,primarySourceName:r.primarySourceName};return se(o.spriteUrl),se(o.glyphsUrl),o}(e,{...t,query:{...this.customParameters,token:this.apiKey}});"webp"===r.spriteFormat&&(await function(e){if(Q)return Q;const t="UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA";return Q=new Promise((e=>{const r=new Image;r.onload=()=>{r.onload=r.onerror=null,e(r.width>0&&r.height>0)},r.onerror=()=>{r.onload=r.onerror=null,e(!1)},r.src="data:image/webp;base64,"+t})),Q}()||(r.spriteFormat="png")),this._set("currentStyleInfo",{...r}),"string"==typeof e?(this.url=e,this.style=null):(this.url=null,this.style=e),this._set("sourceNameToSource",r.sourceNameToSource),this._set("primarySource",r.sourceNameToSource[r.primarySourceName]),this._set("styleRepository",new W(r.style)),this.read(r.layerDefinition,{origin:"service"}),this.emit("load-style")}_getDefaultAttribution(e){const t=e.match(/^https?:\/\/(?:basemaps|basemapsbeta|basemapsdev)(?:-api)?\.arcgis\.com(\/[^\/]+)?\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/vectortileserver/i),r=["OpenStreetMap_v2","OpenStreetMap_Daylight_v2","OpenStreetMap_Export_v2","OpenStreetMap_FTS_v2","OpenStreetMap_GCS_v2","World_Basemap","World_Basemap_v2","World_Basemap_Export_v2","World_Basemap_GCS_v2","World_Basemap_WGS84","World_Contours_v2"];if(!t)return;const s=t[2]&&t[2].toLowerCase();if(!s)return;const i=t[1]||"";for(const e of r)if(e.toLowerCase().includes(s))return x(`//static.arcgis.com/attribution/Vector${i}/${e}`)}async _loadStyle(e){return this._loadingTask?.promise??this.loadStyle(null,e)}};e([U({readOnly:!0})],ue.prototype,"attributionDataUrl",null),e([U({type:["show","hide"]})],ue.prototype,"listMode",void 0),e([U({json:{read:!0,write:!0}})],ue.prototype,"blendMode",void 0),e([U({readOnly:!0,json:{read:!1}})],ue.prototype,"capabilities",null),e([U({readOnly:!0})],ue.prototype,"currentStyleInfo",void 0),e([U({json:{read:!1},readOnly:!0,type:T})],ue.prototype,"fullExtent",null),e([U()],ue.prototype,"style",void 0),e([U({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ue.prototype,"isReference",void 0),e([U({type:["VectorTileLayer"]})],ue.prototype,"operationalLayerType",void 0),e([U({readOnly:!0})],ue.prototype,"parsedUrl",null),e([U({readOnly:!0})],ue.prototype,"serviceUrl",null),e([U({type:P,readOnly:!0})],ue.prototype,"spatialReference",null),e([U({readOnly:!0})],ue.prototype,"styleRepository",void 0),e([U({readOnly:!0})],ue.prototype,"sourceNameToSource",void 0),e([U({readOnly:!0})],ue.prototype,"primarySource",void 0),e([U({type:String,readOnly:!0,json:{write:{ignoreOrigin:!0},origins:{"web-document":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],ue.prototype,"styleUrl",null),e([b(["portal-item","web-document"],"styleUrl")],ue.prototype,"writeStyleUrl",null),e([U({json:{read:!1,origins:{service:{read:!1}}},readOnly:!0,type:q})],ue.prototype,"tileInfo",null),e([U({json:{read:!1},readOnly:!0,value:"vector-tile"})],ue.prototype,"type",void 0),e([U({json:{origins:{"web-document":{read:{source:"styleUrl"}},"portal-item":{read:{source:"url"}}},write:!1,read:!1}})],ue.prototype,"url",void 0),e([U({readOnly:!0})],ue.prototype,"version",void 0),e([_("version",["version","currentVersion"])],ue.prototype,"readVersion",null),e([U({type:String})],ue.prototype,"showCollisionBoxes",void 0),e([U({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],ue.prototype,"path",void 0),ue=e([I("esri.layers.VectorTileLayer")],ue);const ce=ue;export{ce as default};
