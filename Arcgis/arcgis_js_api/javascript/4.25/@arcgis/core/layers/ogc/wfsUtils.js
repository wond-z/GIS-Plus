/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import"../../geometry.js";import e from"../../request.js";import t from"../../core/Error.js";import{c as r,f as s}from"../../core/Handles.js";import{a as n,i as o}from"../../chunks/maybe.js";import{eachAlways as a}from"../../core/promiseUtils.js";import{isHTTPSProtocol as i,hasSameOrigin as p,toHTTPS as u}from"../../core/urlUtils.js";import{initializeProjection as c,project as m}from"../../geometry/projection.js";import l,{e as y,W as f}from"../../geometry/SpatialReference.js";import{f as d}from"../../chunks/typeUtils.js";import{g}from"../../chunks/geojson.js";import{v as h,i as w}from"../../chunks/xmlUtils.js";import j from"../support/Field.js";import b from"../../geometry/Extent.js";import"../../chunks/ensureType.js";import"../../chunks/object.js";import"../../core/lang.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/string.js";import"../../geometry/Geometry.js";import"../../chunks/tslib.es6.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/ArrayPool.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/tracking.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../geometry/Multipoint.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/jsonMap.js";import"../../kernel.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/common.js";import"../../chunks/unitUtils.js";import"../../chunks/projectionEllipsoid.js";import"../../chunks/SimpleObservable.js";import"../../chunks/mat4.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../chunks/OptimizedFeature.js";import"../support/fieldUtils.js";import"../../chunks/arcadeOnDemand.js";import"../../chunks/enumeration.js";import"../../chunks/domains.js";import"../support/CodedValueDomain.js";import"../support/Domain.js";import"../support/InheritedDomain.js";import"../support/RangeDomain.js";import"../../chunks/fieldType.js";const T=/^(?:(?<year>-?\d{4,})-(?<month>\d{2})-(?<day>\d{2}))(?:T(?<hours>\d{2}):(?<minutes>\d{2}):(?<seconds>\d{2})(?:\.(?<ms>\d+))?)?(?:(?<isUTC>Z)|(?:(?<offsetSign>\+|-)(?<offsetHours>\d{2}):(?<offsetMinutes>\d{2})))?$/,k="__esri_wfs_id__";async function S(t,r){const s=F((await e(t,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:"2.0.0",...r?.customParameters},signal:r?.signal})).data);return function(e,t){i(e)&&(p(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=u(t.operations.DescribeFeatureType.url)),p(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=u(t.operations.GetFeature.url)))}(t,s),s}function F(e){const s=I(e);!function(e){const r=e.firstElementChild?.getAttribute("version");if(r&&"2.0.0"!==r)throw new t("wfs-layer:unsupported-wfs-version",`Unsupported WFS version ${r}. Supported version: 2.0.0`)}(s),L(s);const n=s.firstElementChild,o=r(w(n,{FeatureTypeList:{FeatureType:e=>{const t={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",supportedSpatialReferences:[]},r=new Set([4326]),s=e=>{const t=parseInt(e.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);Number.isNaN(t)||r.add(t)};return h(e,{Name:e=>{const{name:r,prefix:s}=_(e.textContent);t.typeName=`${s}:${r}`,t.name=r,t.namespacePrefix=s,t.namespaceUri=e.lookupNamespaceURI(s)},Abstract:e=>{t.description=e.textContent},Title:e=>{t.title=e.textContent},WGS84BoundingBox:e=>{t.extent=function(e){let t,r,s,n;for(const o of e.children)switch(o.localName){case"LowerCorner":[t,r]=o.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[s,n]=o.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:r,xmax:s,ymax:n,spatialReference:f}}(e)},DefaultSRS:s,DefaultCRS:s,OtherSRS:s,OtherCRS:s}),t.title||(t.title=t.name),t.supportedSpatialReferences.push(...r),t}}}));return{operations:C(n),get featureTypes(){return Array.from(o())},readFeatureTypes:o}}const x=new Set(["json","application/json","geojson","application/json; subtype=geojson"]);function C(e){let r=!1;const s={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};if(h(e,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{s.GetCapabilities.url=e.getAttribute("xlink:href")}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{s.DescribeFeatureType.url=e.getAttribute("xlink:href")}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{s.GetFeature.url=e.getAttribute("xlink:href")}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:e=>{const t=e.textContent;t&&x.has(t.toLowerCase())&&(s.GetFeature.outputFormat=t)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{r="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{s.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),!r)throw new t("wfs-layer:kvp-encoding-not-supported","WFS service doesn't support key/value pair (KVP) encoding");if(n(s.GetFeature.outputFormat))throw new t("wfs-layer:geojson-not-supported","WFS service doesn't support GeoJSON output format");return s}function E(e,t,r){return s(e,(e=>r?e.name===t&&e.namespaceUri===r:e.typeName===t||e.name===t))}async function N(e,r,s,o={}){const{featureType:i,extent:p}=await P(e,r,s,o),{fields:u,geometryType:c,swapXY:m,objectIdField:y,geometryField:f}=await async function(e,r,s={}){const[o,i]=await a([A(e.operations.DescribeFeatureType.url,r,s),U(e,r,s)]);if(o.error||i.error)throw new t("wfs-layer:getWFSLayerTypeInfo-error",`An error occurred while getting info about the feature type '${r}'`,{error:o.error||i.error});const{fields:p,errors:u}=o.value??{},c=o.value?.geometryType||i.value?.geometryType,m=i.value?.swapXY??!1;if(n(c))throw new t("wfs-layer:unknown-geometry-type",`The geometry type could not be determined for type '${r}`,{typeName:r,geometryType:c,fields:p,errors:u});return{...R(p??[]),geometryType:c,swapXY:m}}(e,i.typeName,o);return{url:e.operations.GetCapabilities.url,name:i.name,namespaceUri:i.namespaceUri,fields:u,geometryField:f,geometryType:c,objectIdField:y,spatialReference:o.spatialReference??l.WGS84,extent:p,swapXY:m,wfsCapabilities:e,customParameters:o.customParameters}}async function P(e,r,s,o={}){const{spatialReference:a=l.WGS84}=o,i=e.readFeatureTypes(),p=r?E(i,r,s):i.next().value;if(n(p))throw r?new t("wfs-layer:feature-type-not-found",`The type '${r}' could not be found in the service`):new t("wfs-layer:empty-service","The service is empty");let u=new b({...p.extent,spatialReference:a});if(!y(a,f))try{await c(f,a,void 0,o),u=m(u,f)}catch{throw new t("wfs-layer:unsupported-spatial-reference","Projection not supported")}return{extent:u,spatialReference:a,featureType:p}}function R(e){const t=e.find((e=>"geometry"===e.type));let r=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),r||(r=new j({name:"__esri_wfs_id__",type:"oid",alias:"__esri_wfs_id__"}),e.unshift(r)),{geometryField:t?.name??null,objectIdField:r.name,fields:e}}async function U(t,r,s={}){let n,o=!1;const[a,i]=await Promise.all([D(t.operations.GetFeature.url,r,t.operations.GetFeature.outputFormat,{...s,count:1}),e(t.operations.GetFeature.url,{responseType:"text",query:O(r,void 0,{...s,count:1}),signal:s?.signal})]),p="FeatureCollection"===a.type&&a.features[0]?.geometry;if(p){let e;switch(n=d.fromJSON(g(p.type)),p.type){case"Point":e=p.coordinates;break;case"LineString":case"MultiPoint":e=p.coordinates[0];break;case"MultiLineString":case"Polygon":e=p.coordinates[0][0];break;case"MultiPolygon":e=p.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(i.data);if(t){const r=e[0].toFixed(3),s=e[1].toFixed(3),n=parseFloat(t[1]).toFixed(3);r===parseFloat(t[2]).toFixed(3)&&s===n&&(o=!0)}}return{geometryType:n,swapXY:o}}async function A(t,r,s){return G(r,(await e(t,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:"2.0.0",TYPENAME:r,...s?.customParameters},signal:s?.signal})).data)}function G(e,r){const{name:n}=_(e),a=I(r);L(a);const i=s(w(a.firstElementChild,{element:e=>({name:e.getAttribute("name"),typeName:_(e.getAttribute("type")).name})}),(({name:e})=>e===n));if(o(i)){const e=s(w(a.firstElementChild,{complexType:e=>e}),(e=>e.getAttribute("name")===i.typeName));if(o(e))return function(e){const r=[],s=[];let n;const o=w(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const a of o){const o=a.getAttribute("name");if(!o)continue;let i,p;if(a.hasAttribute("type")?i=_(a.getAttribute("type")).name:h(a,{simpleType:{restriction:e=>(i=_(e.getAttribute("base")).name,{maxLength:e=>{p=+e.getAttribute("value")}})}}),!i)continue;const u="true"===a.getAttribute("nillable");let c=!1;switch(i.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":s.push(new j({name:o,alias:o,type:"integer",nullable:u}));break;case"float":case"double":case"decimal":s.push(new j({name:o,alias:o,type:"double",nullable:u}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":s.push(new j({name:o,alias:o,type:"string",nullable:u,length:p??255}));break;case"datetime":case"date":s.push(new j({name:o,alias:o,type:"date",nullable:u,length:p??36}));break;case"pointpropertytype":n="point",c=!0;break;case"multipointpropertytype":n="multipoint",c=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":n="polyline",c=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":n="polygon",c=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":c=!0,r.push(new t("wfs-layer:unknown-geometry-type",`geometry type '${i}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:r.push(new t("wfs-layer:unknown-field-type",`Unknown field type '${i}'`,{type:(new XMLSerializer).serializeToString(e)}))}c&&s.push(new j({name:o,alias:o,type:"geometry",nullable:u}))}for(const e of s)if("integer"===e.type&&!e.nullable&&v.has(e.name.toLowerCase())){e.type="oid";break}return{geometryType:n,fields:s,errors:r}}(e)}throw new t("wfs-layer:feature-type-not-found",`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(a)})}const v=new Set(["objectid","fid"]);async function D(r,s,n,o){let{data:a}=await e(r,{responseType:"text",query:O(s,n,o),signal:o?.signal});a=a.replace(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{if(o?.dateFields?.length){const e=new Set(o.dateFields);return JSON.parse(a,((t,r)=>{return e.has(t)?function(e){const t=T.exec(e);if(!t?.groups)return null;const r=t.groups,s=+r.year,n=+r.month-1,o=+r.day,a=+(r.hours??"0"),i=+(r.minutes??"0"),p=+(r.seconds??"0");if(a>23)return null;if(i>59)return null;if(p>59)return null;const u=r.ms??"0",c=u?+u.padEnd(3,"0").substring(0,3):0;let m;if(r.isUTC)m=Date.UTC(s,n,o,a,i,p,c);else if(r.offsetSign){const e=+r.offsetHours,t=+r.offsetMinutes;m=6e4*("+"===r.offsetSign?-1:1)*(60*e+t)+Date.UTC(s,n,o,a,i,p,c)}else m=new Date(s,n,o,a,i,p,c).getTime();return Number.isNaN(m)?null:m}(s=r)??function(e){const t=new Date(e).getTime();return Number.isNaN(t)?null:t}(s):r;var s}))}return JSON.parse(a)}catch(e){throw new t("wfs-layer:malformed-json","Error while parsing the response",{response:a,error:e})}}function O(e,t,r){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:e,OUTPUTFORMAT:t,SRSNAME:"EPSG:4326",STARTINDEX:r?.startIndex,COUNT:r?.count,...r?.customParameters}}async function M(t,r,s){const n=I((await e(t,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:r,RESULTTYPE:"hits",...s?.customParameters},signal:s?.signal})).data);L(n);const o=Number.parseFloat(n.firstElementChild.getAttribute("numberMatched"));return Number.isNaN(o)?0:o}function I(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function _(e){const[t,r]=e.split(":");return{prefix:r?t:"",name:r??t}}function L(e){let r="",s="";if(h(e.firstElementChild,{Exception:e=>(r=e.getAttribute("exceptionCode"),{ExceptionText:e=>{s=e.textContent}})}),r)throw new t(`wfs-layer:${r}`,s)}export{k as WFS_OID_FIELD_NAME,A as describeFeatureType,E as findFeatureType,S as getCapabilities,D as getFeature,M as getFeatureCount,P as getFeatureTypeInfo,N as getWFSLayerInfo,G as parseDescribeFeatureTypeResponse,F as parseGetCapabilitiesResponse,R as prepareWFSLayerFields};
