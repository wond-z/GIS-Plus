/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../request.js";import t from"../core/Error.js";import{k as o,i as s}from"../chunks/maybe.js";import{M as i}from"../chunks/MultiOriginJSONSupport.js";import{throwIfAbortError as a,throwIfAborted as p}from"../core/promiseUtils.js";import{objectToQuery as n}from"../core/urlUtils.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"../chunks/ensureType.js";import{r as c}from"../chunks/reader.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import u from"../geometry/HeightModelInfo.js";import h from"./Layer.js";import{ArcGISCachedService as j}from"./mixins/ArcGISCachedService.js";import{A as d}from"../chunks/ArcGISService.js";import{O as y}from"../chunks/OperationalLayer.js";import{PortalLayer as k}from"./mixins/PortalLayer.js";import{u as g}from"../chunks/commonProperties.js";import{a as v}from"../chunks/LercDecoder.js";import"../config.js";import"../chunks/object.js";import"../kernel.js";import"../chunks/Logger.js";import"../chunks/string.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../chunks/ArrayPool.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../core/JSONSupport.js";import"../chunks/jsonMap.js";import"../chunks/unitUtils.js";import"../chunks/projectionEllipsoid.js";import"../geometry/SpatialReference.js";import"../chunks/writer.js";import"../chunks/Ellipsoid.js";import"../geometry.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../core/Evented.js";import"../core/Identifiable.js";import"../core/Loadable.js";import"../core/Promise.js";import"../chunks/TilemapCache.js";import"./support/TileInfo.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/common.js";import"./support/LOD.js";import"../chunks/TileKey.js";import"../chunks/byteSizeEstimations.js";import"../core/HandleOwner.js";import"../chunks/WatchUpdatingTracking.js";import"../core/reactiveUtils.js";import"../chunks/LRUCache.js";import"../chunks/MemCache.js";import"../chunks/arcgisLayerUrl.js";import"../chunks/persistableUrlUtils.js";import"../chunks/asyncUtils.js";import"../portal/Portal.js";import"../chunks/locale.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../portal/PortalItem.js";import"../chunks/assets.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../support/timeUtils.js";import"../chunks/ElevationInfo.js";import"./support/fieldUtils.js";import"../chunks/arcadeOnDemand.js";import"../chunks/unitConversionUtils.js";import"../chunks/lengthUtils.js";import"../chunks/opacityUtils.js";import"../chunks/WorkerHandle.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"../chunks/Queue.js";import"../core/workers/RemoteClient.js";import"../intl.js";import"../chunks/number.js";import"../chunks/messages.js";let f=class extends(j(d(y(k(i(h)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=v()}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}destroy(){this._lercDecoder=o(this._lercDecoder)}readVersion(e,r){let t=r.currentVersion;return t||(t=9.3),t}load(e){const r=s(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let r=0;r<e.typeKeywords.length;r++)if("elevation 3d layer"===e.typeKeywords[r].toLowerCase())return!0;throw new t("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(a).then((()=>this._fetchImageService(r)))),Promise.resolve(this)}fetchTile(e,t,o,i){const a=s((i=i||{signal:null}).signal)?i.signal:i.signal=(new AbortController).signal,p={responseType:"array-buffer",signal:a},n={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,o,i))).then((()=>r(this.getTileUrl(e,t,o),p))).then((e=>this._lercDecoder.decode(e.data,n,a))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo?.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))}getTileUrl(e,r,t){const o=!this.tilemapCache&&this.supportsBlankTile,s=n({...this.parsedUrl.query,blankTile:!o&&null});return`${this.parsedUrl.path}/tile/${e}/${r}/${t}${s?"?"+s:""}`}async queryElevation(e,r){const{ElevationQuery:t}=await import("../chunks/ElevationQuery2.js");return p(r),(new t).query(this,e,r)}async createElevationSampler(e,r){const{ElevationQuery:t}=await import("../chunks/ElevationQuery2.js");return p(r),(new t).createSampler(this,e,r)}_fetchTileAvailability(e,r,t,o){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,r,t,o):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},o=await r(this.parsedUrl.path,t);o.ssl&&(this.url=this.url?.replace(/^http:/i,"https:")),this.sourceJSON=o.data,this.read(o.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};e([l({json:{read:{source:"copyrightText"}}})],f.prototype,"copyright",void 0),e([l({readOnly:!0,type:u})],f.prototype,"heightModelInfo",void 0),e([l({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],f.prototype,"path",void 0),e([l({type:["show","hide"]})],f.prototype,"listMode",void 0),e([l({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],f.prototype,"minScale",void 0),e([l({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],f.prototype,"maxScale",void 0),e([l({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],f.prototype,"opacity",void 0),e([l({type:["ArcGISTiledElevationServiceLayer"]})],f.prototype,"operationalLayerType",void 0),e([l()],f.prototype,"sourceJSON",void 0),e([l({json:{read:!1},value:"elevation",readOnly:!0})],f.prototype,"type",void 0),e([l(g)],f.prototype,"url",void 0),e([l()],f.prototype,"version",void 0),e([c("version",["currentVersion"])],f.prototype,"readVersion",null),f=e([m("esri.layers.ElevationLayer")],f),f.prototype.fetchTile.__isDefault__=!0;const w=f;export{w as default};
