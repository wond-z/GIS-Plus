/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as i}from"../../core/JSONSupport.js";import{clone as e}from"../../core/lang.js";import{a as o}from"../../chunks/maybe.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import n from"../../geometry/Extent.js";import p from"../../geometry/SpatialReference.js";import a from"../../geometry/Point.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/object.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/ArrayPool.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../geometry/Geometry.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../core/accessorSupport/decorators/cast.js";var l;let h=l=class extends i{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.transposeInfo=null,this.blockBoundary=null}clone(){return new l({blockWidth:this.blockWidth,blockHeight:this.blockHeight,compression:this.compression,origin:e(this.origin),firstPyramidLevel:this.firstPyramidLevel,maximumPyramidLevel:this.maximumPyramidLevel,pyramidResolutions:e(this.pyramidResolutions),pyramidScalingFactor:this.pyramidScalingFactor,pyramidBlockWidth:this.pyramidBlockWidth,pyramidBlockHeight:this.pyramidBlockHeight,isVirtualTileInfo:this.isVirtualTileInfo,tileInfo:e(this.tileInfo),transposeInfo:e(this.transposeInfo),blockBoundary:e(this.blockBoundary)})}};t([r({type:Number,json:{write:!0}})],h.prototype,"blockWidth",void 0),t([r({type:Number,json:{write:!0}})],h.prototype,"blockHeight",void 0),t([r({type:String,json:{write:!0}})],h.prototype,"compression",void 0),t([r({type:a,json:{write:!0}})],h.prototype,"origin",void 0),t([r({type:Number,json:{write:!0}})],h.prototype,"firstPyramidLevel",void 0),t([r({type:Number,json:{write:!0}})],h.prototype,"maximumPyramidLevel",void 0),t([r({json:{write:!0}})],h.prototype,"pyramidResolutions",void 0),t([r({type:Number,json:{write:!0}})],h.prototype,"pyramidScalingFactor",void 0),t([r({type:Number,json:{write:!0}})],h.prototype,"pyramidBlockWidth",void 0),t([r({type:Number,json:{write:!0}})],h.prototype,"pyramidBlockHeight",void 0),t([r({type:Boolean,json:{write:!0}})],h.prototype,"isVirtualTileInfo",void 0),t([r({json:{write:!0}})],h.prototype,"tileInfo",void 0),t([r()],h.prototype,"transposeInfo",void 0),t([r()],h.prototype,"blockBoundary",void 0),h=l=t([s("esri.layers.support.RasterStorageInfo")],h);const m=h;var u;let c=u=class extends i{constructor(t){super(t),this.attributeTable=null,this.bandCount=null,this.colormap=null,this.extent=null,this.format=void 0,this.height=null,this.width=null,this.histograms=null,this.keyProperties={},this.multidimensionalInfo=null,this.noDataValue=null,this.pixelSize=null,this.pixelType=null,this.isPseudoSpatialReference=!1,this.spatialReference=null,this.statistics=null,this.storageInfo=null,this.transform=null}get dataType(){const t=this.keyProperties?.DataType?.toLowerCase()??"generic";return"stdtime"===t?"standard-time":t}get nativeExtent(){return this._get("nativeExtent")||this.extent}set nativeExtent(t){t&&this._set("nativeExtent",t)}get nativePixelSize(){if(o(this.transform)||!this.transform.affectsPixelSize)return this.pixelSize;const t=this.nativeExtent;return{x:t.width/this.width,y:t.height/this.height}}get hasMultidimensionalTranspose(){return!!this.storageInfo?.transposeInfo}clone(){return new u({attributeTable:e(this.attributeTable),bandCount:this.bandCount,colormap:e(this.colormap),extent:e(this.extent),nativePixelSize:e(this.nativePixelSize),format:this.format,height:this.height,width:this.width,histograms:e(this.histograms),keyProperties:e(this.keyProperties),multidimensionalInfo:e(this.multidimensionalInfo),noDataValue:this.noDataValue,pixelSize:e(this.pixelSize),pixelType:this.pixelType,isPseudoSpatialReference:this.isPseudoSpatialReference,spatialReference:e(this.spatialReference),statistics:e(this.statistics),storageInfo:e(this.storageInfo),transform:e(this.transform)})}};t([r({json:{write:!0}})],c.prototype,"attributeTable",void 0),t([r({json:{write:!0}})],c.prototype,"bandCount",void 0),t([r({json:{write:!0}})],c.prototype,"colormap",void 0),t([r({type:String,readOnly:!0})],c.prototype,"dataType",null),t([r({type:n,json:{write:!0}})],c.prototype,"extent",void 0),t([r({type:n,json:{write:!0}})],c.prototype,"nativeExtent",null),t([r({json:{write:!0}})],c.prototype,"nativePixelSize",null),t([r({json:{write:!0}})],c.prototype,"format",void 0),t([r({json:{write:!0}})],c.prototype,"height",void 0),t([r({json:{write:!0}})],c.prototype,"width",void 0),t([r({json:{write:!0}})],c.prototype,"hasMultidimensionalTranspose",null),t([r({json:{write:!0}})],c.prototype,"histograms",void 0),t([r({json:{write:!0}})],c.prototype,"keyProperties",void 0),t([r({json:{write:!0}})],c.prototype,"multidimensionalInfo",void 0),t([r({json:{write:!0}})],c.prototype,"noDataValue",void 0),t([r({json:{write:!0}})],c.prototype,"pixelSize",void 0),t([r({json:{write:!0}})],c.prototype,"pixelType",void 0),t([r()],c.prototype,"isPseudoSpatialReference",void 0),t([r({type:p,json:{write:!0}})],c.prototype,"spatialReference",void 0),t([r({json:{write:!0}})],c.prototype,"statistics",void 0),t([r({type:m,json:{write:!0}})],c.prototype,"storageInfo",void 0),t([r({json:{write:!0}})],c.prototype,"transform",void 0),c=u=t([s("esri.layers.support.RasterInfo")],c);const d=c;export{m as R,d as default};
