/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as o}from"../../chunks/tslib.es6.js";import s from"../../core/Error.js";import{L as e}from"../../chunks/Logger.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/ensureType.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import i from"./MediaElementBase.js";import"../../chunks/object.js";import"../../chunks/maybe.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/tracking.js";import"../../core/Identifiable.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ArrayPool.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"./ControlPointsGeoreference.js";import"../../chunks/perspectiveUtils.js";import"../../chunks/mat3.js";import"../../chunks/common.js";import"../../chunks/mat3f64.js";import"../../chunks/vec2.js";import"../../chunks/vec3.js";import"../../chunks/screenUtils.js";import"../../chunks/vec2f64.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../geometry/Geometry.js";import"../../core/JSONSupport.js";import"../../geometry/SpatialReference.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../geometry/Polygon.js";import"../../geometry/Extent.js";import"../../chunks/extentUtils.js";import"../../chunks/zmUtils.js";import"../../geometry/projection.js";import"../../chunks/mathUtils.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/projectionEllipsoid.js";import"../../chunks/SimpleObservable.js";import"../../chunks/mat4.js";import"../../geometry/Multipoint.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../geometry/Polyline.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../chunks/GeoreferenceBase.js";import"../../core/Clonable.js";import"./CornersGeoreference.js";import"./ExtentAndRotationGeoreference.js";let n=class extends i{constructor(o){super(o),this.content=null,this.type="video"}load(){const o=this.video;if("string"==typeof o){const s=document.createElement("video");s.src=o,s.crossOrigin="anonymous",s.autoplay=!0,s.muted=!0,s.loop=!0,this.addResolvingPromise(this._loadVideo(s).then((()=>{this._set("content",s)})))}else o instanceof HTMLVideoElement?this.addResolvingPromise(this._loadVideo(o).then((()=>{this._set("content",o)}))):this.addResolvingPromise(Promise.reject(new s("video-element:invalid-video-type","Invalid video type",{video:o})));return Promise.resolve(this)}set video(o){"not-loaded"===this.loadStatus?this._set("video",o):e.getLogger(this.declaredClass).error("#video","video cannot be changed after the element is loaded.")}_loadVideo(o){return new Promise(((s,e)=>{o.oncanplay=()=>{o.oncanplay=null,o.play().then(s,e)},"anonymous"!==o.crossOrigin&&(o.crossOrigin="anonymous",o.src=o.src)}))}};o([t({readOnly:!0})],n.prototype,"content",void 0),o([t()],n.prototype,"video",null),n=o([r("esri.layers.support.VideoElement")],n);const m=n;export{m as default};
