/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{clone as n}from"../../core/lang.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import{e}from"../../chunks/enumeration.js";import{r as s}from"../../chunks/reader.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{w as a}from"../../chunks/writer.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/object.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/ArrayPool.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/jsonMap.js";var u;const c=new Set(["raster","raster2","dem","fillraster"]),m=new Set(["rasters"]),p=t=>t&&t.rasterFunction?j.fromJSON(t):t,f=t=>t&&t instanceof j?t.toJSON():t,l=t=>t?.functionName&&!t.declaredClass,h=t=>l(t)?new j(t):t;let j=u=class extends r{constructor(t){super(t),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.rasterFunctionDefinition=null}set functionArguments(t){if(t){const r=Object.keys(t);if(r.some((r=>c.has(r.toLowerCase())&&l(t[r])))||r.some((r=>m.has(r.toLowerCase())&&Array.isArray(t[r])&&t[r].some((t=>l(t)))))){t=n(t);for(const n of r)c.has(n.toLowerCase())?t[n]=h(t[n]):m.has(n.toLowerCase())&&Array.isArray(t[n])&&(t[n]=t[n].map((t=>h(t))))}}this._set("functionArguments",t)}readFunctionArguments(t){return(t=>{if(null==t)return null;t=n(t);const r={};for(const n of Object.keys(t))c.has(n.toLowerCase())?r[n]=p(t[n]):m.has(n.toLowerCase())&&Array.isArray(t[n])?r[n]=t[n].map(p):r[n]=t[n];return r})(t)}writeFunctionArguments(t,r,n){const o={};for(const r of Object.keys(t))c.has(r.toLowerCase())?o[r]=f(t[r]):m.has(r.toLowerCase())&&Array.isArray(t[r])?o[r]=t[r].map(f):o[r]=f(t[r]);r[n]=o}readFunctionName(t,r){const n=r.rasterFunctionInfos;return r.name||(n&&n.length&&"None"!==n[0].name?n[0].name:r.rasterFunctionDefinition?r.rasterFunctionDefinition.name:r.rasterFunction)}clone(){return new u({functionName:this.functionName,functionArguments:n(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:n(this.rasterFunctionDefinition)})}};t([o({json:{type:Object,name:"rasterFunctionArguments"}})],j.prototype,"functionArguments",null),t([s("functionArguments")],j.prototype,"readFunctionArguments",null),t([a("functionArguments")],j.prototype,"writeFunctionArguments",null),t([o({json:{type:String,write:{target:"rasterFunction"}}})],j.prototype,"functionName",void 0),t([s("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],j.prototype,"readFunctionName",null),t([e({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),o({json:{default:"unknown"}})],j.prototype,"outputPixelType",void 0),t([o({type:String,json:{read:!0,write:!0}})],j.prototype,"variableName",void 0),t([o({type:Object,json:{name:"rasterFunctionDefinition"}})],j.prototype,"rasterFunctionDefinition",void 0),j=u=t([i("esri.layers.support.RasterFunction")],j);const y=j;export{y as default};
