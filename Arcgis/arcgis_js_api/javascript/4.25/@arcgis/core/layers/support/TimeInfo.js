/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../TimeExtent.js";import r,{t as i}from"../../TimeInterval.js";import{JSONSupport as l}from"../../core/JSONSupport.js";import{clone as n}from"../../core/lang.js";import{i as o}from"../../chunks/maybe.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import{r as a}from"../../chunks/reader.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import{w as u}from"../../chunks/writer.js";import p from"./TimeReference.js";import"../../chunks/timeUtils.js";import"../../chunks/object.js";import"../../chunks/jsonMap.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/ArrayPool.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"../../core/Error.js";var c;let d=c=class extends l{constructor(e){super(e),this.cumulative=!1,this.endField=null,this.fullTimeExtent=null,this.hasLiveData=!1,this.interval=null,this.startField=null,this.timeReference=null,this.trackIdField=null,this.useTime=!0}readFullTimeExtent(e,r){if(!r.timeExtent||!Array.isArray(r.timeExtent)||2!==r.timeExtent.length)return null;const i=new Date(r.timeExtent[0]),l=new Date(r.timeExtent[1]);return new t({start:i,end:l})}writeFullTimeExtent(e,t){e&&o(e.start)&&o(e.end)?t.timeExtent=[e.start.getTime(),e.end.getTime()]:t.timeExtent=null}readInterval(e,t){return t.timeInterval&&t.timeIntervalUnits?new r({value:t.timeInterval,unit:i.fromJSON(t.timeIntervalUnits)}):t.defaultTimeInterval&&t.defaultTimeIntervalUnits?new r({value:t.defaultTimeInterval,unit:i.fromJSON(t.defaultTimeIntervalUnits)}):null}writeInterval(e,t){if(e){const r=e.toJSON();t.timeInterval=r.value,t.timeIntervalUnits=r.unit}else t.timeInterval=null,t.timeIntervalUnits=null}clone(){const{cumulative:e,endField:t,hasLiveData:r,interval:i,startField:l,timeReference:o,fullTimeExtent:s,trackIdField:a,useTime:m}=this;return new c({cumulative:e,endField:t,hasLiveData:r,interval:i,startField:l,timeReference:n(o),fullTimeExtent:n(s),trackIdField:a,useTime:m})}};e([s({type:Boolean,json:{read:{source:"exportOptions.timeDataCumulative"},write:{target:"exportOptions.timeDataCumulative"}}})],d.prototype,"cumulative",void 0),e([s({type:String,json:{read:{source:"endTimeField"},write:{target:"endTimeField",allowNull:!0}}})],d.prototype,"endField",void 0),e([s({type:t,json:{write:{enabled:!0,allowNull:!0}}})],d.prototype,"fullTimeExtent",void 0),e([a("fullTimeExtent",["timeExtent"])],d.prototype,"readFullTimeExtent",null),e([u("fullTimeExtent")],d.prototype,"writeFullTimeExtent",null),e([s({type:Boolean,json:{write:!0}})],d.prototype,"hasLiveData",void 0),e([s({type:r,json:{write:{enabled:!0,allowNull:!0}}})],d.prototype,"interval",void 0),e([a("interval",["timeInterval","timeIntervalUnits","defaultTimeInterval","defaultTimeIntervalUnits"])],d.prototype,"readInterval",null),e([u("interval")],d.prototype,"writeInterval",null),e([s({type:String,json:{read:{source:"startTimeField"},write:{target:"startTimeField",allowNull:!0}}})],d.prototype,"startField",void 0),e([s({type:p,json:{write:{enabled:!0,allowNull:!0}}})],d.prototype,"timeReference",void 0),e([s({type:String,json:{write:{enabled:!0,allowNull:!0}}})],d.prototype,"trackIdField",void 0),e([s({type:Boolean,json:{read:{source:"exportOptions.useTime"},write:{target:"exportOptions.useTime"}}})],d.prototype,"useTime",void 0),d=c=e([m("esri.layers.support.TimeInfo")],d);const v=d;export{v as default};
