/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import s from"../../request.js";import t from"../../core/Handles.js";import{JSONSupportMixin as r,JSONSupport as o}from"../../core/JSONSupport.js";import{clone as i}from"../../core/lang.js";import{a as n,j as p}from"../../chunks/maybe.js";import{on as m,sync as c}from"../../core/reactiveUtils.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import{r as l}from"../../chunks/reader.js";import{W as u,subclass as h}from"../../core/accessorSupport/decorators/subclass.js";import{p as j}from"../../chunks/persistable.js";import g from"../../core/Collection.js";import"../../chunks/Logger.js";import"../../core/Error.js";import"../../chunks/object.js";import f from"../../geometry/Polygon.js";import{canProjectWithoutEngine as d,projectPolygon as k}from"../../geometry/projection.js";import{f as y}from"../../chunks/persistableUrlUtils.js";import"../../config.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/string.js";import"../../core/promiseUtils.js";import"../../core/Accessor.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/ArrayPool.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/multiOriginJSONSupportUtils.js";import"../../chunks/uuid.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/writer.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../chunks/extentUtils.js";import"../../chunks/zmUtils.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/common.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/projectionEllipsoid.js";import"../../chunks/mat4.js";import"../../geometry/Multipoint.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../geometry/Polyline.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";var S;let w=S=class extends(r(g.ofType(f))){constructor(e){super(e)}clone(){return new S(this.items.map((e=>e.clone())))}write(e,s){return this.toJSON(s)}toJSON(e){const s=e?.layer?.spatialReference;return s?this.toArray().map((t=>{if(!s.equals(t.spatialReference)){if(!d(t.spatialReference,s))return e&&e.messages&&e.messages.push(new u("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const r=new f;k(t,r,s),t=r}const r=t.toJSON(e);return delete r.spatialReference,r})).filter((e=>null!=e)):(e?.messages&&e.messages.push(new u("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map((s=>s.toJSON(e))))}static fromJSON(e,s){const t=new S;return e.forEach((e=>t.add(f.fromJSON(e,s)))),t}};w=S=e([h("esri.layers.support.PolygonCollection")],w);const R=w;var b;let x=b=class extends o{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new R,this._geometriesSource=null,this._handles=new t}initialize(){this._handles.add(m((()=>this.geometries),"after-changes",(()=>this.geometries=this.geometries),c))}destroy(){this._handles.destroy()}readGeometries(e,s,t){this._geometriesSource={url:y(e,t),context:t}}async loadGeometries(e,t){if(n(this._geometriesSource))return;const{url:r,context:o}=this._geometriesSource,i=await s(r,{responseType:"json",signal:p(t,"signal")}),m=e.toJSON(),c=i.data.map((e=>({...e,spatialReference:m})));this.geometries=R.fromJSON(c,o),this._geometriesSource=null}clone(){return new b({geometries:i(this.geometries),spatialRelationship:this.spatialRelationship})}};e([a({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],x.prototype,"spatialRelationship",void 0),e([a({type:R,nonNullable:!0,json:{write:!0}}),j({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries"})],x.prototype,"geometries",void 0),e([l(["web-scene","portal-item"],"geometries")],x.prototype,"readGeometries",null),x=b=e([h("esri.layers.support.SceneFilter")],x);const N=x;export{N as default};
