/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import{substitute as e}from"../intl.js";import{a as s}from"../chunks/maybe.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"../chunks/ensureType.js";import{subclass as r}from"../core/accessorSupport/decorators/subclass.js";import a from"./Widget.js";import n from"./Histogram/HistogramViewModel.js";import{o}from"../chunks/widgetUtils.js";import{m as l}from"../chunks/messageBundle.js";import{t as d}from"../chunks/jsxFactory.js";import"../chunks/number.js";import"../chunks/jsonMap.js";import"../chunks/object.js";import"../chunks/locale.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/string.js";import"../chunks/messages.js";import"../core/Error.js";import"../core/promiseUtils.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../chunks/assets.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../chunks/tracking.js";import"../chunks/domUtils.js";import"../core/Evented.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/ArrayPool.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../core/Promise.js";import"../core/reactiveUtils.js";import"../chunks/uuid.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/projector.js";import"../chunks/jsxWidgetSupport.js";var h;let u=h=class extends a{constructor(t,e){super(t,e),this._bgFillId=`${this.id}-bg-fill`,this._containerNode=null,this._containerDimensions={width:0,height:0},this._defaultBarColor="#d8d8d8",this.barCreatedFunction=null,this.dataLines=null,this.dataLineCreatedFunction=null,this.dataLineUpdatedFunction=null,this.messages=null,this.viewModel=new n}get average(){return this.viewModel.average}set average(t){this.viewModel.average=t}get bins(){return this.viewModel.bins}set bins(t){this.viewModel.bins=t}get label(){return this.messages?.widgetLabel??""}set label(t){this._overrideIfSome("label",t)}get labelFormatFunction(){return this.viewModel.labelFormatFunction}set labelFormatFunction(t){this.viewModel.labelFormatFunction=t}set layout(t){"vertical"!==t&&(t="horizontal"),this._set("layout",t)}get max(){return this.viewModel.max}set max(t){this.viewModel.max=t}get min(){return this.viewModel.min}set min(t){this.viewModel.min=t}get state(){return this.viewModel.state}static fromHistogramResult(t){const{bins:e,maxValue:s,minValue:i}=t;return new h({bins:e,max:s,min:i})}render(){const{label:t,layout:e,state:s}=this,i=this.classes("esri-histogram","esri-widget","horizontal"===e?"esri-histogram--horizontal":"esri-histogram--vertical","disabled"===s?"esri-disabled":null);return d("div",{"aria-label":t,class:i,bind:this,afterCreate:this._afterContainerNodeCreate},"ready"===s?this.renderContent():null)}renderContent(){if(!this._containerNode)return;const t=this._bgFillId,e=`clip-path: url(#${t})`;return d("div",{class:"esri-histogram__content"},d("svg",{class:"esri-histogram__svg",xmlns:"http://www.w3.org/2000/svg"},d("defs",null,this.renderFillDefinition(t)),d("g",{style:e},this.renderBarsGroup()),this.renderLinesGroup()))}renderBarsGroup(){return d("g",{class:this.classes("esri-histogram__bars")},this.renderBars())}renderBars(){const{layout:t,viewModel:{binRange:e,range:s}}=this;if(!e||!s)return;const i=e/s,{width:r,height:a}=this._containerDimensions;if(0===a&&0===r)return;if(0===a&&0!==r)return void this.scheduleRender();const[n,o]="vertical"===t?[a*i,r]:[a,r*i];return this._getBarDimensions(n,o).map((([t,e],s)=>this.renderBar(s,t,e)))}renderBar(t,s,i){const{bins:r,layout:a,max:n,messages:o,viewModel:{range:l}}=this,{width:h,height:u}=this._containerDimensions,c=r.slice()[t],{count:m,maxValue:p,minValue:g}=c,b=n-p,[_,v]="vertical"===a?[0,b*(u/l)]:[h-i-b*(h/l),u-s],j=e(o.barLabel,{count:m,maxValue:p,minValue:g});return d("rect",{"aria-label":j,afterCreate:this._afterBarCreate,bind:this,class:"esri-histogram__bar","data-index":t,fill:this._defaultBarColor,height:s,role:"img","shape-rendering":"crispEdges","stroke-width":"0",width:i,x:_,y:v})}renderLinesGroup(){return d("g",{class:this.classes("esri-histogram__data-lines")},this.renderAverageLine(),this.renderCustomLines())}renderAverageLine(){const{average:t}=this;if(s(t))return;const e=[d("tspan",{class:this.classes("esri-histogram__average-symbol")},"xÌ„ "),d("tspan",{class:this.classes("esri-histogram__average-label")},this.labelFormatFunction?this.labelFormatFunction(t,"average"):t)];return d("g",{afterCreate:this._afterLinesSubgroupCreate,afterUpdate:this._afterLinesSubgroupUpdate,bind:this,class:this.classes("esri-histogram__data-lines-subgroup")},d("title",{key:"title"},t),this.renderLine(t,this.classes("esri-histogram__average-data-line")),this.renderLabel(t,e))}renderCustomLines(){if(this.dataLines&&this.dataLines.length)return this.dataLines.map((({value:t,label:e},s)=>this.renderLineSubgroup(s,t,String(e))))}renderLineSubgroup(t,e,s){return d("g",{afterCreate:this._afterLinesSubgroupCreate,afterUpdate:this._afterLinesSubgroupUpdate,bind:this,class:this.classes("esri-histogram__data-lines-subgroup"),"data-index":t},d("title",{key:"title"},e),this.renderLine(e),this.renderLabel(e,s))}renderLine(t,e){const[s,i,r,a]=this._getLinePosition(t);return d("line",{class:this.classes("esri-histogram__data-line",e),x1:s,x2:i,y1:r,y2:a,"shape-rendering":"crispEdges"})}renderLabel(t,e,s){const[i,r]=this._getLabelPosition(t);return d("text",{class:this.classes("esri-histogram__label",s),"text-anchor":"end",transform:"horizontal"===this.layout?"rotate(270)":null,x:i,y:r-2},e)}renderFillDefinition(t){const{width:e,height:s}=this._containerDimensions;return d("clipPath",{id:t},d("rect",{x:"0",y:"0",width:e,height:s}))}_afterContainerNodeCreate(t){this._containerNode=t,this.addHandles(o(t,(t=>{const{width:e,height:s}=t.contentRect;this._containerDimensions={width:e,height:s}})))}_afterBarCreate(t){if(this.barCreatedFunction){const e=t.dataset?parseInt(t.dataset.index,10):t.getAttribute("data-index")?parseInt(t.getAttribute("data-index"),10):null;this.barCreatedFunction(isNaN(e)?null:e,t)}}_afterLinesSubgroupCreate(t){if(this.dataLineCreatedFunction){const e=t.dataset?parseInt(t.dataset.index,10):t.getAttribute("data-index")?parseInt(t.getAttribute("data-index"),10):null,s=t.childNodes[0],i=t.childNodes[1]?t.childNodes[1]:null;this.dataLineCreatedFunction(s,i,isNaN(e)?null:e)}}_afterLinesSubgroupUpdate(t){if(this.dataLineUpdatedFunction){const e=t.dataset?parseInt(t.dataset.index,10):t.getAttribute("data-index")?parseInt(t.getAttribute("data-index"),10):null,s=t.childNodes[0],i=t.childNodes[1]?t.childNodes[1]:null;this.dataLineUpdatedFunction(s,i,isNaN(e)?null:e)}}_getBarDimensions(t,e){const{bins:s,layout:i}=this,r=s?s.map((t=>t.count)):[],a=Math.max.apply(Math,r);return r.map((s=>"vertical"===i?[t/r.length,0!==a?s/a*e:0]:[0!==a?s/a*t:0,e/r.length]))}_getLinePosition(t){const{layout:e,min:s,viewModel:{range:i}}=this,r=Math.round((t-s)/i*100)/100,{width:a,height:n}=this._containerDimensions,[o,l]=[r*a||1,n-r*n||1];return"vertical"===e?[0,"100%",l,l]:[o,o,"100%",0]}_getLabelPosition(t){const{layout:e,min:s,viewModel:{range:i}}=this,r=Math.round((t-s)/i*100)/100,{width:a,height:n}=this._containerDimensions;return"vertical"===e?[a,n-r*n]:[0,r*a]}};t([i()],u.prototype,"_bgFillId",void 0),t([i()],u.prototype,"_containerNode",void 0),t([i()],u.prototype,"_containerDimensions",void 0),t([i()],u.prototype,"_defaultBarColor",void 0),t([i()],u.prototype,"average",null),t([i()],u.prototype,"barCreatedFunction",void 0),t([i()],u.prototype,"dataLines",void 0),t([i()],u.prototype,"dataLineCreatedFunction",void 0),t([i()],u.prototype,"dataLineUpdatedFunction",void 0),t([i()],u.prototype,"label",null),t([i()],u.prototype,"labelFormatFunction",null),t([i({value:"horizontal"})],u.prototype,"layout",null),t([i()],u.prototype,"max",null),t([i(),l("esri/widgets/Histogram/t9n/Histogram")],u.prototype,"messages",void 0),t([i()],u.prototype,"min",null),t([i({readOnly:!0})],u.prototype,"state",null),t([i()],u.prototype,"viewModel",void 0),u=h=t([r("esri.widgets.Histogram")],u);const c=u;export{c as default};
