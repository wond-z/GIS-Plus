/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import{property as e}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"../chunks/ensureType.js";import{subclass as t}from"../core/accessorSupport/decorators/subclass.js";import o from"./Widget.js";import r from"./Compass/CompassViewModel.js";import{a as i}from"../chunks/accessibleHandler.js";import{m as c}from"../chunks/messageBundle.js";import{t as p}from"../chunks/jsxFactory.js";import"../chunks/widgetUtils.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/object.js";import"../chunks/maybe.js";import"../chunks/string.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../core/Error.js";import"../chunks/tracking.js";import"../intl.js";import"../chunks/number.js";import"../chunks/jsonMap.js";import"../chunks/locale.js";import"../chunks/messages.js";import"../core/promiseUtils.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../chunks/assets.js";import"../chunks/domUtils.js";import"../core/Evented.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/ArrayPool.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../core/Promise.js";import"../core/reactiveUtils.js";import"../chunks/uuid.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/projector.js";import"../chunks/jsxWidgetSupport.js";import"./support/GoTo.js";let n=class extends o{constructor(s,e){super(s,e),this.iconClass="esri-icon-locate-circled",this.messages=null,this.viewModel=new r}get goToOverride(){return this.viewModel.goToOverride}set goToOverride(s){this.viewModel.goToOverride=s}get label(){return this.messages?.widgetLabel??""}set label(s){this._overrideIfSome("label",s)}get view(){return this.viewModel.view}set view(s){this.viewModel.view=s}reset(){return this.viewModel.reset()}render(){const{orientation:s,state:e}=this.viewModel,t="disabled"===e,o="compass"==("rotation"===e?"rotation":"compass"),r=t?-1:0,i={"esri-disabled":t,"esri-interactive":!t},c={"esri-icon-compass":o,"esri-icon-dial":!o},{messages:n}=this;return p("div",{bind:this,class:this.classes("esri-compass esri-widget--button esri-widget",i),onclick:this._reset,onkeydown:this._reset,role:"button",tabIndex:r,"aria-label":n.reset,title:n.reset},p("span",{"aria-hidden":"true",class:this.classes("esri-compass__icon",c),styles:this._toRotationTransform(s)}),p("span",{class:"esri-icon-font-fallback-text"},n.reset))}_reset(){this.viewModel.reset()}_toRotationTransform(s){return{transform:`rotateZ(${s.z}deg)`}}};s([e()],n.prototype,"goToOverride",null),s([e()],n.prototype,"iconClass",void 0),s([e()],n.prototype,"label",null),s([e(),c("esri/widgets/Compass/t9n/Compass")],n.prototype,"messages",void 0),s([e()],n.prototype,"view",null),s([e({type:r})],n.prototype,"viewModel",void 0),s([i()],n.prototype,"_reset",null),n=s([t("esri.widgets.Compass")],n);const a=n;export{a as default};
