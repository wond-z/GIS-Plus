/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import{i as e,e as t}from"../../chunks/maybe.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/ensureType.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import r,{g as l}from"./BuildingNumericFilterViewModel.js";import{d as a,e as c}from"../../chunks/filterUtils.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../core/Error.js";import"../../chunks/tracking.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ArrayPool.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"../../core/Collection.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/collectionUtils.js";import"../../chunks/uuid.js";import"../../chunks/BuildingFilterBlock.js";import"../../core/JSONSupport.js";import"../../chunks/enumeration.js";import"../../chunks/jsonMap.js";import"../../chunks/utils2.js";import"../../symbols/edges/Edges3D.js";import"../../Color.js";import"../../chunks/colorUtils.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/common.js";import"../../chunks/screenUtils.js";import"../../chunks/materialUtils.js";import"../../chunks/opacityUtils.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";let n=class extends r{constructor(){super(...arguments),this._createdPhaseFieldName=null,this._demolishedPhaseFieldName=null,this._parseValueFromFilter=s=>{const e=this._createdPhaseFieldName,t=new RegExp(`${e}\\s*<=\\s*(\\d+)\\s*OR\\s*${e}\\s*IS\\s*NULL`,"gi"),i=this._demolishedPhaseFieldName,o=new RegExp(`${i}\\s*>\\s*(\\d+)\\s*OR\\s*${i}\\s*IS\\s*NULL`,"gi");for(const{filterExpression:e}of s.filterBlocks.items){const s=t.exec(e)??o.exec(e);if(s)return parseInt(s[1],10)}return null}}get filterExpressions(){if(!this.enabled)return{solid:null,xRay:null};const s=[],e=this._createdPhaseFieldName;e&&s.push(`(${e} <= ${this.value} OR ${e} IS NULL)`);const t=this._demolishedPhaseFieldName;t&&s.push(`(${t} > ${this.value} OR ${t} IS NULL)`);const i=s.join(" AND ");return{solid:i,xRay:i}}get _lastValue(){const s=this.allowedValues;return s.length>0?s[s.length-1]:0}_setup(){const s=[];this.layers.forEach((t=>{const i=a(t,"createdphase");e(i)&&(this._createdPhaseFieldName=i.fieldName,s.push(i));const o=a(t,"demolishedphase");e(o)&&(this._demolishedPhaseFieldName=o.fieldName,s.push(o))})),this._domainInfo=l(s);const i=this._valueBeforeReady;if(this._set("state","ready"),this._valueBeforeReady=null,this.allowedValues.length>0){const s=i??c(this.layers,this._parseValueFromFilter);this.select(t(s,this._lastValue))}else this.clear()}};s([i({readOnly:!0})],n.prototype,"filterExpressions",null),s([i()],n.prototype,"_createdPhaseFieldName",void 0),s([i()],n.prototype,"_demolishedPhaseFieldName",void 0),s([i({readOnly:!0})],n.prototype,"_lastValue",null),n=s([o("esri.widgets.BuildingExplorer.BuildingPhase")],n);const m=n;export{m as default};
