/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import{A as i}from"../chunks/ArrayPool.js";import s from"../core/Handles.js";import{d as t}from"../chunks/maybe.js";import{watch as r,initial as a}from"../core/reactiveUtils.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"../chunks/ensureType.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import"../core/promiseUtils.js";import"../chunks/object.js";import"../core/Error.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/string.js";import"../chunks/handleUtils.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/tracking.js";import"../chunks/metadata.js";const n={widthBreakpoint:{getValue(e){const i=e.viewSize[0],s=e.breakpoints,t=this.values;return i<=s.xsmall?t.xsmall:i<=s.small?t.small:i<=s.medium?t.medium:i<=s.large?t.large:t.xlarge},values:{xsmall:"xsmall",small:"small",medium:"medium",large:"large",xlarge:"xlarge"},valueToClassName:{xsmall:"esri-view-width-xsmall esri-view-width-less-than-small esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge",small:"esri-view-width-small esri-view-width-greater-than-xsmall esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge",medium:"esri-view-width-medium esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-less-than-large esri-view-width-less-than-xlarge",large:"esri-view-width-large esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-less-than-xlarge",xlarge:"esri-view-width-xlarge esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-greater-than-large"}},heightBreakpoint:{getValue(e){const i=e.viewSize[1],s=e.breakpoints,t=this.values;return i<=s.xsmall?t.xsmall:i<=s.small?t.small:i<=s.medium?t.medium:i<=s.large?t.large:t.xlarge},values:{xsmall:"xsmall",small:"small",medium:"medium",large:"large",xlarge:"xlarge"},valueToClassName:{xsmall:"esri-view-height-xsmall esri-view-height-less-than-small esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge",small:"esri-view-height-small esri-view-height-greater-than-xsmall esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge",medium:"esri-view-height-medium esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-less-than-large esri-view-height-less-than-xlarge",large:"esri-view-height-large esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-less-than-xlarge",xlarge:"esri-view-height-xlarge esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-greater-than-large"}},orientation:{getValue(e){const i=e.viewSize,s=i[0],t=i[1],r=this.values;return t>=s?r.portrait:r.landscape},values:{portrait:"portrait",landscape:"landscape"},valueToClassName:{portrait:"esri-view-orientation-portrait",landscape:"esri-view-orientation-landscape"}}},o={xsmall:544,small:768,medium:992,large:1200};function m(e,i){return i?n[e].valueToClassName[i].split(" "):[]}const g=g=>{let w=class extends g{constructor(...e){super(...e),this._breakpointsHandles=new s,this.orientation=null,this.widthBreakpoint=null,this.heightBreakpoint=null,this.breakpoints=o}initialize(){this._breakpointsHandles.add(r((()=>[this.breakpoints,this.size]),(()=>this._updateClassNames()),a))}destroy(){this.destroyed||(this._removeActiveClassNames(),this._breakpointsHandles=t(this._breakpointsHandles))}set breakpoints(e){if(e===this._get("breakpoints"))return;const i=function(e){const i=e;return i&&i.xsmall<i.small&&i.small<i.medium&&i.medium<i.large}(e);if(!i){const e=JSON.stringify(o,null,2);console.warn("provided breakpoints are not valid, using defaults:"+e)}e=i?e:o,this._set("breakpoints",{...e})}_updateClassNames(){if(!this.container)return;const e=i.acquire(),s=i.acquire();let t,r=!1;for(t in n){const i=this[t],a=n[t].getValue({viewSize:this.size,breakpoints:this.breakpoints});i!==a&&(r=!0,this[t]=a,m(t,i).forEach((e=>s.push(e))),m(t,a).forEach((i=>e.push(i))))}r&&(this._applyClassNameChanges(e,s),i.release(e),i.release(s))}_applyClassNameChanges(e,i){const s=this.container;s&&(i.forEach((e=>s.classList.remove(e))),e.forEach((e=>s.classList.add(e))))}_removeActiveClassNames(){const e=this.container;if(!e)return;let i;for(i in n)m(i,this[i]).forEach((i=>e.classList.remove(i)))}};return e([l()],w.prototype,"breakpoints",null),e([l()],w.prototype,"orientation",void 0),e([l()],w.prototype,"widthBreakpoint",void 0),e([l()],w.prototype,"heightBreakpoint",void 0),w=e([h("esri.views.BreakpointsOwner")],w),w};export{g as BreakpointsOwner};
