/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import e from"../Graphic.js";import i from"../Viewpoint.js";import s from"../core/Collection.js";import{C as o}from"../chunks/CollectionFlattener.js";import r from"../core/Error.js";import{h as n}from"../chunks/object.js";import a,{i as p}from"../core/Handles.js";import{L as l}from"../chunks/Logger.js";import{i as h,a as c,r as m,d as u,u as d}from"../chunks/maybe.js";import{c as g,throwIfAborted as y}from"../core/promiseUtils.js";import{watch as w,sync as f,initial as v,when as _,whenOnce as j,syncAndInitial as k}from"../core/reactiveUtils.js";import{c as b}from"../chunks/screenUtils.js";import{subclass as S,W as T}from"../core/accessorSupport/decorators/subclass.js";import{initialize as x}from"../core/workers/workers.js";import{property as V}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{s as M}from"../chunks/ensureType.js";import D,{b as R,p as C}from"../geometry/Extent.js";import L from"../geometry/Point.js";import{project as P,load as O,canProjectWithoutEngine as I,isLoaded as U}from"../geometry/projection.js";import{e as z}from"../geometry/SpatialReference.js";import E from"../layers/support/TileInfo.js";import{BreakpointsOwner as N}from"./BreakpointsOwner.js";import{DOMContainer as Z}from"./DOMContainer.js";import{e as F,D as G,r as A,a as q,i as B,b as H,g as K,m as W,B as $,I as Y,P as Q,S as X,c as J,d as tt,f as et,h as it,j as st,k as ot,l as rt,n as nt}from"../chunks/WebGLRequirements.js";import at from"./View.js";import pt from"./ViewAnimation.js";import"../geometry.js";import lt from"../core/Accessor.js";import{addFrameTask as ht}from"../core/scheduling.js";import{e as ct,p as mt}from"../chunks/unitBezier.js";import ut,{c as dt,a as gt,t as yt,s as wt,b as ft,d as vt,r as _t,e as jt,f as kt,g as bt,h as St,i as Tt}from"./2d/ViewState.js";import xt from"../layers/support/LOD.js";import{NumericIdentifiableMixin as Vt}from"../core/Identifiable.js";import{d as Mt,s as Dt,b as Rt,k as Ct}from"../chunks/vec2.js";import Lt,{p as Pt}from"../geometry/Polygon.js";import{a as Ot}from"../chunks/vec2f64.js";import"../chunks/TileStrategy.js";import{T as It}from"../chunks/TileInfoView.js";import"../chunks/TileKey2.js";import{I as Ut,a as zt,V as Et}from"../chunks/InputManager.js";import{T as Nt}from"../chunks/TileStore.js";import Zt from"../Color.js";import{i as Ft,a as Gt}from"../chunks/screenUtils2.js";import At from"./ui/DefaultUI.js";import qt from"../webmap/background/ColorBackground.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/get.js";import"../chunks/metadata.js";import"../chunks/ArrayPool.js";import"../chunks/tracking.js";import"../config.js";import"../chunks/string.js";import"../chunks/watch.js";import"../chunks/nextTick.js";import"../core/JSONSupport.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/reader.js";import"../chunks/writer.js";import"../layers/support/fieldUtils.js";import"../chunks/arcadeOnDemand.js";import"../geometry/Geometry.js";import"../geometry/support/webMercatorUtils.js";import"../chunks/Ellipsoid.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../chunks/jsonMap.js";import"../geometry/support/jsonUtils.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../chunks/enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../chunks/date.js";import"../chunks/number.js";import"../chunks/locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../chunks/chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../core/Evented.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../chunks/colorUtils.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/common.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils2.js";import"../symbols/edges/Edges3D.js";import"../chunks/materialUtils.js";import"../chunks/opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../chunks/lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/utils3.js";import"../chunks/colors.js";import"../chunks/symbolLayerUtils3D.js";import"../chunks/aaBoundingBox.js";import"../chunks/aaBoundingRect.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"../chunks/persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../portal/Portal.js";import"../kernel.js";import"../request.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"../chunks/Thumbnail.js";import"../chunks/calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../Camera.js";import"../chunks/Cyclical.js";import"../core/workers/Connection.js";import"../chunks/Queue.js";import"../core/workers/RemoteClient.js";import"../chunks/assets.js";import"../intl.js";import"../chunks/messages.js";import"../chunks/unitUtils.js";import"../chunks/projectionEllipsoid.js";import"../chunks/mat4.js";import"../chunks/pe.js";import"../chunks/geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../chunks/zscale.js";import"../chunks/TileKey.js";import"../chunks/domUtils.js";import"../chunks/WatchUpdatingTracking.js";import"../chunks/projector.js";import"../chunks/widgetUtils.js";import"../widgets/Popup.js";import"../chunks/throttle.js";import"../widgets/Feature.js";import"../widgets/Widget.js";import"../chunks/uuid.js";import"../chunks/jsxWidgetSupport.js";import"../widgets/Attachments.js";import"../chunks/unitFormatUtils.js";import"../chunks/byteSizeEstimations.js";import"../widgets/Attachments/AttachmentsViewModel.js";import"../rest/query/support/AttachmentInfo.js";import"../rest/support/AttachmentQuery.js";import"../chunks/messageBundle.js";import"../chunks/jsxFactory.js";import"../widgets/Feature/FeatureViewModel.js";import"../core/HandleOwner.js";import"../chunks/DataLayerSource.js";import"../layers/support/Field.js";import"../chunks/domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"../chunks/fieldType.js";import"../chunks/executeQueryJSON.js";import"../chunks/utils4.js";import"../chunks/query.js";import"../geometry/support/normalizeUtils.js";import"../chunks/normalizeUtilsCommon.js";import"../chunks/simplify.js";import"../chunks/utils5.js";import"../chunks/pbfQueryUtils.js";import"../chunks/pbf.js";import"../chunks/OptimizedFeature.js";import"../chunks/OptimizedFeatureSet.js";import"../chunks/queryZScale.js";import"../rest/support/FeatureSet.js";import"../rest/support/Query.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../chunks/FullTextSearch.js";import"../rest/support/StatisticDefinition.js";import"../chunks/featureConversionUtils.js";import"../rest/support/RelationshipQuery.js";import"../rest/support/TopFeaturesQuery.js";import"../rest/support/TopFilter.js";import"../layers/FeatureLayer.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../renderers/mixins/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"../chunks/LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"../chunks/sizeVariableUtils.js";import"../chunks/visualVariableUtils.js";import"../chunks/compilerUtils.js";import"../chunks/lengthUtils.js";import"../renderers/support/ClassBreakInfo.js";import"../chunks/commonProperties2.js";import"../symbols/support/jsonUtils.js";import"../chunks/symbolConversion.js";import"../renderers/DictionaryRenderer.js";import"../chunks/DictionaryLoader.js";import"../chunks/LRUCache.js";import"../chunks/MemCache.js";import"../renderers/DotDensityRenderer.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/HeatmapRenderer.js";import"../renderers/support/HeatmapColorStop.js";import"../chunks/heatmapUtils.js";import"../chunks/vec4f64.js";import"../renderers/PieChartRenderer.js";import"../renderers/SimpleRenderer.js";import"../renderers/UniqueValueRenderer.js";import"../chunks/diffUtils.js";import"../renderers/support/UniqueValue.js";import"../renderers/support/UniqueValueClass.js";import"../renderers/support/UniqueValueGroup.js";import"../renderers/support/UniqueValueInfo.js";import"../chunks/styleUtils2.js";import"../renderers/support/jsonUtils.js";import"../chunks/MultiOriginJSONSupport.js";import"../core/sql.js";import"../form/FormTemplate.js";import"../form/ExpressionInfo.js";import"../form/elements/GroupElement.js";import"../form/elements/Element.js";import"../form/support/elements.js";import"../form/elements/FieldElement.js";import"../form/elements/support/inputs.js";import"../form/elements/inputs/BarcodeScannerInput.js";import"../form/elements/inputs/TextInput.js";import"../form/elements/inputs/Input.js";import"../form/elements/inputs/ComboBoxInput.js";import"../form/elements/inputs/DateTimePickerInput.js";import"../form/elements/inputs/RadioButtonsInput.js";import"../form/elements/inputs/SwitchInput.js";import"../form/elements/inputs/TextAreaInput.js";import"../form/elements/inputs/TextBoxInput.js";import"../layers/Layer.js";import"../chunks/editsZScale.js";import"../layers/mixins/APIKeyMixin.js";import"../chunks/ArcGISService.js";import"../chunks/arcgisLayerUrl.js";import"../layers/mixins/BlendLayer.js";import"../chunks/jsonUtils.js";import"../chunks/parser.js";import"../chunks/mat4f32.js";import"../chunks/_commonjsHelpers.js";import"../layers/mixins/CustomParametersMixin.js";import"../chunks/EditBusLayer.js";import"../layers/mixins/FeatureEffectLayer.js";import"../layers/support/FeatureEffect.js";import"../layers/support/FeatureFilter.js";import"../layers/mixins/FeatureLayerBase.js";import"../geometry/HeightModelInfo.js";import"../chunks/commonProperties.js";import"../support/timeUtils.js";import"../chunks/ElevationInfo.js";import"../chunks/unitConversionUtils.js";import"../layers/support/GeometryFieldsInfo.js";import"../layers/support/LayerFloorInfo.js";import"../layers/support/Relationship.js";import"../layers/mixins/FeatureReductionLayer.js";import"../layers/support/AggregateField.js";import"../layers/support/ExpressionInfo.js";import"../chunks/FeatureReduction.js";import"../layers/support/FeatureReductionBinning.js";import"../layers/support/LabelClass.js";import"../chunks/labelUtils.js";import"../chunks/defaults.js";import"../chunks/defaultsJSON.js";import"../layers/support/FeatureReductionCluster.js";import"../layers/support/FeatureReductionSelection.js";import"../chunks/clusterUtils.js";import"../chunks/OperationalLayer.js";import"../layers/mixins/OrderedLayer.js";import"../layers/mixins/PortalLayer.js";import"../chunks/asyncUtils.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../layers/mixins/PublishableLayer.js";import"../layers/support/PublishingInfo.js";import"../layers/mixins/RefreshableLayer.js";import"../layers/mixins/ScaleRangeLayer.js";import"../layers/mixins/TemporalLayer.js";import"../TimeInterval.js";import"../layers/support/TimeInfo.js";import"../layers/support/TimeReference.js";import"../layers/support/FeatureTemplate.js";import"../layers/support/FeatureType.js";import"../chunks/fieldProperties.js";import"../layers/support/FieldsIndex.js";import"../chunks/labelingInfo.js";import"../chunks/versionUtils.js";import"../chunks/styleUtils.js";import"../support/popupUtils.js";import"../chunks/Heading.js";import"../widgets/support/widget.js";import"../chunks/accessibleHandler.js";import"../chunks/vmEvent.js";import"../chunks/themeUtils.js";import"../chunks/uriUtils.js";import"../chunks/utils15.js";import"../chunks/numberUtils.js";import"../chunks/utils6.js";import"../chunks/ItemCache.js";import"../symbols/support/cimSymbolUtils.js";import"../chunks/utils7.js";import"../chunks/chartUtils.js";import"../chunks/Spinner.js";import"../widgets/Spinner/SpinnerViewModel.js";import"../chunks/AnchorElementViewModel.js";import"../widgets/Popup/PopupViewModel.js";import"../symbols/support/symbolUtils.js";import"../chunks/colorUtils2.js";import"../chunks/mat2df32.js";import"../chunks/mat2d.js";import"../chunks/layerViewUtils.js";import"../chunks/actions.js";import"../widgets/support/GoTo.js";import"../chunks/ObservableValue.js";import"./input/gamepad/GamepadInputDevice.js";import"../chunks/capabilities2.js";import"../chunks/context-util.js";import"../Map.js";import"../Basemap.js";import"../chunks/loadAll.js";import"../chunks/writeUtils.js";import"../chunks/layerUtils.js";import"../Ground.js";import"../chunks/debugFlags.js";import"../chunks/editableLayers.js";import"../chunks/basemapUtils.js";import"../chunks/collectionUtils2.js";import"../support/LayersMixin.js";import"../support/TablesMixin.js";import"../chunks/GraphicsCollection.js";import"./BasemapView.js";import"./Magnifier.js";import"../chunks/Scheduler.js";import"../chunks/debugFlags2.js";import"../chunks/ViewEvents.js";import"../chunks/IViewEvents.js";import"../chunks/interfaces3.js";import"./input/Input.js";import"./input/gamepad/GamepadSettings.js";import"./navigation/Navigation.js";import"./navigation/gamepad/GamepadSettings.js";import"../chunks/heightModelInfoUtils.js";import"../chunks/ViewingMode.js";import"../chunks/mat2df64.js";import"../chunks/mat3.js";import"../chunks/mat3f32.js";import"../chunks/vec2f32.js";import"../chunks/QueueProcessor.js";import"../chunks/quickselect.js";import"./ui/UI.js";import"../widgets/Attribution.js";import"../widgets/Attribution/AttributionViewModel.js";import"../widgets/Compass.js";import"../widgets/Compass/CompassViewModel.js";import"../widgets/NavigationToggle.js";import"../widgets/NavigationToggle/NavigationToggleViewModel.js";import"../widgets/Zoom.js";import"../widgets/Zoom/ZoomViewModel.js";class Bt{constructor(t,e,i,s){const o=t.targetGeometry,r=e.targetGeometry;s?"string"==typeof s&&(s=mt(s)||ct.ease):s=ct.ease,this.easing=s,this.duration=i,this.sCenterX=o.x,this.sCenterY=o.y,this.sScale=t.scale,this.sRotation=t.rotation,this.tCenterX=r.x,this.tCenterY=r.y,this.tScale=e.scale,this.tRotation=e.rotation,this.dCenterX=this.tCenterX-this.sCenterX,this.dCenterY=this.tCenterY-this.sCenterY,this.dScale=this.tScale-this.sScale,this.dRotation=this.tRotation-this.sRotation,this.dRotation>180?this.dRotation-=360:this.dRotation<-180&&(this.dRotation+=360)}applyRatio(t,e){const i=this.easing(e);let s,o,r,n;e>=1?(s=this.tCenterX,o=this.tCenterY,r=this.tRotation,n=this.tScale):(s=this.sCenterX+i*this.dCenterX,o=this.sCenterY+i*this.dCenterY,r=this.sRotation+i*this.dRotation,n=this.sScale+i*this.dScale),t.targetGeometry.x=s,t.targetGeometry.y=o,t.scale=n,t.rotation=r}}let Ht=class extends lt{constructor(t){super(t),this.duration=200,this.transition=null,this.easing=ct.ease,this.view=null,this.viewpoint=null,this.viewpoint=new i({targetGeometry:new L,scale:0,rotation:0}),this._updateTask=ht({postRender:this._postRender.bind(this)}),this._updateTask.pause()}destroy(){this._updateTask.remove(),this._updateTask=null}animate(t,e,i){this.stop();const s=this.viewpoint;dt(s,e),this.transition=new Bt(this.viewpoint,t.target,i&&i.duration||this.duration,i&&i.easing||this.easing);const o=()=>{this.animation===t&&this._updateTask&&("finished"===t.state&&(this.transition.applyRatio(this.viewpoint,1),this.view.state&&(this.view.state.viewpoint=this.viewpoint.clone())),this.animation=null,this.updateFunction=null)};return t.when(o,o),this._startTime=performance.now(),this._updateTask.resume(),this.animation=t,t}animateContinous(t,e){this.stop(),this.updateFunction=e,this.viewpoint=t;const i=new pt({target:t.clone()}),s=()=>{this.animation===i&&this._updateTask&&(this.animation=null,this.updateFunction=null)};return i.when(s,s),this._startTime=performance.now(),this._updateTask.resume(),this.animation=i,i}stop(){this.animation&&(this.animation.stop(),this.animation=null,this.updateFunction=null)}_postRender(t){const e=this.animation;if(e&&e.state!==pt.State.STOPPED){if(this.updateFunction)this.updateFunction(this.viewpoint,t.deltaTime);else{const t=(performance.now()-this._startTime)/this.transition.duration,e=t>=1;this.transition.applyRatio(this.viewpoint,t),e&&this.animation.finish()}this.view.state&&(this.view.state.viewpoint=this.viewpoint.clone())}else this._updateTask.pause()}};t([V()],Ht.prototype,"animation",void 0),t([V()],Ht.prototype,"duration",void 0),t([V()],Ht.prototype,"transition",void 0),t([V()],Ht.prototype,"easing",void 0),t([V()],Ht.prototype,"view",void 0),t([V()],Ht.prototype,"viewpoint",void 0),Ht=t([S("esri.views.2d.AnimationManager")],Ht);const Kt=Ht;class Wt{constructor(t){this.view=t,this._frameTaskHandle=null,this._updateRequested=!1,this.stationary=!0,this.animationInProgress=!1,this.prepare=()=>{this._updateParameters.state=this.view.state,this._updateParameters.stationary=this.view.stationary,this._updateParameters.pixelRatio=window.devicePixelRatio,this._updateParameters.renderingOptions=this.view.renderingOptions},this.update=()=>{this._updateRequested=!1;const{basemapView:t,graphicsView:e,labelManager:i,layerViews:s,state:{id:o}}=this.view;t.baseLayerViews.forEach(this._updateLayerView,this),s.forEach(this._updateLayerView,this),t.referenceLayerViews.forEach(this._updateLayerView,this),h(i)&&(i.lastUpdateId!==o&&(i.viewChange(),i.lastUpdateId=o),i.updateRequested&&i.processUpdate(this._updateParameters)),h(e)&&(e.lastUpdateId!==o&&(e.viewChange(),e.lastUpdateId=o),e.updateRequested&&e.processUpdate(this._updateParameters)),this.view.graphicsTileStore.setViewState(this._updateParameters.state),this.animationInProgress||this._updateRequested||this._frameTaskHandle.pause()}}destroy(){this.stop()}start(){if(this._frameTaskHandle)return;const t=this.view;this.stationary=t.stationary,this._updateParameters={state:t.state,pixelRatio:window.devicePixelRatio,stationary:this.stationary,renderingOptions:t.renderingOptions},this._stationaryHandle=w((()=>t.stationary),(t=>{this.stationary=t,this.requestFrame()})),this._frameTaskHandle=ht(this),this.requestUpdate()}stop(){this._frameTaskHandle&&(this._updateRequested=!1,this._stationaryHandle.remove(),this._frameTaskHandle.remove(),this._updateParameters=this._stationaryHandle=this._frameTaskHandle=null,this.stationary=!0,this.animationInProgress=!1)}requestUpdate(){this._updateRequested||(this._updateRequested=!0,this.requestFrame())}requestFrame(){this._frameTaskHandle&&this._frameTaskHandle.resume()}_updateLayerView(t){const e=this.view.state,i=t.lastUpdateId;null!=i&&(this.stationary||t.moving)||(t.moving=!0,t.moveStart()),i!==e.id&&t.viewChange(),this.stationary&&t.moving&&(t.moving=!1,t.moveEnd()),t.lastUpdateId=e.id,t.updateRequested&&t.processUpdate(this._updateParameters),"layerViews"in t&&t.layerViews.forEach(this._updateLayerView,this)}}function $t(){return Promise.all([import("../chunks/webglDeps.js"),import("../chunks/mapViewDeps.js")])}const Yt=()=>$t().then((()=>import("../chunks/TileLayerView2D.js"))),Qt=()=>$t().then((()=>import("../chunks/FeatureLayerView2D.js"))),Xt={"base-dynamic":()=>$t().then((()=>import("../chunks/BaseDynamicLayerView2D.js"))),"base-tile":Yt,"bing-maps":Yt,csv:Qt,"geo-rss":()=>$t().then((()=>import("../chunks/GeoRSSLayerView2D.js"))),feature:Qt,geojson:Qt,graphics:()=>$t().then((()=>import("../chunks/GraphicsLayerView2D.js"))),group:()=>$t().then((()=>import("../chunks/GroupLayerView2D.js"))),imagery:()=>$t().then((()=>import("../chunks/ImageryLayerView2D.js"))),"imagery-tile":()=>$t().then((()=>import("../chunks/ImageryTileLayerView2D.js"))),kml:()=>$t().then((()=>import("../chunks/KMLLayerView2D.js"))),"map-image":()=>$t().then((()=>import("../chunks/MapImageLayerView2D.js"))),"map-notes":()=>$t().then((()=>import("../chunks/MapNotesLayerView2D.js"))),media:()=>$t().then((()=>import("../chunks/MediaLayerView2D.js"))),"ogc-feature":()=>$t().then((()=>import("../chunks/OGCFeatureLayerView2D.js"))),"open-street-map":Yt,"oriented-imagery":Qt,route:()=>$t().then((()=>import("../chunks/RouteLayerView2D.js"))),stream:()=>$t().then((()=>import("../chunks/StreamLayerView2D.js"))),"subtype-group":()=>$t().then((()=>import("../chunks/SubtypeGroupLayerView2D.js"))),tile:Yt,"vector-tile":()=>$t().then((()=>import("../chunks/VectorTileLayerView2D.js"))),wcs:()=>$t().then((()=>import("../chunks/ImageryTileLayerView2D.js"))),"web-tile":Yt,wfs:Qt,wms:()=>$t().then((()=>import("../chunks/WMSLayerView2D.js"))),wmts:()=>$t().then((()=>import("../chunks/WMTSLayerView2D.js"))),"line-of-sight":null,"base-elevation":null,"building-scene":null,dimension:null,elevation:null,"integrated-mesh":null,"point-cloud":null,voxel:null,scene:null,unknown:null,unsupported:null};var Jt;let te=Jt=class extends(Vt(lt)){constructor(t){super(t),this.geometry=null,this.spatialReference=null}get normalizedGeometry(){if(c(this.geometry)||!this.spatialReference)return null;if(!this.spatialReference.equals(this.geometry.spatialReference))try{return P(this.geometry,this.spatialReference)}catch(t){return l.getLogger(this.declaredClass).error("#constraints.geometry","could not project the geometry to the view's spatial reference",{geometry:this.geometry,spatialReference:this.spatialReference,error:t}),null}return this.geometry}constrain(t,e){if(c(this.normalizedGeometry))return t;const i=t.targetGeometry;if("extent"===this.normalizedGeometry.type?R(this.normalizedGeometry,i):C(this.normalizedGeometry,i))return t;const{coordinate:s}=function(t,e){const{spatialReference:i}=e,s=[e.x,e.y];let o=Number.POSITIVE_INFINITY,r=0,n=0;const a=[0,0],p="extent"===t.type?[[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]]]:t.rings;for(const t of p)for(let e=0;e<t.length-1;e++){Pt(a,s,t,e);const i=Mt(s,a);i<o&&(o=i,r=a[0],n=a[1])}return{coordinate:new L({x:r,y:n,spatialReference:i}),distance:o}}(this.normalizedGeometry,i);return s?(t.targetGeometry=s,t):t}clone(){return new Jt({geometry:this.geometry?.clone(),spatialReference:this.spatialReference?.clone()})}};var ee;t([V({constructOnly:!0})],te.prototype,"geometry",void 0),t([V({readOnly:!0})],te.prototype,"normalizedGeometry",null),t([V({constructOnly:!0})],te.prototype,"spatialReference",void 0),te=Jt=t([S("esri.views.2d.constraints.GeometryConstraint")],te);let ie=ee=class extends(Vt(lt)){constructor(){super(...arguments),this.enabled=!0,this.rotationEnabled=!0}constrain(t,e){return this.enabled&&e?(this.rotationEnabled||(t.rotation=e.rotation),t):t}clone(){return new ee({enabled:this.enabled,rotationEnabled:this.rotationEnabled})}};t([V()],ie.prototype,"enabled",void 0),t([V()],ie.prototype,"rotationEnabled",void 0),ie=ee=t([S("esri.views.2d.constraints.RotationConstraint")],ie);const se=ie;var oe;let re=oe=class extends(Vt(lt)){constructor(t){super(t),this._lodByScale={},this._scales=[],this.effectiveLODs=null,this.effectiveMinZoom=-1,this.effectiveMaxZoom=-1,this.effectiveMinScale=0,this.effectiveMaxScale=0,this.lods=null,this.minZoom=-1,this.maxZoom=-1,this.minScale=0,this.maxScale=0,this.snapToZoom=!0}initialize(){let t,{lods:e,minScale:i,maxScale:s,minZoom:o,maxZoom:r}=this,n=-1,a=-1,p=!1,l=!1;if(0!==i&&0!==s&&i<s&&([i,s]=[s,i]),!e||!e.length)return this._set("effectiveMinScale",i),void this._set("effectiveMaxScale",s);e=e.map((t=>t.clone())),e.sort(((t,e)=>e.scale-t.scale)),e.forEach(((t,e)=>t.level=e));for(const o of e)!p&&i>0&&i>=o.scale&&(n=o.level,p=!0),!l&&s>0&&s>=o.scale&&(a=t?t.level:-1,l=!0),t=o;-1===o&&(o=0===i?0:n),-1===r&&(r=0===s?e.length-1:a),o=Math.max(o,0),o=Math.min(o,e.length-1),r=Math.max(r,0),r=Math.min(r,e.length-1),o>r&&([o,r]=[r,o]),i=e[o].scale,s=e[r].scale,e.splice(0,o),e.splice(r-o+1,e.length),e.forEach(((t,e)=>{this._lodByScale[t.scale]=t,this._scales[e]=t.scale})),this._set("effectiveLODs",e),this._set("effectiveMinZoom",o),this._set("effectiveMaxZoom",r),this._set("effectiveMinScale",i),this._set("effectiveMaxScale",s)}constrain(t,e){if(e&&t.scale===e.scale)return t;const i=this.effectiveMinScale,s=this.effectiveMaxScale,o=t.targetGeometry,r=e&&e.targetGeometry,n=0!==s&&t.scale<s,a=0!==i&&t.scale>i;if(n||a){const n=a?i:s;if(e&&r){const i=(n-e.scale)/(t.scale-e.scale);o.x=r.x+(o.x-r.x)*i,o.y=r.y+(o.y-r.y)*i}t.scale=n}return this.snapToZoom&&this.effectiveLODs&&(t.scale=this._getClosestScale(t.scale)),t}fit(t){if(!this.effectiveLODs||!this.snapToZoom)return this.constrain(t,null);const e=this.scaleToZoom(t.scale),i=Math.abs(e-Math.floor(e));return t.scale=this.zoomToScale(i>.99?Math.round(e):Math.floor(e)),t}zoomToScale(t){if(!this.effectiveLODs)return 0;t-=this.effectiveMinZoom,t=Math.max(0,t);const e=this._scales;if(t<=0)return e[0];if(t>=e.length)return e[e.length-1];const i=Math.round(t-.5),s=Math.round(t);return e[s]+(s-t)*(e[i]-e[s])}scaleToZoom(t){if(!this.effectiveLODs)return-1;const e=this._scales;let i,s;if(t>=e[0])return this.effectiveMinZoom;if(t<=e[e.length-1])return this.effectiveMaxZoom;for(let o=0;o<e.length-1;o++){if(i=e[o],s=e[o+1],s===t)return o+this.effectiveMinZoom+1;if(i>t&&s<t)return o+this.effectiveMinZoom+1-(t-s)/(i-s)}return-1}snapToClosestScale(t){if(!this.effectiveLODs)return t;const e=this.scaleToZoom(t);return this.zoomToScale(Math.round(e))}snapToNextScale(t,e=.5){if(!this.effectiveLODs)return t*e;const i=Math.round(this.scaleToZoom(t));return this.zoomToScale(i+1)}snapToPreviousScale(t,e=2){if(!this.effectiveLODs)return t*e;const i=Math.round(this.scaleToZoom(t));return this.zoomToScale(i-1)}clone(){return new oe({lods:this.lods,minZoom:this.minZoom,maxZoom:this.maxZoom,minScale:this.minScale,maxScale:this.maxScale})}_getClosestScale(t){return this._lodByScale[t]||(t=this._scales.reduce(((e,i)=>Math.abs(i-t)<=Math.abs(e-t)?i:e),this._scales[0])),this._lodByScale[t].scale}};t([V({readOnly:!0})],re.prototype,"effectiveLODs",void 0),t([V({readOnly:!0})],re.prototype,"effectiveMinZoom",void 0),t([V({readOnly:!0})],re.prototype,"effectiveMaxZoom",void 0),t([V({readOnly:!0})],re.prototype,"effectiveMinScale",void 0),t([V({readOnly:!0})],re.prototype,"effectiveMaxScale",void 0),t([V()],re.prototype,"lods",void 0),t([V()],re.prototype,"minZoom",void 0),t([V()],re.prototype,"maxZoom",void 0),t([V()],re.prototype,"minScale",void 0),t([V()],re.prototype,"maxScale",void 0),t([V()],re.prototype,"snapToZoom",void 0),re=oe=t([S("esri.views.2d.constraints.ZoomConstraint")],re);const ne=re,ae={base:null,key:"type",typeMap:{extent:D,polygon:Lt}};let pe=class extends lt{constructor(t){super(t),this.lods=null,this.minScale=0,this.maxScale=0,this.minZoom=-1,this.maxZoom=-1,this.rotationEnabled=!0,this.snapToZoom=!0}destroy(){this.view=null}get effectiveLODs(){return this._zoom.effectiveLODs}get effectiveMinScale(){return this._zoom.effectiveMinScale}get effectiveMaxScale(){return this._zoom.effectiveMaxScale}get effectiveMinZoom(){return this._zoom.effectiveMinZoom}get effectiveMaxZoom(){return this._zoom.effectiveMaxZoom}set geometry(t){t?this._set("geometry",t):this._set("geometry",null)}get version(){return`${this._zoom?.uid}/${this._rotation?.uid}/${this._geometry?.uid}`}get _defaultLODs(){const t=this.view?.defaultsFromMap?.tileInfo,e=this.view?.spatialReference;return t&&e&&t.spatialReference.equals(e)?t.lods:null}get _geometry(){return new te({geometry:this.geometry,spatialReference:this.view?.spatialReference})}get _rotation(){return new se({rotationEnabled:this.rotationEnabled})}get _zoom(){const t=this._get("_zoom"),e=this.lods||this._defaultLODs,i=this.minZoom,s=this.maxZoom,o=this.minScale,r=this.maxScale,n=this.snapToZoom;return t&&t.lods===e&&t.minZoom===i&&t.maxZoom===s&&t.minScale===o&&t.maxScale===r&&t.snapToZoom===n?t:new ne({lods:e,minZoom:i,maxZoom:s,minScale:o,maxScale:r,snapToZoom:n})}canZoomInTo(t){const e=this.effectiveMaxScale;return 0===e||t>=e}canZoomOutTo(t){const e=this.effectiveMinScale;return 0===e||t<=e}constrain(t,e){return this._zoom.constrain(t,e),this._rotation.constrain(t,e),this._geometry.constrain(t,e),t}constrainByGeometry(t){return this._geometry.constrain(t)}fit(t){return this._zoom.fit(t)}zoomToScale(t){return this._zoom.zoomToScale(t)}scaleToZoom(t){return this._zoom.scaleToZoom(t)}snapScale(t){return this._zoom.snapToClosestScale(t)}snapToNextScale(t){return this._zoom.snapToNextScale(t)}snapToPreviousScale(t){return this._zoom.snapToPreviousScale(t)}};t([V({readOnly:!0})],pe.prototype,"effectiveLODs",null),t([V({readOnly:!0})],pe.prototype,"effectiveMinScale",null),t([V({readOnly:!0})],pe.prototype,"effectiveMaxScale",null),t([V({readOnly:!0})],pe.prototype,"effectiveMinZoom",null),t([V({readOnly:!0})],pe.prototype,"effectiveMaxZoom",null),t([V({types:ae,value:null})],pe.prototype,"geometry",null),t([V({type:[xt]})],pe.prototype,"lods",void 0),t([V()],pe.prototype,"minScale",void 0),t([V()],pe.prototype,"maxScale",void 0),t([V()],pe.prototype,"minZoom",void 0),t([V()],pe.prototype,"maxZoom",void 0),t([V()],pe.prototype,"rotationEnabled",void 0),t([V()],pe.prototype,"snapToZoom",void 0),t([V()],pe.prototype,"view",void 0),t([V({readOnly:!0})],pe.prototype,"version",null),t([V()],pe.prototype,"_defaultLODs",null),t([V({type:te})],pe.prototype,"_geometry",null),t([V({type:se})],pe.prototype,"_rotation",null),t([V({readOnly:!0,type:ne})],pe.prototype,"_zoom",null),pe=t([S("esri.views.2d.MapViewConstraints")],pe);const le=pe;var he,ce;let me=he=class extends lt{constructor(){super(...arguments),this.left=0,this.top=0,this.right=0,this.bottom=0}clone(){return new he({left:this.left,top:this.top,right:this.right,bottom:this.bottom})}};t([V()],me.prototype,"left",void 0),t([V()],me.prototype,"top",void 0),t([V()],me.prototype,"right",void 0),t([V()],me.prototype,"bottom",void 0),me=he=t([S("esri.views.2d.PaddedViewState.Padding")],me);let ue=ce=class extends ut{constructor(...t){super(...t),this.paddedViewState=new ut,this._updateContent=(()=>{const t=Ot();return()=>{const e=this._get("size"),i=this._get("padding");if(!e||!i)return;const s=this.paddedViewState;Dt(t,i.left+i.right,i.top+i.bottom),Rt(t,e,t),Ct(s.size,t);const o=s.viewpoint;o&&(this.viewpoint=o)}})(),this.addHandles(w((()=>[this.size,this.padding]),(()=>this._updateContent()),f)),this.padding=new me,this.size=[0,0]}set padding(t){this._set("padding",t||new me)}set viewpoint(t){if(t){const e=t.clone();this.paddedViewState.viewpoint=t,gt(e,t,this._get("size"),this._get("padding"));const i=this._viewpoint2D,s=e.targetGeometry;i.center[0]=s.x,i.center[1]=s.y,i.rotation=e.rotation,i.scale=e.scale,i.spatialReference=s.spatialReference,this._update()}}clone(){return new ce({padding:this.padding.clone(),size:this.size.slice(),viewpoint:this.paddedViewState.viewpoint.clone(),pixelRatio:this.pixelRatio})}};t([V()],ue.prototype,"paddedViewState",void 0),t([V({type:me})],ue.prototype,"padding",null),t([V()],ue.prototype,"viewpoint",null),ue=ce=t([S("esri.views.2d.PaddedViewState")],ue);const de=ue;class ge extends Ut{constructor(t,e){super(!0),this._view=t,this.registerIncoming("double-click",e,(t=>this._handleDoubleClick(t,e)))}_handleDoubleClick(t,e){F(t.data,"primary")&&(t.stopPropagation(),e?this._view.mapViewNavigation.zoomOut([t.data.x,t.data.y]):this._view.mapViewNavigation.zoomIn([t.data.x,t.data.y]))}}class ye extends Ut{constructor(t,e,i){super(!0),this.view=t,this.pointerType=e,this.registerIncoming("double-tap-drag",i,(t=>this._handleDoubleTapDrag(t)))}_handleDoubleTapDrag(t){const{data:e}=t,{pointerType:i}=e;if(i!==this.pointerType)return;t.stopPropagation();const{action:s,delta:o}=e,{view:r}=this,{mapViewNavigation:n}=r;switch(s){case"begin":{const{scale:t}=r;this._startScale=t,this._currentScale=t,this._previousDelta=o,n.begin();break}case"update":{if(this._previousDelta.y===o.y)return;this._previousDelta=o;const t=1.015**o.y,e=this._startScale*t,i=e/this._currentScale;n.setViewpointImmediate(i),this._currentScale=e;break}case"end":{const{constraints:t}=r,{effectiveLODs:e,snapToZoom:i}=t;if(!i||!e)return void n.end();const s=t.snapScale(this._currentScale),a=(o.y>0?Math.max(s,t.snapToPreviousScale(this._startScale)):Math.min(s,t.snapToNextScale(this._startScale)))/this._currentScale;n.zoom(a);break}}}}class we extends Ut{constructor(t,e,i){super(!0),this.view=t,this.pointerAction=e,this.registerIncoming("drag",i,(t=>this._handleDrag(t))),this.registerIncoming("pointer-down",(()=>this.stopMomentumNavigation()))}onInstall(t){super.onInstall(t),this._dragEventSeparator=new G({start:(t,e)=>{this.view.mapViewNavigation.pan.begin(this.view,e.data),e.stopPropagation()},update:(t,e)=>{this.view.mapViewNavigation.pan.update(this.view,e.data),e.stopPropagation()},end:(t,e)=>{this.view.mapViewNavigation.pan.end(this.view,e.data),e.stopPropagation()},condition:(t,e)=>1===t&&F(e.data,this.pointerAction)})}_handleDrag(t){const e=this.view.mapViewNavigation;e.pinch.zoomMomentum||e.pinch.rotateMomentum?this.stopMomentumNavigation():this._dragEventSeparator.handle(t)}stopMomentumNavigation(){this.view.mapViewNavigation.pan.stopMomentumNavigation()}}class fe extends Ut{constructor(t,e,i){super(!0),this._view=t,this.pointerAction=e;const s=this._view.mapViewNavigation;this._dragEventSeparator=new G({start:(t,e)=>{s.rotate.begin(this._view,e.data),e.stopPropagation()},update:(t,e)=>{s.rotate.update(this._view,e.data),e.stopPropagation()},end:(t,e)=>{s.rotate.end(),e.stopPropagation()},condition:(t,e)=>1===t&&F(e.data,this.pointerAction)}),this.registerIncoming("drag",i,(t=>this._dragEventSeparator.handle(t)))}}class ve extends Ut{constructor(t){super(!0),this._view=t,this._frameTask=null,this._watchHandles=new a,this._currentDevice=null,this._transformation={translation:[0,0,0],heading:0,tilt:0,zoom:0},this._handle=this.registerIncoming("gamepad",(t=>this._handleGamePadEvent(t))),this._handle.pause()}onInstall(t){super.onInstall(t),this._watchHandles.add([w((()=>this._view.navigation.gamepad?.enabled),(t=>{t?(this._handle.resume(),this._frameTask||(this._frameTask=ht({update:t=>this._frameUpdate(t.deltaTime)}))):(this._handle.pause(),this._frameTask&&(this._frameTask.remove(),this._frameTask=null))}),v)])}onUninstall(){this._watchHandles.removeAll(),this._frameTask&&(this._frameTask.remove(),this._frameTask=null),super.onUninstall()}_handleGamePadEvent(t){const e=this._view.navigation.gamepad.device;e&&t.data.device!==e||this._currentDevice&&this._currentDevice!==t.data.device||("end"===t.data.action?(this._currentDevice=null,A(this._transformation)):(this._currentDevice=t.data.device,q(t.data,this._view.navigation.gamepad,this._transformation)))}_frameUpdate(t){const e=this._transformation;if(B(e))return;const i=this._view.viewpoint.clone(),s=this._view.navigation.gamepad.velocityFactor,o=je*s*t;yt(i,i,[e.translation[0]*o,-e.translation[1]*o]);const r=1+e.translation[2]*ke*t,n=this._view.constraints.rotationEnabled?-e.heading*_e*t:0,a=this._view.size,p=[a[0]/2,a[1]];wt(i,i,r,n,p,a);const l=this._view.constraints.constrain(i,this._view.viewpoint);this._view.viewpoint=l}}const _e=.06,je=.7,ke=6e-4;class be extends Ut{constructor(t,e,i){super(!0),this.view=t,this.keys=e,this._pressed=!1,this._keyMap={[e.left]:"left",[e.right]:"right",[e.up]:"up",[e.down]:"down"},this.registerIncoming("key-down",i,(t=>this._handleKeyDown(t))),this.registerIncoming("key-up",i,(t=>this._handleKeyUp(t))),this.registerIncoming("blur",i,(()=>this._handleBlur()))}_handleKeyDown(t){t.data.repeat||this._handleKey(t,!0)}_handleKeyUp(t){this._handleKey(t,!1)}_handleBlur(){this._pressed&&(this._pressed=!1,this.view.mapViewNavigation.stop())}_handleKey(t,e){const i=this._keyMap[t.data.key];if(this._pressed=null!=i,this._pressed){if(e)switch(this.view.mapViewNavigation.begin(),i){case"left":this.view.mapViewNavigation.continousPanLeft();break;case"right":this.view.mapViewNavigation.continousPanRight();break;case"up":this.view.mapViewNavigation.continousPanUp();break;case"down":this.view.mapViewNavigation.continousPanDown()}else this._pressed=!1,this.view.mapViewNavigation.stop();t.stopPropagation()}}}class Se extends Ut{constructor(t,e,i){super(!0),this.view=t,this.keys=e,this._pressed=!1,this._keyToDirection={[e.clockwiseOption1]:"clockwise",[e.clockwiseOption2]:"clockwise",[e.counterClockwiseOption1]:"counterClockwise",[e.counterClockwiseOption2]:"counterClockwise",[e.resetOption1]:"reset",[e.resetOption2]:"reset"},this.registerIncoming("key-down",i,(t=>this._handleKeyDown(t))),this.registerIncoming("key-up",i,(t=>this._handleKeyUp(t))),this.registerIncoming("blur",i,(()=>this._handleBlur()))}_handleKeyDown(t){t.data.repeat||this._handleKey(t,!0)}_handleKeyUp(t){this._handleKey(t,!1)}_handleBlur(){this._pressed&&(this._pressed=!1,this.view.mapViewNavigation.stop())}_handleKey(t,e){const i=t.modifiers;if(i.size>0&&!i.has("Shift")||!this.view.constraints.rotationEnabled)return;const s=this._keyToDirection[t.data.key];if(this._pressed=null!=s,this._pressed){if(e)switch(this.view.mapViewNavigation.begin(),s){case"clockwise":this.view.mapViewNavigation.continousRotateClockwise();break;case"counterClockwise":this.view.mapViewNavigation.continousRotateCounterclockwise();break;case"reset":this.view.mapViewNavigation.resetRotation()}else this._pressed=!1,this.view.mapViewNavigation.stop();t.stopPropagation()}}}var Te;!function(t){t[t.IN=0]="IN",t[t.OUT=1]="OUT"}(Te||(Te={}));class xe extends Ut{constructor(t,e,i){super(!0),this.view=t,this.keys=e,this._keysToZoomAction={},this.registerIncoming("key-down",i,(t=>this._handleKeyDown(t))),e.zoomIn.forEach((t=>this._keysToZoomAction[t]=Te.IN)),e.zoomOut.forEach((t=>this._keysToZoomAction[t]=Te.OUT))}_handleKeyDown(t){this._handleKey(t)}_handleKey(t){const e=t.modifiers;if(e.size>0&&!e.has("Shift"))return;const{key:i}=t.data;if(!(i in this._keysToZoomAction))return;const s=this._keysToZoomAction[i],{mapViewNavigation:o}=this.view;let r=null;switch(s){case Te.IN:r=o.zoomIn();break;case Te.OUT:r=o.zoomOut();break;default:return}o.begin(),r.then((()=>o.end())),t.stopPropagation()}}class Ve extends Ut{constructor(t,e){super(!0),this._view=t,this._canZoom=!0,this.registerIncoming("mouse-wheel",e,(t=>this._handleMouseWheel(t)))}_handleMouseWheel(t){if(!this._view.navigation.mouseWheelZoomEnabled)return;if(t.preventDefault(),t.stopPropagation(),!this._canZoom)return;const e=this._view.mapViewNavigation,{x:i,y:s,deltaY:o}=t.data,r=1/.6**(1/60*o),n=e.zoom(r,[i,s]);n&&(this._canZoom=!1,n.catch((()=>{})).then((()=>{this._canZoom=!0,e.end()})))}}class Me extends Ut{constructor(t){super(!0),this.view=t,this.registerIncoming("drag",(t=>this._handleDrag(t))),this.registerIncoming("pointer-down",(()=>this._stopMomentumNavigation()));const e=this.view.mapViewNavigation;this._dragEventSeparator=new G({start:(t,i)=>{e.pinch.begin(this.view,i.data),i.stopPropagation()},update:(t,i)=>{e.pinch.update(this.view,i.data),i.stopPropagation()},end:(t,i)=>{e.pinch.end(this.view),i.stopPropagation()},condition:t=>t>=2})}_handleDrag(t){this._dragEventSeparator.handle(t)}_stopMomentumNavigation(){this.view.mapViewNavigation.pinch.stopMomentumNavigation()}}class De extends Ut{constructor(t=H.maximumDoubleClickDelay,e=H.maximumDoubleClickDistance,i=H.maximumDoubleTouchDelay,s=H.maximumDoubleTouchDistance,o=g){super(!1),this._maximumDoubleClickDelay=t,this._maximumDoubleClickDistance=e,this._maximumDoubleTouchDelay=i,this._maximumDoubleTouchDistance=s,this._clock=o,this._doubleTapDragReady=!1,this._doubleTapDragActive=!1,this._dragStartCenter=b(0,0),this._pointerState=new Map,this._doubleTapDrag=this.registerOutgoing("double-tap-drag"),this._dragEventSeparator=new G({start:(t,e)=>this._dragStart(t,e),update:(t,e)=>this._dragUpdate(e),end:(t,e)=>this._dragEnd(e)}),this.registerIncoming("drag",(t=>this._dragEventSeparator.handle(t))),this.registerIncoming("pointer-down",(t=>this._handlePointerDown(t))),this.registerIncoming("pointer-up",(()=>this._handlePointerUp()))}onUninstall(){this._pointerState.forEach((t=>{t.doubleTapTimeout=m(t.doubleTapTimeout)}))}get hasPendingInputs(){return M(this._pointerState,(t=>null!=t.doubleTapTimeout))}_clearPointerDown(t){const e=this._pointerState.get(t);e&&(e.doubleTapTimeout=m(e.doubleTapTimeout),this._pointerState.delete(t),this.refreshHasPendingInputs())}_createDoubleTapDragData(t,e,i){const{button:s,buttons:o,pointer:r,pointers:n,pointerType:a,timestamp:p}=i;return{action:t,delta:e,button:s,buttons:o,pointer:r,pointers:n,pointerType:a,timestamp:p}}_dragStart(t,e){if(!this._doubleTapDragReady||1!==t)return;this._doubleTapDragReady=!1,this._doubleTapDragActive=!0;const{data:i,modifiers:s}=e,{center:o}=i;this._dragStartCenter=o;const r=this._createDoubleTapDragData("begin",b(0,0),i);this._doubleTapDrag.emit(r,void 0,s),e.stopPropagation()}_dragUpdate(t){if(!this._doubleTapDragActive)return;const{data:e,modifiers:i}=t,{center:s}=e,o=b(s.x-this._dragStartCenter.x,s.y-this._dragStartCenter.y),r=this._createDoubleTapDragData("update",o,e);this._doubleTapDrag.emit(r,void 0,i),t.stopPropagation()}_dragEnd(t){if(!this._doubleTapDragActive)return;const{data:e,modifiers:i}=t,{center:s}=e,o=b(s.x-this._dragStartCenter.x,s.y-this._dragStartCenter.y),r=this._createDoubleTapDragData("end",o,e);this._doubleTapDrag.emit(r,void 0,i),this._doubleTapDragActive=!1,t.stopPropagation()}_handlePointerDown(t){const{data:e}=t,i=K(e),s=this._pointerState.get(i),{pointerType:o}=e.native;if(s){const r="touch"===o?this._maximumDoubleTouchDistance:this._maximumDoubleClickDistance;this._clearPointerDown(i),W(s.event.data,e)>r?this._storePointerDown(t):this._doubleTapDragReady=!0}else this._storePointerDown(t)}_handlePointerUp(){this._doubleTapDragReady=!1}_storePointerDown(t){const{data:e}=t,{pointerType:i}=e.native,s=K(e),o="touch"===i?this._maximumDoubleTouchDelay:this._maximumDoubleClickDelay,r=this._clock.setTimeout((()=>this._clearPointerDown(s)),o);this._pointerState.set(s,{event:t,doubleTapTimeout:r}),this.refreshHasPendingInputs()}}const Re={left:"ArrowLeft",right:"ArrowRight",up:"ArrowUp",down:"ArrowDown"},Ce={zoomIn:["=","+"],zoomOut:["-","_"]},Le={clockwiseOption1:"a",clockwiseOption2:"A",counterClockwiseOption1:"d",counterClockwiseOption2:"D",resetOption1:"n",resetOption2:"N"};let Pe=class extends lt{constructor(){super(...arguments),this._handles=new a}initialize(){const t=()=>this.view?.ready;this._handles.add([_((()=>!t()),(()=>this._disconnect())),_(t,(()=>this._connect()))])}destroy(){this._handles&&(this._handles.removeAll(),this._handles=null),this._disconnect()}get latestPointerType(){return this._inputManager?.latestPointerType}get latestPointerLocation(){return this._inputManager?.latestPointerLocation}get multiTouchActive(){return this._inputManager?.multiTouchActive??!1}_disconnect(){this.view.viewEvents.disconnect(),this._inputManager=u(this._inputManager)}_connect(){const t=this.view.surface,e=new $(t,this.view.input),i=[new Y,new Q,new X,new J(this.view.navigation),new De],s=new zt({eventSource:e,recognizers:i});s.installHandlers("prevent-context-menu",[new tt],Et.INTERNAL),s.installHandlers("navigation",[new Me(this.view),new ve(this.view),new Ve(this.view),new ge(this.view),new ge(this.view,["Ctrl"]),new we(this.view,"primary"),new be(this.view,Re),new xe(this.view,Ce),new Se(this.view,Le),new fe(this.view,"secondary"),new ye(this.view,"touch")],Et.INTERNAL),this.view.viewEvents.connect(s),this._source=e,this._inputManager=s,w((()=>this.view?.navigation?.browserTouchPanEnabled),(t=>{this._source&&(this._source.browserTouchPanningEnabled=!t)}),v)}get test(){return{inputManager:this._inputManager}}};t([V()],Pe.prototype,"view",void 0),t([V()],Pe.prototype,"latestPointerType",null),t([V()],Pe.prototype,"latestPointerLocation",null),t([V()],Pe.prototype,"multiTouchActive",null),Pe=t([S("esri.views.2d.input.MapViewInputManager")],Pe);const Oe=Pe;let Ie=0,Ue=class extends lt{constructor(){super(...arguments),this.color=new Zt([0,255,255]),this.haloOpacity=1,this.fillOpacity=.25}get version(){return Ie++}};t([V({readOnly:!0})],Ue.prototype,"version",null),t([V({type:Zt})],Ue.prototype,"color",void 0),t([V({type:Zt})],Ue.prototype,"haloColor",void 0),t([V()],Ue.prototype,"haloOpacity",void 0),t([V()],Ue.prototype,"fillOpacity",void 0),Ue=t([S("esri.views.2d.support.HighlightOptions")],Ue);const ze=Ue;class Ee{constructor(){this._names=new Map}begin(t){this._names.has(t)||(this._names.set(t,!1),(t=>t.includes("Brush"))(t)&&this.record("Esri.FirstDraw"),performance.mark(`Esri.${t}.Start`))}end(t){this._names.has(t)&&!this._names.get(t)&&(this._names.set(t,!0),performance.mark(`Esri.${t}.End`))}record(t){this._names.has(t)||(this._names.set(t,!0),performance.mark(`Esri.${t}`))}}let Ne=class extends At{constructor(t){super(t),this.components=["attribution","zoom"]}};t([V()],Ne.prototype,"components",void 0),Ne=t([S("esri.views.ui.2d.DefaultUI2D")],Ne);const Ze=Ne;let Fe,Ge,Ae,qe,Be,He,Ke=class extends(N(Z(et(at)))){constructor(t){super(t),this._magnifierView=null,this._stage=null,this._resolveWhenReady=[],this.rootLayerViews=new o({getCollections:()=>[this.basemapView?.baseLayerViews,this.layerViews,this.basemapView?.referenceLayerViews],getChildrenFunction:()=>null}),this.featuresTilingScheme=null,this.fullOpacity=1,this.graphicsView=null,this.labelManager=null,this.mapViewNavigation=null,this.renderingOptions={samplingMode:"dynamic",edgeLabelsVisible:!0,labelsAnimationTime:125,labelCollisionsEnabled:!0},this.rendering=!1,this.supersampleScreenshotsEnabled=!1,this.supportsGround=!1,this._stationaryTimer=null,this.frameTask=new Wt(this),this._pePromise=null,this.floors=new s,this.highlightOptions=new ze,this.inputManager=new Oe({view:this}),this.map=null,this.resizeAlign="center",this.spatialReferenceLocked=!1,this.timeline=new Ee,this.type="2d",this.ui=new Ze,this._pixelFormat={flipY:!0,premultipliedAlpha:!0},this.constraints=new le,this.padding={top:0,right:0,bottom:0,left:0},this.handles.add([w((()=>this.viewpoint),(()=>{this._lastStationaryEventTimestamp=performance.now(),this._flipStationary(160)}),f),this.on("resize",(t=>this._resizeHandler(t))),w((()=>this.animationManager?.animation),(t=>{this.animation=t}))]),x()}destroy(){this._set("preconditionsReady",!1),this._gotoTask=this.frameTask=null,this.rootLayerViews.destroy(),this.inputManager.destroy(),this._set("inputManager",null)}get graphicsTileStore(){return new Nt(this.featuresTilingScheme)}get initialExtentRequired(){const{scale:t,constraints:e,center:i,viewpoint:s,extent:o}=this;let r=this.zoom;return!(this.map&&"initialViewProperties"in this.map&&this.map.initialViewProperties?.viewpoint||o||(e?.effectiveLODs||(r=-1),i&&(0!==t||-1!==r)||s&&h(s.targetGeometry)&&("extent"===s.targetGeometry.type||s.scale)))}get resourceManager(){return this._stage.resourceManager}get textureManager(){return this._stage.painter.textureManager}get _defaultsFromMapSettings(){return{required:{tileInfo:!0,heightModelInfo:!1,extent:!1},requiresExtentInSpatialReference:this.spatialReferenceLocked}}get _projectionEngineLoaded(){return!!U()||(this._pePromise||(this._pePromise=O().finally((()=>{this._pePromise=null}))),!1)}get typeSpecificPreconditionsReady(){const t=this._getDefaultViewpoint();if(!t)return!1;const e=this.spatialReference,i=d(t.targetGeometry);return!!I(i.spatialReference,e)||this._projectionEngineLoaded}set animation(t){const e=this._get("animation");if(t===e)return;if(e&&e.stop(),!t||t.isFulfilled())return void this._set("animation",null);this._set("animation",t),this.frameTask.animationInProgress=!0;const i=()=>{t===this._get("animation")&&(this._set("animation",null),this.frameTask?.requestFrame()),this.frameTask&&(this.frameTask.animationInProgress=!1)};t.when(i,i)}get background(){return"esri.WebMap"===this.map?.declaredClass?this.map.initialViewProperties.background:null}set background(t){this._override("background",t)}get center(){if(!this.ready)return this._get("center");const{center:t,spatialReference:e}=this.state.paddedViewState;return new L({x:t[0],y:t[1],spatialReference:e})}set center(t){if(null==t)return;if(!this.ready)return this._set("center",t),void this.notifyChange("initialExtentRequired");let e;try{e=this._project(t,this.spatialReference)}catch(e){return void l.getLogger(this.declaredClass).error(new r("mapview:invalid-center","could not project the value in the view's spatial reference",{input:t,error:e}))}const i=this.viewpoint;ft(i,i,e),this.viewpoint=i}set constraints(t){const e=this._get("constraints");e&&(this.handles.remove("map-view-constraints"),e.destroy()),this._set("constraints",t),t&&(t.view=this,this.ready&&(this.state.viewpoint=t.fit(this.state.paddedViewState.viewpoint)),this.handles.add(w((()=>t.version),(()=>{this.ready&&this.state&&(this.state.viewpoint=t.fit(this.state.paddedViewState.viewpoint))}),f),"map-view-constraints"))}get extent(){return this.ready?this.state.paddedViewState.extent.clone():this._get("extent")}set extent(t){if(null==t)return;if(!t.width||!t.height)return void l.getLogger(this.declaredClass).error(new r("mapview:invalid-extent","invalid extent size"));if(!this.ready)return this._set("extent",t),this._set("center",null),this._set("viewpoint",null),this._set("scale",0),this._set("zoom",-1),void this.notifyChange("initialExtentRequired");let e;try{e=this._project(t,this.spatialReference)}catch(t){return void l.getLogger(this.declaredClass).error(new r("mapview:invalid-extent","could not project the value in the view's spatial reference",{error:t}))}const i=this.viewpoint;vt(i,i,e,this.size,{constraints:this.constraints}),this.viewpoint=i}get padding(){return this.ready?this.state.padding:this._get("padding")}set padding(t){this.ready?(this.state.padding=t,this._set("padding",this.state.padding)):this._set("padding",t)}get resolution(){return this.state?this.state.resolution:0}get rotation(){return this.ready?this.state.rotation:this._get("rotation")}set rotation(t){if(isNaN(t))return;if(!this.ready)return void this._set("rotation",t);const e=this.viewpoint;_t(e,e,t),this.viewpoint=e}get scale(){return this.ready?this.state.scale:this._get("scale")}set scale(t){if(!t||isNaN(t))return;if(!this.ready){this._set("scale",t),this._set("zoom",-1);const e=this._get("extent");return e&&(this._set("extent",null),this._set("center",e.center)),void this.notifyChange("initialExtentRequired")}const e=this.viewpoint;jt(e,e,t),this.viewpoint=e}get stationary(){return!(this.animation||this.navigating||this.resizing||this._stationaryTimer)}get updating(){const t=!this.destroyed&&(!this.layerViewManager||!this.labelManager||!this.graphicsView||!0===this.layerViewManager.updating||!0===this.labelManager.updating||!0===this.graphicsView.updating||this.allLayerViews.some((t=>!t.destroyed&&!("layerViews"in t)&&!0===t.updating)));if(n("esri-2d-log-updating")){const e=this.allLayerViews.reduce(((t,e)=>({...t,[e.layer.id]:!e.destroyed&&!("layerViews"in e)&&e.updating})),{});console.log(`Updating MapView: ${t}\n-> Null LayerViewManager: ${!this.layerViewManager}\n-> Null LabelManager: ${!this.labelManager}\n-> Null GraphicsView: ${!this.graphicsView}\n-> layerViewManager.updating: ${this.layerViewManager?.updating}\n-> labelManager.updating: ${this.labelManager?.updating}\n-> graphicsView.updating: ${this.graphicsView?.updating}\n-> allLayerViews: ${JSON.stringify(e)}\n`)}return t}get viewpoint(){if(!this.ready)return this._get("viewpoint");const t=this.state.paddedViewState;return t&&t.viewpoint.clone()}set viewpoint(t){if(null==t)return;if(!this.ready)return this._set("viewpoint",t),this._set("extent",null),this._set("center",null),this._set("zoom",-1),this._set("scale",0),void this.notifyChange("initialExtentRequired");let e,s;try{e=this._project(t,this.spatialReference),!t.scale||isNaN(t.scale)?s=new r("mapview:invalid-viewpoint",`invalid scale value of ${t.scale}`):c(t.targetGeometry)&&(s=new r("mapview:invalid-viewpoint","geometry not defined"))}catch(t){s=new r("mapview:invalid-viewpoint","could not project the value in the view's spatial reference",{error:t})}if(s)return void l.getLogger(this.declaredClass).error(s);this._scaleBeforeChangingSpatialReference=null;const o=new i({targetGeometry:new L,scale:0,rotation:0});dt(o,e),this.constraints.constrain(o,this.state.paddedViewState.viewpoint),this.state.viewpoint=o,this.frameTask.requestFrame(),this._set("viewpoint",o)}get zoom(){return this.ready?this.constraints.scaleToZoom(this.scale):this._get("zoom")}set zoom(t){if(null==t)return;if(!this.ready){this._set("zoom",t),this._set("scale",0);const e=this._get("extent");return e&&(this._set("extent",null),this._set("center",e.center)),void this.notifyChange("initialExtentRequired")}if(!this.constraints.effectiveLODs)return void this._set("zoom",-1);const e=this.viewpoint;jt(e,e,this.constraints.zoomToScale(t)),this.viewpoint=e,this._set("zoom",this.constraints.scaleToZoom(this.scale))}get navigating(){return!(!this.mapViewNavigation||!this.mapViewNavigation.interacting)}goTo(t,e){if(t)return this.animation&&(this.animation=null),this._createAnimation(),j((()=>this.ready),e).then((()=>{const i={animate:!0,...e},s=kt(t,this);return this.animation.update(s),this._gotoTask={},i.animate?this._gotoAnimated(s,i):this._gotoImmediate(s,i)}));l.getLogger(this.declaredClass).error("#goTo()","target cannot be null or undefined")}async hitTest(t,e){const i=Ft(t)?Gt(this,t):t;if(!this.ready||isNaN(i.x)||isNaN(i.y))return{screenPoint:i,results:[]};let s=new Set,o=!1,r=null,n=null;e?.include?Qe(e.include,Ye(this,(t=>s.add(t)),(t=>{r||(r=new Set),r.add(t)}),(t=>s.add(t)),(()=>o=!0))):(o=!0,s=new Set(this.allLayerViews)),e?.exclude&&Qe(e.exclude,Ye(this,(t=>s.delete(t)),(t=>{n||(n=new Set),n.add(t)})));const a=this.allLayerViews.filter((t=>!t.suspended&&s.has(t))).reverse(),p=this.toMap(i);let l=[...o?this.graphicsView.hitTest(p).map((t=>({type:"graphic",graphic:t,layer:null,mapPoint:p}))):[],...await Promise.all(a.map((t=>t.hitTest(p,i))).toArray())].filter(h).flat().filter(h);return r&&(l=l.filter((t=>!("graphic"in t)||!t.graphic||r.has($e(t.graphic))))),n&&(l=l.filter((t=>!("graphic"in t)||!t.graphic||n.has($e(t.graphic))))),{screenPoint:i,results:l}}async takeScreenshot(t){const e=this._createScreenshotPlan(t),i=await this._stage.takeScreenshot(e);return it(i,{format:e.format,quality:e.quality,rotation:0,disableDecorations:!1},this._pixelFormat)}async _takeScreenshot(t){const e=this._createScreenshotPlan(t),i=await this._stage.takeScreenshot(e);return st(i,this._pixelFormat)}_createScreenshotPlan(t){t=t||{};const e=this.supersampleScreenshotsEnabled?Math.min(4,ot(this.size,Math.min(4096,this._stage.context.parameters.maxTextureSize))):1;let i;t.layers?(i=[],t.layers.forEach((t=>{const e=this.allLayerViews.find((e=>e.layer.id===t.id));e&&"container"in e&&e.container&&i.push(e.container)}))):i=this._stage.children;const{format:s,quality:o}=rt(t.format,t.quality);return function(t,e,i,s,o,r,n,a){let p;t.ignorePadding&&(s={left:0,right:0,top:0,bottom:0}),null!=t.width&&null!=t.height?p=[t.width,t.height]:null==t.width&&null!=t.height?p=[t.height,t.height]:null!=t.width&&null==t.height?p=[t.width,t.width]:null==t.width&&null==t.height&&(p=null);const l=i[0]-(s.left+s.right),h=i[1]-(s.top+s.bottom);let c,m,u=t.area||{x:0,y:0,width:l,height:h};if(p){const t=l/h,e=p[0]/p[1];if(e>t){const t=u.width/e;u={x:u.x,y:Math.round(u.y+(u.height-t)/2),width:u.width,height:Math.round(t)}}else{const t=u.height*e;u={x:Math.round(u.x+(u.width-t)/2),y:u.y,width:Math.round(t),height:u.height}}}else p=[u.width,u.height];return p[0]>u.width?(c=Math.min(p[0]/u.width,e),m=p[0]/u.width/c):(c=1,m=p[0]/u.width),{resolutionScale:c,cropArea:{x:Math.round((u.x+s.left)*c),y:Math.round((u.y+s.top)*c),width:Math.round(u.width*c),height:Math.round(u.height*c)},outputScale:m,format:o,quality:r,children:n,rotation:a}}(t,e,this.size,this.padding,s,o,i,t.rotation)}get test(){return{takeScreenshot:t=>this._takeScreenshot(t)}}toMap(t){if(!this.ready)return null;const e=Ft(t)?Gt(this,t):t,[i,s]=this.state.toMap([0,0],[e.x,e.y]),o=this.spatialReference;return new L({x:i,y:s,spatialReference:o})}toScreen(t){if(!this.ready)return null;const e=this._project(t,this.spatialReference),i=[e.x,e.y];return this.state.toScreen(i,i),b(i[0],i[1])}on(t,e,i,s){return this.inputManager&&this.viewEvents.on(t,e,i,s)||super.on(t,e)}hasEventListener(t){return super.hasEventListener(t)||this.viewEvents.hasHandler(t)}whenLayerView(t){return super.whenLayerView(t)}graphicChanged(t){this.graphicsView&&this.graphicsView.graphicUpdateHandler(t)}whenReady(){return new Promise((t=>{this.ready?t(this):this._resolveWhenReady.push(t)}))}forceDOMReadyCycle(){this.forceReadyCycle()}getDefaultSpatialReference(){return this.map&&"initialViewProperties"in this.map&&this.map?.initialViewProperties?.spatialReference||this.defaultsFromMap?.spatialReference||null}hasLayerViewModule(t){return(t=>h(Xt[t.type]))(t)}importLayerView(t){return(t=>{const e=Xt[t.type];if(c(e))throw function(t){const e=t.declaredClass?t.declaredClass.slice(t.declaredClass.lastIndexOf(".")+1):"Unknown",i=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();return new r(`${i}:view-not-supported`,`${e} is not supported in 2D`)}(t);return e(t)})(t)}pixelSizeAt(){return this.ready?this.state.resolution:(l.getLogger(this.declaredClass).error("#pixelSizeAt()","Map view cannot be used before it is ready"),null)}popupHitTest(t){return this.hitTest(t).then((e=>({...e,mapPoint:this.toMap(t)})))}requestUpdate(){this.ready&&this.frameTask.requestUpdate()}validate(){let t=nt(this.type);return n("safari")&&n("safari")<9&&(t=new r("mapview:browser-not-supported","This browser is not supported by MapView (Safari < 9)",{type:"safari",requiredVersion:9,detectedVersion:n("safari")})),h(t)?(l.getLogger(this.declaredClass).warn("#validate()",t.message),Promise.reject(t)):async function(){const[,{GraphicsView2D:t,GraphicContainer:e,LabelManager:i,MapViewNavigation:s,MagnifierView2D:o,Stage:r}]=await Promise.all([import("../chunks/webglDeps.js"),import("../chunks/mapViewDeps.js")]);Ge=t,Ae=e,qe=i,Be=s,He=o,Fe=r}()}_createAnimation(){return this.animation&&!this.animation.done||(this.animation=new pt),this.animation}_cancellableGoTo(t,e,i){const s=()=>t===this._gotoTask,o=i.then((()=>{s()&&(this.animation=null)})).catch((t=>{throw s()&&(this.animation=null,e.done||(e.stop(),this.frameTask.animationInProgress=!1)),t})),r=new Promise((t=>t(o)));return e.when().catch((()=>{s()&&r.cancel&&r.cancel()})),r}_gotoImmediate(t,e){const i=this._gotoTask,s=this.animation,o=t.then((t=>{if(y(e),i!==this._gotoTask)throw new r("view:goto-interrupted","Goto was interrupted");this.viewpoint=s.target=t,s.finish()}));return this._cancellableGoTo(i,s,o)}_flipStationary(t){return null!==this._stationaryTimer||(this._stationaryTimer=setTimeout((()=>{this._stationaryTimer=null;const t=performance.now()-this._lastStationaryEventTimestamp;t<160&&(this._stationaryTimer=this._flipStationary(t))}),t)),this._stationaryTimer}_getDefaultViewpoint(){const{constraints:t,initialExtent:e,map:s,padding:o,size:r}=this;if(!t)return null;const n=s&&"initialViewProperties"in s&&s.initialViewProperties,a={zoom:this._get("zoom"),scale:this._get("scale"),center:this._get("center"),extent:this._get("extent"),rotation:this._get("rotation"),viewpoint:this._get("viewpoint"),spatialReference:this._userSpatialReference};t.effectiveLODs?-1!==a.zoom&&(a.scale=t.zoomToScale(a.zoom)):a.zoom=-1;let p=null,l=null,c=0;const m=a.viewpoint&&a.viewpoint.rotation,u=a.viewpoint&&a.viewpoint.targetGeometry;h(u)&&("extent"===u.type?p=u:"point"===u.type&&(l=u,c=a.viewpoint.scale));const g=a.extent||p||d(n?.viewpoint?.targetGeometry)?.extent||e,y=a.center||l||g?.center,w=a.scale||c||n?.viewpoint?.scale||g&&bt(g,[r[0]-o.left-o.right,r[1]-o.top-o.bottom]),f=a.rotation||m||n?.viewpoint?.rotation||0;return y&&w?new i({targetGeometry:y,scale:w,rotation:f}):null}_gotoAnimated(t,e){const i=this._gotoTask,s=this.animation,o=t.then((t=>{if(y(e),i!==this._gotoTask)throw new r("view:goto-interrupted","Goto was interrupted");return s.update(t),this.animationManager.animate(s,this.viewpoint,e),s.when().then((()=>{}),(()=>{}))}));return this._cancellableGoTo(i,s,o)}_project(t,e){const i=t&&t.targetGeometry||t;if(!e)return t;if(!i)return null;if(e.imageCoordinateSystem||i.spatialReference?.imageCoordinateSystem)return t;if(z(e,i.spatialReference))return t;const s=P(i,e);if(!s)throw new r("mapview:projection-not-possible","projecting input geometry to target spatial reference returned a null value",{geometry:i,spatialReference:e});return function(t){return t&&"esri.Viewpoint"===t.declaredClass}(t)?(t.targetGeometry=s,t):s}_resizeHandler(t){if(!this.ready)return;const e=this.state;let i=this.state.paddedViewState.viewpoint;const s=this.state.paddedViewState.size.concat();e.size=[t.width,t.height],St(i,i,s,this.state.paddedViewState.size,this.resizeAlign),i=this.constraints.constrain(i,null),this.state.viewpoint=i}_startup(){this.timeline.begin("MapView Startup");const t=this._getDefaultViewpoint(),e=t.targetGeometry;try{this._project(t,this.spatialReference)}catch(i){l.getLogger(this.declaredClass).warn(new T("mapview:startup-projection-error","projection of initial viewpoint to the view's spatial reference, defaulting to the initial viewpoint.",{center:e.toJSON(),spatialReference:this.spatialReference,error:i})),t.targetGeometry=this.defaultsFromMap.extent?.center||new L({x:0,y:0,spatialReference:this.spatialReference})}this.constraints?.fit(t),this._set("state",new de({padding:this._get("padding"),size:this.size,viewpoint:t})),this.graphics.owner=this;const i=new Fe(this.surface,{canvas:this.renderCanvas,supersampleScreenshots:this.supersampleScreenshotsEnabled,contextOptions:{disabledExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions},renderingOptions:this.renderingOptions,timeline:this.timeline});this._stage=i,this._magnifierView=new He,this._magnifierView.magnifier=this.magnifier;const s=new qe({view:this});this._set("labelManager",s);const o=new Kt({view:this});this._set("animationManager",o);const r=new Be({view:this,animationManager:o});this._set("mapViewNavigation",r),this._setupSpatialReferenceDependentProperties(),this.handles.add([this.rootLayerViews.on("change",(()=>this._updateStageChildren())),i.on("post-render",(()=>this._set("rendering",i.renderRequested))),i.on("will-render",(()=>this._set("rendering",i.renderRequested))),i.on("webgl-error",(t=>this.fatalError=t.error)),w((()=>this.stationary),(t=>i.stationary=t),k),w((()=>this.background),(t=>{i.background=t,this._magnifierView.background=t}),k),w((()=>this.magnifier),(t=>this._magnifierView.magnifier=t),k),w((()=>this.renderingOptions),(t=>i.renderingOptions=t),k),w((()=>this.highlightOptions),(t=>i.highlightOptions=t),k),w((()=>this.state.id),(()=>i.state=this.state),k)],"map-view"),this._updateStageChildren();const n=this._resolveWhenReady;this._resolveWhenReady=[],n.forEach((t=>t(this))),this.timeline.end("MapView Startup"),this.frameTask&&this.frameTask.start(),this._set("ready",!0)}_teardown(){this._destroySpatialReferenceDependentProperties(),this.handles.remove("map-view"),this.mapViewNavigation.destroy(),this._set("mapViewNavigation",null),this.animationManager.destroy(),this._set("animationManager",null),this.layerViewManager.clear(),this.labelManager.destroy(),this._magnifierView.destroy(),this._stage.destroy(),this._stage=null,this._set("graphicsView",null),this._magnifierView=null,this._set("labelManager",null),this._set("mapViewNavigation",null),this.graphics.owner=null,this.frameTask&&this.frameTask.stop(),this._stationaryTimer&&(clearTimeout(this._stationaryTimer),this._stationaryTimer=null),this._set("ready",!1);const{center:[t,e],spatialReference:i,rotation:s,scale:o}=this.state.paddedViewState,r=new L({x:t,y:e,spatialReference:i});this._set("viewpoint",null),this._set("extent",null),this._set("center",r),this._set("zoom",-1),this._set("rotation",s),this._set("scale",o),this._set("spatialReference",i),this._set("state",null),this.animation=null}_updateStageChildren(){this._stage.removeAllChildren(),this.rootLayerViews.forEach((t=>{this._stage.addChild(t.container)}));const t=this.graphicsView;this._stage.addChild(t.container),this._stage.addChild(this._magnifierView)}_setupSpatialReferenceDependentProperties(){const t=new It(E.create({spatialReference:this.spatialReference,size:512,numLODs:36}));this._set("featuresTilingScheme",t);const e=new Ge({view:this,graphics:this.graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new Ae(t)});this.frameTask.graphicsView=e,this._set("graphicsView",e)}_destroySpatialReferenceDependentProperties(){const t=this.graphicsView;this._set("graphicsView",null),this.frameTask.graphicsView=null,t.destroy(),this._set("featuresTilingScheme",null)}_spatialReferenceChanged(t){if(!this.ready)return;this.frameTask.stop();for(const t of this.allLayerViews)t.processDetach();this._destroySpatialReferenceDependentProperties();const e=this.state.paddedViewState.clone();if(c(this._scaleBeforeChangingSpatialReference))this._scaleBeforeChangingSpatialReference=e.scale;else{const t=e.viewpoint.clone();t.scale=this._scaleBeforeChangingSpatialReference,e.viewpoint=t}const s=e.clone(),[o,r]=e.center;let a=null;try{a=this._project(new L({x:o,y:r,spatialReference:e.spatialReference}),t)}catch(e){U()||l.getLogger(this.declaredClass).warn(new T("mapview:spatial-reference-change","could not project the view's center to the new spatial reference",{center:a.toJSON(),spatialReference:t,error:e}))}a||(a=new L({x:0,y:0,spatialReference:t}));const p=ft(new i({targetGeometry:new L,scale:0,rotation:0}),e.viewpoint,a);s.viewpoint=p;try{const i=20,o=[e.size[0]/2,e.size[1]/2],r=[o[0]+i,o[1]],a=e.toMap([0,0],r),{x:l,y:h}=this._project(new L({x:a[0],y:a[1],spatialReference:e.spatialReference}),t);a[0]=l,a[1]=h,s.toScreen(a,a);const c=Tt(o,a,r),m=Math.hypot(a[0]-o[0],a[1]-o[1])/i;!Number.isFinite(m)||Math.abs(m)>4?(p.rotation=0,p.targetGeometry=new L({x:0,y:0,spatialReference:t})):(p.scale*=m,p.scale>n("mapview-srswitch-adjust-rotation-scale-threshold")?p.rotation=0:p.rotation+=Number.isFinite(c)?c:0)}catch{}this._get("constraints").constrain(p,null),this._get("state").viewpoint=p,this._stage.state=this.state,this._setupSpatialReferenceDependentProperties();for(const t of this.allLayerViews)t.processAttach();this.frameTask.requestFrame(),this.frameTask.start(),this._updateStageChildren()}};Ke.type="2d",t([V({readOnly:!0})],Ke.prototype,"animationManager",void 0),t([V({constructOnly:!0})],Ke.prototype,"deactivatedWebGLExtensions",void 0),t([V({constructOnly:!0})],Ke.prototype,"debugWebGLExtensions",void 0),t([V({readOnly:!0})],Ke.prototype,"featuresTilingScheme",void 0),t([V({readOnly:!0})],Ke.prototype,"fullOpacity",void 0),t([V({readOnly:!0})],Ke.prototype,"graphicsTileStore",null),t([V()],Ke.prototype,"graphicsView",void 0),t([V({readOnly:!0})],Ke.prototype,"state",void 0),t([V()],Ke.prototype,"initialExtentRequired",null),t([V()],Ke.prototype,"labelManager",void 0),t([V({readOnly:!0})],Ke.prototype,"resourceManager",null),t([V({readOnly:!0})],Ke.prototype,"textureManager",null),t([V({readOnly:!0})],Ke.prototype,"mapViewNavigation",void 0),t([V({constructOnly:!0})],Ke.prototype,"renderCanvas",void 0),t([V()],Ke.prototype,"renderingOptions",void 0),t([V({readOnly:!0})],Ke.prototype,"rendering",void 0),t([V({constructOnly:!0})],Ke.prototype,"supersampleScreenshotsEnabled",void 0),t([V({readOnly:!0})],Ke.prototype,"supportsGround",void 0),t([V()],Ke.prototype,"_stationaryTimer",void 0),t([V()],Ke.prototype,"_defaultsFromMapSettings",null),t([V()],Ke.prototype,"_pePromise",void 0),t([V({readOnly:!0})],Ke.prototype,"typeSpecificPreconditionsReady",null),t([V()],Ke.prototype,"animation",null),t([V({type:qt})],Ke.prototype,"background",null),t([V({value:null,type:L,dependsOn:["state.id","ready"]})],Ke.prototype,"center",null),t([V({type:le})],Ke.prototype,"constraints",null),t([V({value:null,type:D,dependsOn:["state.id","ready"]})],Ke.prototype,"extent",null),t([V()],Ke.prototype,"floors",void 0),t([V({type:ze})],Ke.prototype,"highlightOptions",void 0),t([V({readOnly:!0})],Ke.prototype,"inputManager",void 0),t([V()],Ke.prototype,"map",void 0),t([V({value:{top:0,right:0,bottom:0,left:0},cast:t=>({top:0,right:0,bottom:0,left:0,...t})})],Ke.prototype,"padding",null),t([V()],Ke.prototype,"resizeAlign",void 0),t([V({readOnly:!0,dependsOn:["state.id"]})],Ke.prototype,"resolution",null),t([V({value:0,type:Number,dependsOn:["state.id","ready"]})],Ke.prototype,"rotation",null),t([V({value:0,type:Number,dependsOn:["state.id","ready"]})],Ke.prototype,"scale",null),t([V({constructOnly:!0})],Ke.prototype,"spatialReferenceLocked",void 0),t([V()],Ke.prototype,"stationary",null),t([V({type:Ee,readOnly:!0})],Ke.prototype,"timeline",void 0),t([V({readOnly:!0})],Ke.prototype,"type",void 0),t([V({readOnly:!0})],Ke.prototype,"updating",null),t([V({value:null,type:i,dependsOn:["state.id","ready"]})],Ke.prototype,"viewpoint",null),t([V({value:-1,dependsOn:["state.id","ready"]})],Ke.prototype,"zoom",null),t([V({readOnly:!0})],Ke.prototype,"navigating",null),t([V({type:Ze})],Ke.prototype,"ui",void 0),Ke=t([S("esri.views.MapView")],Ke);const We=Ke;function $e(t){const e=t.getObjectId();return e?`${t.layer?.uid??t.sourceLayer?.uid??"MapView"}/${e}`:`"MapView/${t.uid}`}function Ye(t,i,s,o,r){return n=>{if(n instanceof e){if(n.layer===t)r?.();else{const e=t.allLayerViews.find((t=>t.layer===n.layer));e&&o?.(e)}s($e(n))}else{const e=t.allLayerViews.find((t=>t.layer===n));e&&i(e)}}}function Qe(t,e){if(t)if(p(t))for(const i of t)if(p(i))for(const t of i)e(t);else e(i);else e(t)}export{Ee as T,We as default};
