/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{a as t,f as e}from"./chunks/number.js";export{c as convertDateFormatToIntlOptions,b as convertNumberFormatToIntlOptions,f as formatDate,a as formatNumber}from"./chunks/number.js";import{L as i}from"./chunks/Logger.js";import{g as u}from"./chunks/object.js";import{r as m}from"./chunks/string.js";export{g as getLocale,o as onLocaleChange,p as prefersRTL,s as setLocale}from"./chunks/locale.js";import{n as l,r as h}from"./chunks/messages.js";export{f as fetchMessageBundle,n as normalizeMessageBundleLocale,r as registerMessageBundleLoader}from"./chunks/messages.js";import d from"./request.js";import w from"./core/Error.js";import{i as j}from"./chunks/maybe.js";import{g as k}from"./chunks/assets.js";import"./chunks/jsonMap.js";import"./config.js";import"./core/lang.js";import"./core/promiseUtils.js";import"./kernel.js";import"./core/urlUtils.js";const L=i.getLogger("esri.intl.substitute");function $(r,n,s={}){const{format:o={}}=s;return m(r,(r=>function(r,n,s){let o,a;const i=r.indexOf(":");if(-1===i?o=r.trim():(o=r.slice(0,i).trim(),a=r.slice(i+1).trim()),!o)return"";const c=u(o,n);if(null==c)return"";const m=(a?s?.[a]:null)??s?.[o];return m?function(r,n){switch(n.type){case"date":return e(r,n.intlOptions);case"number":return t(r,n.intlOptions);default:return L.warn("missing format descriptor for key {key}"),y(r)}}(c,m):a?function(r,n){switch(n.toLowerCase()){case"dateformat":return e(r);case"numberformat":return t(r);default:return L.warn(`inline format is unsupported since 4.12: ${n}`),/^(dateformat|datestring)/i.test(n)?e(r):/^numberformat/i.test(n)?t(r):y(r)}}(c,a):y(c)}(r,n,o)))}function y(r){switch(typeof r){case"string":return r;case"number":return t(r);case"boolean":return""+r;default:return r instanceof Date?e(r):""}}async function x(t){if(j(R.fetchBundleAsset))return R.fetchBundleAsset(t);const e=await d(t,{responseType:"text"});return JSON.parse(e.data)}class B{constructor({base:t="",pattern:e,location:r=new URL(window.location.href)}){let n;n="string"==typeof r?t=>new URL(t,new URL(r,window.location.href)).href:r instanceof URL?t=>new URL(t,r).href:r,this.pattern="string"==typeof e?new RegExp(`^${e}`):e,this.getAssetUrl=n,t=t?t.endsWith("/")?t:t+"/":"",this.matcher=new RegExp(`^${t}(?:(.*)/)?(.*)$`)}fetchMessageBundle(t,e){return async function(t,e,r,n){const s=e.exec(r);if(!s)throw new w("esri-intl:invalid-bundle",`Bundle id "${r}" is not compatible with the pattern "${e}"`);const o=s[1]?`${s[1]}/`:"",a=s[2],i=l(n),c=`${o}${a}.json`,u=i?`${o}${a}_${i}.json`:c;let m;try{m=await x(t(u))}catch(e){if(u===c)throw new w("intl:unknown-bundle",`Bundle "${r}" cannot be loaded`,{error:e});try{m=await x(t(c))}catch(t){throw new w("intl:unknown-bundle",`Bundle "${r}" cannot be loaded`,{error:t})}}return m}(this.getAssetUrl,this.matcher,t,e)}}function U(t){return new B(t)}const R={};h(U({pattern:"esri/",location:k}));export{U as createJSONLoader,$ as substitute};
