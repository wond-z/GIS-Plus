"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[9231],{89231:(e,t,a)=>{a.r(t),a.d(t,{applyEdits:()=>h});var r,s,n=a(23761),i=a(15324),o=a(60991),l=a(76506),u=a(71252),d=a(32101),p=a(10279),c=a(95533),f=a(65398);async function h(e,t,a,s={}){let n,d;const p={edits:a,result:new Promise(((e,t)=>{n=e,d=t}))};e.emit("apply-edits",p);try{const{results:d,edits:p}=await async function(e,t,a,s){if(await e.load(),!function(e){return e&&null!=e.applyEdits}(t))throw new o.Z(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!e.editingEnabled)throw new o.Z(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const{edits:n,options:l}=await async function(e,t,a){const s=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),n=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments),l=(0,u.i)(e.infoFor3D);if(!t||!s&&!n)throw new o.Z(`${e.type}-layer:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!e.capabilities.data.isVersioned&&a&&a.gdbVersion)throw new o.Z(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!e.capabilities.editing.supportsRollbackOnFailure&&a&&a.rollbackOnFailureEnabled)throw new o.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!e.capabilities.editing.supportsGlobalId&&a&&a.globalIdUsed)throw new o.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!e.capabilities.editing.supportsGlobalId&&n)throw new o.Z(`${e.type}-layer:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if((!a||!a.globalIdUsed)&&n)throw new o.Z(`${e.type}-layer:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");const d={...a};if(null!=d.rollbackOnFailureEnabled||e.capabilities.editing.supportsRollbackOnFailure||(d.rollbackOnFailureEnabled=!0),!1===d.rollbackOnFailureEnabled&&"original-and-current-features"===d.returnServiceEditsOption)throw new o.Z(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true.");if(!e.capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference&&d.returnServiceEditsInSourceSR)throw new o.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(d.returnServiceEditsInSourceSR&&"original-and-current-features"!==d.returnServiceEditsOption)throw new o.Z(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsOption' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const p={...t};if(p.addFeatures=t&&i.Z.isCollection(t.addFeatures)?t.addFeatures.toArray():p.addFeatures||[],p.updateFeatures=t&&i.Z.isCollection(t.updateFeatures)?t.updateFeatures.toArray():p.updateFeatures||[],p.deleteFeatures=t&&i.Z.isCollection(t.deleteFeatures)?t.deleteFeatures.toArray():p.deleteFeatures||[],p.addFeatures.length&&!e.capabilities.operations.supportsAdd)throw new o.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support adding features.");if(p.updateFeatures.length&&!e.capabilities.operations.supportsUpdate)throw new o.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support updating features.");if(p.deleteFeatures.length&&!e.capabilities.operations.supportsDelete)throw new o.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support deleting features.");p.addAttachments=p.addAttachments||[],p.updateAttachments=p.updateAttachments||[],p.deleteAttachments=p.deleteAttachments||[],p.addFeatures=p.addFeatures.map(b),p.updateFeatures=p.updateFeatures.map(b),p.addAssets=[];const c=a&&a.globalIdUsed||l;return p.addFeatures.forEach((t=>function(e,t,a){y(e,t,a)}(t,e,c))),p.updateFeatures.forEach((t=>function(e,t,a){if(y(e,t,a),"geometry"in e&&(0,u.i)(e.geometry)&&!t.capabilities.editing.supportsGeometryUpdate)throw new o.Z(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}(t,e,c))),p.deleteFeatures.forEach((t=>function(e,t,a){y(e,t,a)}(t,e,c))),p.addAttachments.forEach((t=>g(t,e))),p.updateAttachments.forEach((t=>g(t,e))),l&&await async function(e,t){if((0,u.a)(t.infoFor3D))return;const{infoFor3D:a}=t;let s=!1;for(const e of a.editFormats)if(e===r.GLTF_BINARY){s=!0;break}const n=[];for(const a of e.addFeatures)n.push(w(a,e,t,s));for(const a of e.updateFeatures)n.push(w(a,e,t,s));const i=await Promise.allSettled(n);for(const e of i)if("rejected"===e.status)throw e.reason}(p,e),{edits:await m(p),options:d}}(e,a,s);return n.addFeatures.length||n.updateFeatures.length||n.deleteFeatures.length||n.addAttachments.length||n.updateAttachments.length||n.deleteAttachments.length?{edits:n,results:await t.applyEdits(n,l)}:{edits:n,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}(e,t,a,s),c=e=>e.filter((e=>!e.error)).map(l.d9),h={edits:p,addedFeatures:c(d.addFeatureResults),updatedFeatures:c(d.updateFeatureResults),deletedFeatures:c(d.deleteFeatureResults),addedAttachments:c(d.addAttachmentResults),updatedAttachments:c(d.updateAttachmentResults),deletedAttachments:c(d.deleteAttachmentResults)};return d.editedFeatureResults?.length&&(h.editedFeatures=d.editedFeatureResults),(h.addedFeatures.length||h.updatedFeatures.length||h.deletedFeatures.length||h.addedAttachments.length||h.updatedAttachments.length||h.deletedAttachments.length)&&(e.emit("edits",h),(0,f.i)(e)&&f.e.emit("edits",{layer:e,event:h})),n(h),d}catch(e){throw d(e),e}}function y(e,t,a){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new o.Z(`${t.type}-layer:invalid-parameter`,"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in e)&&!e.globalId)throw new o.Z(`${t.type}-layer:invalid-parameter`,"'globalId' of the feature should be passed when 'globalIdUsed' is true")}if("geometry"in e&&(0,u.i)(e.geometry)){if(e.geometry.hasZ&&!1===t.capabilities.data.supportsZ)throw new o.Z(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities.data.supportsM)throw new o.Z(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function g(e,t){const{feature:a,attachment:r}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new o.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new o.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!r.globalId)throw new o.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!r.data&&!r.uploadId)throw new o.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(r.data instanceof File&&r.data.name||r.name))throw new o.Z(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities.editing.supportsUploadWithItemId&&r.uploadId)throw new o.Z(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof r.data){const e=(0,d.sJ)(r.data);if(e&&!e.isBase64)throw new o.Z(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}async function m(e){const t=e.addFeatures,a=e.updateFeatures,r=t.concat(a).map((e=>e.geometry)),s=await(0,c.aX)(r),n=t.length,i=a.length;return s.slice(0,n).forEach(((t,a)=>e.addFeatures[a].geometry=t)),s.slice(n,n+i).forEach(((t,a)=>e.updateFeatures[a].geometry=t)),e}function b(e){const t=new n.Z;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}async function w(e,t,a,s){if((0,u.a)(e.geometry)||"mesh"!==e.geometry.type)return;const n=e.geometry,i=a.globalIdField;if((0,u.i)(a.parsedUrl)&&(0,u.i)(n.external)&&Array.isArray(n.external.source)&&1===n.external.source.length&&"source"in n.external.source[0]&&"string"==typeof n.external.source[0].source&&n.external.source[0].source.startsWith(a.parsedUrl.path))return;if(!s)throw new o.Z(`${a.type}-layer:binary-gltf-asset-not-supported`,"3DObjectFeatureLayer requires binary glTF (.glb) support for updating mesh geometry.");const l=await n.toBinaryGLTF(),d=await l.buffer(),c=`{${(0,p.g)()}}`,f=`${c}.glb`;t.addAssets.push({featureGlobalId:e.getAttribute(i),assetMapGlobalId:c,assetName:f,flags:0,data:d.data,mimeType:d.type,assetType:r.GLTF_BINARY,feature:e})}a(74569),a(91306),a(71552),a(92143),a(31450),a(40642),a(21801),a(34250),a(60474),a(66396),a(86656),a(17533),a(6540),a(73796),a(12047),a(21972),a(91055),a(19657),a(6906),a(50406),a(97714),a(60947),a(2906),a(91597),a(86787),a(35132),a(89623),a(84069),a(44567),a(98380),a(92896),a(22781),a(57251),a(32422),a(86748),a(66122),a(14249),a(60217),a(29107),a(30574),a(2157),a(25977),a(58076),a(98242),a(7471),a(54414),a(59465),a(1648),a(8925),a(33921),a(3482),a(45154),a(16769),a(93603),a(15438),a(593),a(85699),a(55531),a(96055),a(47776),a(18033),a(6331),a(62048),a(56890),a(30493),a(4292),a(75626),a(72652),a(29641),a(70821),a(3296),a(34229),a(37029),a(75067),a(89914),a(96467),a(63571),a(30776),a(48027),a(54174),a(82426),a(72836),a(29794),a(63130),a(25696),a(98402),a(42775),a(95834),a(34394),a(57150),a(76726),a(20444),a(76393),a(78548),a(2497),a(49906),a(46527),a(11799),a(48649),a(59877),a(9960),a(30823),a(53326),a(92482),a(5853),a(39141),a(38742),a(48243),a(34635),a(10401),a(49900),a(88762),a(82058),a(81184),a(33101),a(67477),a(78533),a(74653),a(91091),a(58943),a(70737),a(36834),a(8487),a(17817),a(90814),a(15459),a(97189),a(61847),a(28212),a(16955),a(22401),a(48699),a(77894),a(55187),a(8586),a(44509),a(69814),a(11305),a(62259),a(44790),a(5909),a(60669),a(48208),a(51589),a(94751),a(95307),a(94216),a(81731),(s=r||(r={})).GLTF_BINARY="3D_glb",s.GLTF_JSON="3D_gltf"},94751:(e,t,a)=>{a.d(t,{c:()=>i,g:()=>u,o:()=>o,u:()=>l});var r=a(92896),s=a(60947),n=a(32422);const i={102100:{maxX:20037508.342788905,minX:-20037508.342788905,plus180Line:new r.Z({paths:[[[20037508.342788905,-20037508.342788905],[20037508.342788905,20037508.342788905]]],spatialReference:s.Z.WebMercator}),minus180Line:new r.Z({paths:[[[-20037508.342788905,-20037508.342788905],[-20037508.342788905,20037508.342788905]]],spatialReference:s.Z.WebMercator})},4326:{maxX:180,minX:-180,plus180Line:new r.Z({paths:[[[180,-180],[180,180]]],spatialReference:s.Z.WGS84}),minus180Line:new r.Z({paths:[[[-180,-180],[-180,180]]],spatialReference:s.Z.WGS84})}};function o(e,t){return Math.ceil((e-t)/(2*t))}function l(e,t){const a=u(e);for(const e of a)for(const a of e)a[0]+=t;return e}function u(e){return(0,n.oU)(e)?e.rings:e.paths}},95307:(e,t,a)=>{a.d(t,{c:()=>l,s:()=>u}),a(74569);var r=a(82058),s=a(32422),n=a(94216),i=a(32101),o=a(81731);async function l(e,t,a,i){const o=(0,n.p)(e),l=t[0].spatialReference,u={...i,query:{...o.query,f:"json",sr:JSON.stringify(l),target:JSON.stringify({geometryType:(0,s.Ji)(t[0]),geometries:t}),cutter:JSON.stringify(a)}},d=await(0,r.default)(o.path+"/cut",u),{cutIndexes:p,geometries:c=[]}=d.data;return{cutIndexes:p,geometries:c.map((e=>{const t=(0,s.im)(e);return t.spatialReference=l,t}))}}async function u(e,t,a){const n="string"==typeof e?(0,i.mN)(e):e,l=t[0].spatialReference,u=(0,s.Ji)(t[0]),d={...a,query:{...n.query,f:"json",sr:l.wkid?l.wkid:JSON.stringify(l),geometries:JSON.stringify((0,o.e)(t))}},{data:p}=await(0,r.default)(n.path+"/simplify",d);return(0,o.d)(p.geometries,u,l)}},94216:(e,t,a)=>{a.d(t,{a:()=>n,e:()=>o,p:()=>i}),a(31450),a(88762);var r=a(76506),s=a(32101);function n(e,t){return t?{...t,query:{...e,...t.query}}:{query:e}}function i(e){return"string"==typeof e?(0,s.mN)(e):(0,r.d9)(e)}function o(e,t,a){const r={};for(const s in e){if("declaredClass"===s)continue;const n=e[s];if(null!=n&&"function"!=typeof n)if(Array.isArray(n)){r[s]=[];for(let e=0;e<n.length;e++)r[s][e]=o(n[e])}else if("object"==typeof n)if(n.toJSON){const e=n.toJSON(a&&a[s]);r[s]=t?e:JSON.stringify(e)}else r[s]=t?n:JSON.stringify(n);else r[s]=n}return r}a(82058)},81731:(e,t,a)=>{a.d(t,{d:()=>n,e:()=>s});var r=a(32422);function s(e){return{geometryType:(0,r.Ji)(e[0]),geometries:e.map((e=>e.toJSON()))}}function n(e,t,a){const s=(0,r.q9)(t);return e.map((e=>{const t=s.fromJSON(e);return t.spatialReference=a,t}))}},95533:(e,t,a)=>{a.d(t,{aX:()=>g});var r=a(31450),s=a(60991),n=a(92143),i=a(71252),o=a(44567),l=a(92896),u=a(94751),d=a(60947),p=a(35132),c=a(95307);a(71552),a(76506),a(40642),a(34250),a(91306),a(60474),a(66396),a(86656),a(17533),a(6540),a(2906),a(21801),a(73796),a(12047),a(21972),a(91055),a(19657),a(6906),a(50406),a(97714),a(91597),a(86787),a(89623),a(98380),a(32422),a(84069),a(74569),a(22781),a(57251),a(82058),a(88762),a(32101),a(94216),a(81731);const f=n.L.getLogger("esri.geometry.support.normalizeUtils");function h(e,t,a){if(t){const t=function(e,t){if(!(e instanceof l.Z||e instanceof o.Z)){const e="straightLineDensify: the input geometry is neither polyline nor polygon";throw f.error(e),new s.Z(e)}const a=(0,u.g)(e),r=[];for(const e of a){const a=[];r.push(a),a.push([e[0][0],e[0][1]]);for(let r=0;r<e.length-1;r++){const s=e[r][0],n=e[r][1],i=e[r+1][0],o=e[r+1][1],l=Math.sqrt((i-s)*(i-s)+(o-n)*(o-n)),u=(o-n)/l,d=(i-s)/l,p=l/t;if(p>1){for(let e=1;e<=p-1;e++){const r=e*t,i=d*r+s,o=u*r+n;a.push([i,o])}const e=(l+Math.floor(p-1)*t)/2,r=d*e+s,i=u*e+n;a.push([r,i])}a.push([i,o])}}return function(e){return"polygon"===e.type}(e)?new o.Z({rings:r,spatialReference:e.spatialReference}):new l.Z({paths:r,spatialReference:e.spatialReference})}(e,1e6);e=(0,p.Sx)(t,!0)}return a&&(e=(0,u.u)(e,a)),e}function y(e,t,a){if(Array.isArray(e)){const r=e[0];if(r>t){const a=(0,u.o)(r,t);e[0]=r+a*(-2*t)}else if(r<a){const t=(0,u.o)(r,a);e[0]=r+t*(-2*a)}}else{const r=e.x;if(r>t){const a=(0,u.o)(r,t);e=e.clone().offset(a*(-2*t),0)}else if(r<a){const t=(0,u.o)(r,a);e=e.clone().offset(t*(-2*a),0)}}return e}async function g(e,t,a){if(!Array.isArray(e))return g([e],t);t&&"string"!=typeof t&&f.warn("normalizeCentralMeridian()","The url object is deprecated, use the url string instead");const s="string"==typeof t?t:t?.url??r.Z.geometryServiceUrl;let n,m,b,w,F,A,Z,v,I=0;const R=[],S=[];for(const t of e)if((0,i.a)(t))S.push(t);else if(n||(n=t.spatialReference,m=(0,d.g)(n),b=n.isWebMercator,A=b?102100:4326,w=u.c[A].maxX,F=u.c[A].minX,Z=u.c[A].plus180Line,v=u.c[A].minus180Line),m)if("mesh"===t.type)S.push(t);else if("point"===t.type)S.push(y(t.clone(),w,F));else if("multipoint"===t.type){const e=t.clone();e.points=e.points.map((e=>y(e,w,F))),S.push(e)}else if("extent"===t.type){const e=t.clone()._normalize(!1,!1,m);S.push(e.rings?new o.Z(e):e)}else if(t.extent){const e=t.extent,a=(0,u.o)(e.xmin,F)*(2*w);let r=0===a?t.clone():(0,u.u)(t.clone(),a);e.offset(a,0),e.intersects(Z)&&e.xmax!==w?(I=e.xmax>I?e.xmax:I,r=h(r,b),R.push(r),S.push("cut")):e.intersects(v)&&e.xmin!==F?(I=e.xmax*(2*w)>I?e.xmax*(2*w):I,r=h(r,b,360),R.push(r),S.push("cut")):S.push(r)}else S.push(t.clone());else S.push(t);let $=(0,u.o)(I,w),x=-90;const E=$,O=new l.Z;for(;$>0;){const e=360*$-180;O.addPath([[e,x],[e,-1*x]]),x*=-1,$--}if(R.length>0&&E>0){const t=function(e,t){let a=-1;for(let r=0;r<t.cutIndexes.length;r++){const s=t.cutIndexes[r],n=t.geometries[r],i=(0,u.g)(n);for(let e=0;e<i.length;e++){const t=i[e];t.some((a=>{if(a[0]<180)return!0;{let a=0;for(let e=0;e<t.length;e++){const r=t[e][0];a=r>a?r:a}a=Number(a.toFixed(9));const r=-360*(0,u.o)(a,180);for(let a=0;a<t.length;a++){const t=n.getPoint(e,a);n.setPoint(e,a,t.clone().offset(r,0))}return!0}}))}if(s===a){if("polygon"===e[0].type)for(const t of(0,u.g)(n))e[s]=e[s].addRing(t);else if("polyline"===e[0].type)for(const t of(0,u.g)(n))e[s]=e[s].addPath(t)}else a=s,e[s]=n}return e}(R,await(0,c.c)(s,R,O,a)),r=[],n=[];for(let a=0;a<S.length;a++){const s=S[a];if("cut"!==s)n.push(s);else{const s=t.shift(),o=e[a];(0,i.i)(o)&&"polygon"===o.type&&o.rings&&o.rings.length>1&&s.rings.length>=o.rings.length?(r.push(s),n.push("simplify")):n.push(b?(0,p.$)(s):s)}}if(!r.length)return n;const o=await(0,c.s)(s,r,a),l=[];for(let e=0;e<n.length;e++){const t=n[e];"simplify"!==t?l.push(t):l.push(b?(0,p.$)(o.shift()):o.shift())}return l}const L=[];for(let e=0;e<S.length;e++){const t=S[e];if("cut"!==t)L.push(t);else{const e=R.shift();L.push(!0===b?(0,p.$)(e):e)}}return L}}}]);